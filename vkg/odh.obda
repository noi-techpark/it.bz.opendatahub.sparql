[PrefixDeclaration]
:	        	http://noi.example.org/ontology/odh#
dc:	        	http://purl.org/dc/terms/
geo:    	 	http://www.opengis.net/ont/geosparql#
owl:    		http://www.w3.org/2002/07/owl#
rdf:	    	http://www.w3.org/1999/02/22-rdf-syntax-ns#
xml:    	   	http://www.w3.org/XML/1998/namespace
xsd:    	 	http://www.w3.org/2001/XMLSchema#
data:			https://kg.opendatahub.bz.it/data/
odh:			https://kg.opendatahub.bz.it/
obda:   		https://w3id.org/obda/vocabulary#
rdfs:   	  	http://www.w3.org/2000/01/rdf-schema#
sosa:   		http://www.w3.org/ns/sosa/
schema:	   	    http://schema.org/
qudt:	     	http://qudt.org/schema/qudt#
qudt-1-1:   	http://qudt.org/1.1/schema/qudt#
qudt-unit:   	http://qudt.org/vocab/unit#
qudt-1-1-unit:	http://qudt.org/1.1/vocab/unit#
sioc: 			http://rdfs.org/sioc/ns#
time:			http://www.w3.org/2006/time#

[MappingDeclaration] @collection [[
mappingId	Campground
target		odh:lodging-businesses/{Id} a schema:Campground .
source		SELECT "Id"
			FROM "v_accommodationsopen"
			WHERE "AccoTypeId" = 'Camping'

mappingId	LodgingBusiness
target		odh:lodging-businesses/{id} a schema:LodgingBusiness ; schema:name {de_name}@de , {it_name}@it , {en_name}@en ; schema:telephone {de_phone} ; schema:url <{url}> ; schema:starRating data:category/accommodation/{id}/{rating} ; sioc:has_container <https://kg.opendatahub.bz.it/lodging-businesses/> .
source		SELECT "Id" AS id, "AccoDetail-de-Name" AS de_name,  "AccoDetail-en-Name" AS en_name, "AccoDetail-it-Name" AS it_name, "AccoDetail-de-Phone" AS de_phone,
			"AccoCategoryId" as rating, "AccoDetail-de-Website" AS url
			FROM "v_accommodationsopen"

mappingId	Lodging business - geo
target		data:geo/accommodation/{id} a schema:GeoCoordinates , geo:Geometry ; schema:latitude {latitude} ; schema:elevation {altitude} ; schema:longitude {longitude} . odh:lodging-businesses/{id} schema:geo data:geo/accommodation/{id} ; geo:defaultGeometry data:geo/accommodation/{id} .
source		SELECT "Id" AS id, "Latitude" AS latitude, "Longitude" AS longitude, "Altitude" AS altitude
			FROM "v_accommodationsopen"

mappingId	LodgingBusiness - address
target		data:address/accommodation/{id} a schema:PostalAddress ; schema:name {de_name}@de , {it_name}@it , {en_name}@en ; schema:streetAddress {de_street}@de , {it_street}@it , {en_street}@en ; schema:postalCode {de_zip} ; schema:addressLocality {de_city}@de , {it_city}@it , {en_city}@en . odh:lodging-businesses/{id} schema:address data:address/accommodation/{id} .
source		SELECT "Id" AS id,
			"AccoDetail-de-City" AS de_city, "AccoDetail-de-Zip" AS de_zip, "AccoDetail-de-Street" AS de_street,
			"AccoDetail-it-City" AS it_city, "AccoDetail-it-Street" AS it_street,
			"AccoDetail-en-City" AS en_city, "AccoDetail-en-Street" AS en_street,
			"AccoDetail-de-Name" AS de_name,  "AccoDetail-en-Name" AS en_name, "AccoDetail-it-Name" AS it_name, "AccoDetail-de-Phone" AS phone
			FROM "v_accommodationsopen"

mappingId	PensionHotel
target		odh:lodging-businesses/{id} a schema:Hotel .
source		SELECT "Id" AS id
			FROM "v_accommodationsopen"
			WHERE "AccoTypeId" = 'HotelPension'

mappingId	Hostel
target		odh:lodging-businesses/{id} a schema:Hostel .
source		SELECT "Id" AS id
			FROM "v_accommodationsopen"
			WHERE "AccoTypeId" = 'Youth'

mappingId	BedAndBreakfast
target		odh:lodging-businesses/{id} a schema:BedAndBreakfast .
source		SELECT "Id" AS id
			FROM "v_accommodationsopen"
			WHERE "AccoTypeId" = 'BedBreakfast'

mappingId	POI
target		data:poi/{Id} a schema:Place ; rdfs:label {Shortname}^^xsd:string ; schema:name {Shortname}^^xsd:string  .
source		SELECT "Id", "Shortname" FROM v_poisopen

mappingId	Area
target		odh:areas/{Id} a schema:AdministrativeArea ; rdfs:label {Shortname}^^xsd:string ; schema:name {Shortname}^^xsd:string ; sioc:has_container <https://kg.opendatahub.bz.it/areas/> .
source		SELECT "Id", "Shortname" FROM v_areas

mappingId	POI-geo
target         data:poi/{poisopen_Id} schema:geo data:geo/poi/{poisopen_Id} ; geo:defaultGeometry data:geo/poi/{poisopen_Id} . data:geo/poi/{poisopen_Id} a schema:GeoCoordinates, geo:Geometry ; schema:longitude {Longitude} ; schema:latitude {Latitude} ; schema:elevation {Altitude} .
source         SELECT * FROM "v_poisopen_GpsInfo"


mappingId	Event EURAC NOI
target		odh:events/euracnoi/{Id} a schema:Event ; schema:startDate {StartDate}^^xsd:dateTime ; schema:endDate {EndDate}^^xsd:dateTime ; schema:name {EventDescriptionIT}@it , {EventDescriptionDE}@de , {EventDescriptionEN}@en ; schema:description {EventDescriptionIT}@it , {EventDescriptionDE}@de , {EventDescriptionEN}@en ; schema:location data:location/euracnoi/{EventLocation}/{AnchorVenue} ; schema:organizer data:organization/event/euracnoi/{Id} , data:contact/event/euracnoi/{Id} ; sioc:has_container <https://kg.opendatahub.bz.it/events/> .
source		SELECT "Id", "StartDate", "EndDate", "EventDescriptionIT", "EventDescriptionEN", "AnchorVenue", "EventLocation", "EventDescriptionDE"
			FROM v_eventeuracnoi

mappingId	Event Organization
target		data:organization/event/euracnoi/{Id} a schema:Organization ; schema:name {CompanyName} .
source		select "Id", "CompanyName"
			from v_eventeuracnoi

mappingId	Event Location
target		data:location/euracnoi/{EventLocation}/{AnchorVenue} a schema:MeetingRoom ; schema:name {AnchorVenue} ; schema:containedInPlace data:place/euracnoi/{EventLocation} .
source		select "Id", "AnchorVenue", "EventLocation"
			from v_eventeuracnoi

mappingId	Event Contact Person
target		data:contact/event/euracnoi/{Id} a schema:Person ; schema:familyName {ContactLastName} ; schema:givenName {ContactFirstName} ; schema:email <{email}> ; schema:telephone {ContactPhone} ; schema:worksFor data:organization/event/euracnoi/{Id} .
source		select "Id", "ContactFirstName", "ContactLastName", concat('mailto:',"ContactEmail") as email, "ContactPhone"
			from v_eventeuracnoi

mappingId	Event Organization - company address
target		data:address/organization/event/euracnoi/{Id} a schema:PostalAddress ; schema:streetAddress {CompanyAddressLine1} ; schema:postalCode {CompanyPostalCode} ; schema:addressLocality {CompanyCity} ; schema:addressCountry {CompanyCountry} . data:organization/event/euracnoi/{Id} schema:address data:address/organization/event/euracnoi/{Id} .
source		select "Id", "CompanyAddressLine1", "CompanyCity", "CompanyCountry", "CompanyPostalCode"
			from v_eventeuracnoi

mappingId	SkiResort
target		odh:ski-resorts/{Id} a schema:SkiResort ; rdfs:label {Detail-en-Header}^^xsd:string ; schema:name {Detail-en-Header}^^xsd:string  ; schema:image <{SkiAreaMapURL}> ; schema:isPartOf odh:ski-regions/{SkiRegionId} ; schema:geo data:geo/skiResort/{Id} ; geo:defaultGeometry data:geo/skiResort/{Id} ; sioc:has_container <https://kg.opendatahub.bz.it/ski-resorts/> .
source		SELECT "Id", "Shortname", "Detail-en-Header", "SkiAreaMapURL", "SkiRegionId" FROM v_skiareasopen

mappingId	SkiResort - geo
target		data:geo/skiResort/{id} a schema:GeoCoordinates , geo:Geometry ; schema:latitude {latitude} ; schema:longitude {longitude} ; schema:elevation {AltitudeTo} . odh:ski-resorts/{id} schema:geo data:geo/skiResort/{id} ; geo:defaultGeometry data:geo/skiResort/{id} .
source		SELECT "Id" AS id, "Latitude" AS latitude, "Longitude" AS longitude, "AltitudeTo" AS AltitudeTo
			FROM "v_skiareasopen"

mappingId	SkiRegion
target		odh:ski-regions/{Id} a :SkiRegion ; rdfs:label {Shortname}^^xsd:string ; schema:name {Shortname}^^xsd:string  ; schema:elevation {Altitude}^^xsd:decimal .
source		SELECT "Id", "Shortname", "Altitude" FROM v_skiregionsopen

mappingId	SkiRegion - geo
target		data:geo/skiRegion/{id} a schema:GeoCoordinates , geo:Geometry ; schema:latitude {latitude} ; schema:longitude {longitude} . odh:ski-regions/{id} schema:geo data:geo/skiRegion/{id} ; geo:defaultGeometry data:geo/skiResort/{id} .
source		SELECT "Id" AS id, "Latitude" AS latitude, "Longitude" AS longitude, "Altitude" AS altitude
			FROM "v_skiregionsopen"

mappingId	SkiResort_Area
target		odh:ski-resorts/{Id} schema:isPartOf odh:areas/{data} .
source		SELECT "Id", "data" FROM "v_skiareasopen_AreaId"

mappingId	MedicalOrganization
target		data:poi/{Id} a schema:MedicalOrganization .
source		SELECT * FROM v_poisopen WHERE "Type" = 'Ã„rzte, Apotheken'

mappingId	Theater
target		data:poi/{Id} a schema:PerformingArtsTheater .
source		SELECT * FROM v_poisopen WHERE "SubType" = 'Theater'

mappingId	Activity
target		data:Activity/{SubType} a :Activity ; rdfs:label {SubType}^^xsd:string ; schema:name {SubType}^^xsd:string ; :activityType {Type}^^xsd:string .
source		SELECT "Type", "SubType"
			FROM v_smgpoisopen

mappingId	Wine
target		data:wine/{Id} a :Wine ; rdfs:label {Shortname} ; schema:name {Shortname} ; :wineVintageYear {Vintage} ; :wineAwardYear {Awardyear} .
source		SELECT * FROM v_wines

mappingId	WineAward
target		data:wine/{Id} a :Wine ; :receivesWineAward {data}^^xsd:string .
source		SELECT * FROM "v_wines_Awards"

mappingId	Place EURAC NOI
target		data:place/euracnoi/{EventLocation} a schema:Place .
source		select "EventLocation"
			from v_eventeuracnoi

mappingId	Food establishments
target		odh:food-establishments/{Id} a schema:FoodEstablishment ; schema:name {Detail-de-Title}@de , {Detail-it-Title}@it , {Detail-en-Title}@en ; schema:geo data:geo/gastronomy/{Id} ; geo:defaultGeometry data:geo/gastronomy/{Id} ; schema:address data:address/gastronomy/{Id} ; schema:telephone {ContactInfos-de-Phonenumber} ; schema:hasMenu data:menu/gastronomy/{Id} ; sioc:has_container <https://kg.opendatahub.bz.it/food-establishments/> .
source		SELECT * FROM v_gastronomiesopen

mappingId	Food establishments - geo
target		data:geo/gastronomy/{Id} a schema:GeoCoordinates , geo:Geometry ; schema:latitude {Latitude} ; schema:elevation {Altitude} ; schema:longitude {Longitude} .
source		SELECT * FROM v_gastronomiesopen

mappingId	Food establishments - address
target		data:address/gastronomy/{Id} a schema:PostalAddress ; schema:streetAddress {ContactInfos-de-Address}@de , {ContactInfos-it-Address}@it , {ContactInfos-en-Address}@en ; schema:postalCode {ContactInfos-de-ZipCode} ; schema:addressLocality {ContactInfos-de-City}@de , {ContactInfos-it-City}@it , {ContactInfos-en-City}@en .
source		SELECT * FROM v_gastronomiesopen

mappingId	Food establishment-municipality
target		odh:food-establishments/{Id} schema:containedInPlace odh:municipalities/{IstatNumber} . 
source		SELECT a."Id", m."IstatNumber" FROM "v_gastronomiesopen" a, "v_municipalitiesopen" m WHERE a."LocationInfo-MunicipalityInfo-Id" = m."Id"

mappingId	Restaurants
target		odh:food-establishments/{gastronomiesopen_Id} a schema:Restaurant .
source		SELECT *
			FROM "v_gastronomiesopen_CategoryCodes"
			WHERE "Shortname" = 'Restaurant' OR "Shortname" = 'Gasthof'

mappingId	Bar/pub
target		odh:food-establishments/{gastronomiesopen_Id} a schema:BarOrPub .
source		SELECT *
			FROM "v_gastronomiesopen_CategoryCodes"
			WHERE "Shortname" = 'Bar / Coffee Shop / Bistro' OR "Shortname" = 'Pub / Disco' OR "Shortname" = 'Braugarten'  OR "Shortname" = 'Apres Ski'

mappingId	Fast food
target		odh:food-establishments/{gastronomiesopen_Id} a schema:FastFoodRestaurant .
source		SELECT *
			FROM "v_gastronomiesopen_CategoryCodes"
			WHERE "Shortname" = 'Schnellimbiss'

mappingId	Winery
target		odh:food-establishments/{gastronomiesopen_Id} a schema:Winery .
source		SELECT *
			FROM "v_gastronomiesopen_CategoryCodes"
			WHERE "Shortname" = 'Vinothek / Weinhaus / Taverne'

mappingId	Ice cream shops
target		odh:food-establishments/{gastronomiesopen_Id} a schema:IceCreamShop .
source		SELECT *
			FROM "v_gastronomiesopen_CategoryCodes"
			WHERE "Shortname" = 'Eisdiele'

mappingId	Food establishments - URL
target		odh:food-establishments/{Id} schema:sameAs <{url}> ; schema:url <{url}> .
source		SELECT "Id",  NULLIF("ContactInfos-de-Url", '') AS url FROM v_gastronomiesopen

mappingId	Pizzeria
target		odh:food-establishments/{gastronomiesopen_Id} a :Pizzeria .
source		SELECT *
			FROM "v_gastronomiesopen_CategoryCodes"
			WHERE "Shortname" = 'Pizzeria'

mappingId	Mountain restaurant
target		odh:food-establishments/{gastronomiesopen_Id} a :MountainRestaurant .
source		SELECT *
			FROM "v_gastronomiesopen_CategoryCodes"
			WHERE "Shortname" = 'Alm'

mappingId	SkihÃ¼tte
target		odh:food-establishments/{gastronomiesopen_Id} a :SkiHÃ¼tte .
source		SELECT *
			FROM "v_gastronomiesopen_CategoryCodes"
			WHERE "Shortname" = 'SkihÃ¼tte'

mappingId	Mensa
target		odh:food-establishments/{gastronomiesopen_Id} a :Canteen .
source		SELECT *
			FROM "v_gastronomiesopen_CategoryCodes"
			WHERE "Shortname" = 'Mensa'

mappingId	AprÃ¨s ski
target		odh:food-establishments/{gastronomiesopen_Id} a :AprÃ¨sSki .
source		SELECT *
			FROM "v_gastronomiesopen_CategoryCodes"
			WHERE "Shortname" = 'Apres Ski'

mappingId	Jausenstation
target		odh:food-establishments/{gastronomiesopen_Id} a :Jausenstation .
source		SELECT *
			FROM "v_gastronomiesopen_CategoryCodes"
			WHERE "Shortname" = 'Jausenstation'

mappingId	Beer garden
target		odh:food-establishments/{gastronomiesopen_Id} a :BeerGarden .
source		SELECT *
			FROM "v_gastronomiesopen_CategoryCodes"
			WHERE "Shortname" = 'Braugarten'

mappingId	Lodging Business - aggregate rating
target		data:rating/trustyou/{id} a schema:AggregateRating ; schema:author data:author/trustyou ; schema:bestRating "100"^^xsd:integer ; schema:ratingValue {score}^^xsd:integer ; schema:reviewCount {reviews}^^xsd:integer .
source		select "Id" as id, "TrustYouScore"/10 as  score , "TrustYouResults" as reviews from "v_accommodationsopen" where "TrustYouActive"=true and "TrustYouScore" > 0

mappingId	Lodging Business -hasAggregateRating
target		odh:lodging-businesses/{id} schema:aggregateRating data:rating/trustyou/{id} .
source		select "Id" as id from "v_accommodationsopen" where "TrustYouActive"=true and "TrustYouScore" > 0

mappingId	MAPID-9dbd9116f9f84c78961099f0004a9690
target		data:author/trustyou a schema:Organization ; schema:name "Trust you"^^xsd:string ; schema:url <https://www.trustyou.com/> .
source		select  1

mappingId	AccomodationRating
target		data:category/accommodation/{id}/{rating} a schema:Rating ; schema:ratingValue {value}^^xsd:decimal .
source		select "Id" as id,  "AccoCategoryId" as rating, (CASE WHEN "AccoCategoryId" = '1flowers' or "AccoCategoryId" = '1stars'  or "AccoCategoryId" = '1suns'   THEN 1 WHEN "AccoCategoryId" = '2flowers' or "AccoCategoryId" = '2stars'  or "AccoCategoryId" = '2suns'   THEN 2  WHEN "AccoCategoryId" = '3flowers' or "AccoCategoryId" = '3stars'  or "AccoCategoryId" = '3suns'  THEN 3 WHEN "AccoCategoryId" = '3sstars' THEN 3.5  WHEN "AccoCategoryId" = '4flowers' or "AccoCategoryId" = '4stars'  or "AccoCategoryId" = '4suns'   THEN 4 WHEN "AccoCategoryId" = '4sstars' THEN 4.5  WHEN "AccoCategoryId" = '5flowers' or "AccoCategoryId" = '5stars'  or "AccoCategoryId" = '5suns'   THEN 5 ELSE NULL END ) as value FROM "v_accommodationsopen"

mappingId	Price range
target		odh:lodging-businesses/{id} schema:priceRange {value}^^xsd:string .
source		select "Id" as id,  (CASE WHEN "AccoCategoryId" = '1flowers' or "AccoCategoryId" = '1stars'  or "AccoCategoryId" = '1suns' or "AccoCategoryId" = '2flowers' or "AccoCategoryId" = '2stars'  or "AccoCategoryId" = '2suns'   THEN 'â‚¬'  WHEN "AccoCategoryId" = '3flowers' or "AccoCategoryId" = '3stars'  or "AccoCategoryId" = '3suns' or "AccoCategoryId" = '3sstars'  THEN 'â‚¬â‚¬'  WHEN "AccoCategoryId" = '4flowers' or "AccoCategoryId" = '4stars'  or "AccoCategoryId" = '4suns'   THEN 'â‚¬â‚¬â‚¬'  WHEN "AccoCategoryId" = '4sstars' or "AccoCategoryId" = '5flowers' or "AccoCategoryId" = '5stars'  or "AccoCategoryId" = '5suns' THEN 'â‚¬â‚¬â‚¬â‚¬' ELSE NULL END ) as value FROM "v_accommodationsopen"

mappingId	road_segment_geom
target		data:road_segment/{id} geo:defaultGeometry data:road_segment/geometry/{id} . data:road_segment/geometry/{id} geo:asWKT {wkt}^^geo:wktLiteral .
source		SELECT id, ST_ASTEXT(linegeometry) AS wkt FROM intimev2.edge

mappingId	station
target		data:station/{id} a :Station ; :isActive {active} ; :isAvailable {available} ; rdfs:label {name}^^xsd:string ; schema:name {name}^^xsd:string ; :hasProvider {origin} ; :hasStationCode {stationcode} ; :hasStationType {stationtype}^^xsd:string .
source		SELECT * FROM intimev2.station WHERE active='t'

mappingId	station_geom
target		data:station/{id} geo:defaultGeometry data:station/geometry/{id} . data:station/geometry/{id} geo:asWKT {wkt}^^geo:wktLiteral .
source		SELECT id, ST_ASTEXT(pointprojection) AS wkt FROM intimev2.station WHERE pointprojection IS NOT NULL

mappingId	type_observableProperty
target		data:property/{id} a sosa:ObservableProperty ; rdfs:label {cname}^^xsd:string ; :hasUnit {cunit} ; :hasRType {rtype} ; rdfs:comment {description}^^xsd:string ; schema:name {cname} ; schema:description {description} .
source		SELECT * FROM intimev2.type

mappingId	Sensor
target		data:sensor/{type_id}/{station_id} a sosa:Sensor ; sosa:isHostedBy data:station/{station_id} .
source		SELECT * FROM intimev2.measurement

mappingId	measurement_observation
target		data:latest_observation/{id} a :LatestObservation ; sosa:resultTime {timestamp} ; sosa:hasResult data:latest_observation/result/{id} ; sosa:observedProperty data:property/{type_id} ; sosa:madeBySensor data:sensor/{type_id}/{station_id} ; :hasPeriodInSeconds {period} .
source		SELECT * FROM intimev2.measurement

mappingId	latest_measurement_phenomenon_mean
target		data:latest_observation/{id} sosa:phenomenonTime  data:phenomenonTime/latest_observation/{id} . data:phenomenonTime/latest_observation/{id} a time:Interval ; time:hasBeginning data:beginning/latest_observation/{id} ; time:hasEnd data:end/latest_observation/{id} . data:beginning/latest_observation/{id} a time:Instant ; time:inXSDDateTime {beginning_ts} . data:end/latest_observation/{id} a time:Instant ; time:inXSDDateTime {timestamp} .
source		SELECT me.id AS id, timestamp, (timestamp - concat("period", ' seconds')::interval)::timestamp as beginning_ts 
            FROM intimev2.measurement me, intimev2.type t 
			WHERE me.type_id=t.id AND t.rtype IN ('Mean', 'Mittelwerte')

mappingId	measurement_history_observation
target		data:observation/{id} a :HistoricalObservation ; sosa:resultTime {timestamp} ; sosa:hasResult data:observation/result/{id} ; sosa:observedProperty data:property/{type_id} ; sosa:madeBySensor data:sensor/{type_id}/{station_id} ; :hasPeriodInSeconds {period} .
source		SELECT * FROM intimev2.measurementhistory

mappingId	hist_measurement_phenomenon_mean
target		data:observation/{id} sosa:phenomenonTime data:phenomenonTime/observation/{id} . data:phenomenonTime/observation/{id} a time:Interval ; time:hasBeginning data:beginning/observation/{id} ; time:hasEnd data:end/observation/{id} . data:beginning/observation/{id} a time:Instant ; time:inXSDDateTime {beginning_ts} . data:end/observation/{id} a time:Instant ; time:inXSDDateTime {timestamp} .
source		SELECT me.id AS id, timestamp, (timestamp - concat("period", ' seconds')::interval)::timestamp as beginning_ts 
            FROM intimev2.measurementhistory me, intimev2.type t 
			WHERE me.type_id=t.id AND t.rtype IN ('Mean', 'Mittelwerte')

mappingId	result_observation
target		data:latest_observation/result/{id} a sosa:Result ; qudt:numericValue {double_value}^^xsd:double . 
source		SELECT * FROM intimev2.measurement

mappingId	result_history_observation
target		data:observation/result/{id} a sosa:Result ; qudt:numericValue {double_value}^^xsd:double . 
source		SELECT * FROM intimev2.measurementhistory

mappingId	result_observation_unit Percent
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:PERCENT.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('perc', '%', '[%]')

mappingId	result_observation_unit Watt per square metre 
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:W-PER-M2.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('W/m2', 'W/mq', 'W/mÂ²')

mappingId	result_observation_unit Gram per cubic metre 
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:GM-PER-M3.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('[g/m^3]')

mappingId	result_observation_unit Kilometre per hour
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:KiloM-PER-HR.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('[km/h]', 'km/h')

mappingId	result_observation_unit Millibar
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:MilliBAR.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('[mbar]')

mappingId	result_observation_unit Millimetre
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:MilliM.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('[mm]', 'mm')

mappingId	result_observation_unit Second
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:SEC.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('[s]','s','sec')

mappingId	result_observation_unit Micrometre
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:MicroM.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('[uM]')

mappingId	result_observation_unit Degree Celsius
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:DegreeCelsius.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('Â°C','[Â°C]')

mappingId	result_observation_unit Centimetre
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:CentiM.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('cm')

mappingId	result_observation_unit HectoPascal
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:HectoPA.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('hPa')

mappingId	result_observation_unit Kilogram
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:KiloGM . 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('kg')

mappingId	result_observation_unit Kilometre
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:KiloM . 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('km')

mappingId	result_observation_unit Metre
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:M . 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('m')

mappingId	result_observation_unit Metre per second
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:M-PER-SEC. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('m/s', 'm/sec')

mappingId	result_observation_unit Milligram per litre
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:MilliGM-PER-L. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('mg/l')

mappingId	result_observation_unit Milligram per cubic metre
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:MilliGM-PER-M3. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('mg/mÂ³')

mappingId	result_observation_unit MilliSecond
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:MilliSEC. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('ms')

mappingId	result_observation_unit  Cubic metre per second
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:M3-PER-SEC. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('mÂ³/s')

mappingId	result_observation_unit  Nanogram per cubic metre
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:NanoGM-PER-M3. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('ng/mÂ³')

mappingId	result_observation_unit Number
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:NUM.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('nr.', 'n', 'number')

mappingId	result_observation_unit  Parts per billion
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:PPB. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('ppb')

mappingId	result_observation_unit  Parts per millon
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:PPM. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('ppm')

mappingId	result_observation_unit Microgram per cubic metre
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:MicroGM-PER-M3.
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('Âµg/mÂ³', 'ug/m3')

mappingId	result_observation_unit  Microsievert per hour
target		data:latest_observation/result/{m_id} qudt:unit qudt-unit:MicroSV-PER-HR. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('ÂµSv/h')

mappingId	result_observation_unit  Milligram per millic
target		data:latest_observation/result/{m_id} qudt:unit :MiliGM-PER-MilliC. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('mg/mc')

mappingId	result_observation_unit  V
target		data:latest_observation/result/{m_id} qudt:unit :V. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('V')

mappingId	result_observation_unit  Boolean
target		data:latest_observation/result/{m_id} qudt:unit :Boolean. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('boolean')

mappingId	result_observation_unit Gram per kilometre per hour
target		data:latest_observation/result/{m_id} qudt:unit :GM-PER-KiloM-PER-HR. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('g/km/h')

mappingId	result_observation_unit  Grid North
target		data:latest_observation/result/{m_id} qudt:unit :GridNorth. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('gN')

mappingId	result_observation_unit  Nanogram per millic
target		data:latest_observation/result/{m_id} qudt:unit :NanoGM-PER-MilliC. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('ng/mc')

mappingId	result_observation_unit  Number per kilometre
target		data:latest_observation/result/{m_id} qudt:unit :NUM-PER-KiloM. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('nr/km')

mappingId	result_observation_unit  Vehicles per hour
target		data:latest_observation/result/{m_id} qudt:unit :Vehicle-PER-HR. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('vehicles/hour')

mappingId	result_observation_unit  Vehicles per kilometre
target		data:latest_observation/result/{m_id} qudt:unit :Vehicle-PER-KiloM. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('vehicles/km')

mappingId	result_observation_unit  Degree
target		data:latest_observation/result/{m_id} qudt:unit :Degree. 
source		SELECT *, m.id AS m_id FROM intimev2.measurement m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('Â°', '[Â°]')

mappingId	result_history_observation_unit Percent
target		data:observation/result/{m_id} qudt:unit qudt-unit:PERCENT.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('perc', '%', '[%]')

mappingId	result_history_observation_unit Watt per square metre 
target		data:observation/result/{m_id} qudt:unit qudt-unit:W-PER-M2.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('W/m2', 'W/mq', 'W/mÂ²')

mappingId	result_history_observation_unit Gram per cubic metre 
target		data:observation/result/{m_id} qudt:unit qudt-unit:GM-PER-M3.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('[g/m^3]')

mappingId	result_history_observation_unit Kilometre per hour
target		data:observation/result/{m_id} qudt:unit qudt-unit:KiloM-PER-HR.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('[km/h]', 'km/h')

mappingId	result_history_observation_unit Millibar
target		data:observation/result/{m_id} qudt:unit qudt-unit:MilliBAR.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('[mbar]')

mappingId	result_history_observation_unit Millimetre
target		data:observation/result/{m_id} qudt:unit qudt-unit:MilliM.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('[mm]', 'mm')

mappingId	result_history_observation_unit Second
target		data:observation/result/{m_id} qudt:unit qudt-unit:SEC.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('[s]','s','sec')

mappingId	result_history_observation_unit Micrometre
target		data:observation/result/{m_id} qudt:unit qudt-unit:MicroM.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('[uM]')

mappingId	result_history_observation_unit Degree Celsius
target		data:observation/result/{m_id} qudt:unit qudt-unit:DegreeCelsius.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('Â°C','[Â°C]')

mappingId	result_history_observation_unit Centimetre
target		data:observation/result/{m_id} qudt:unit qudt-unit:CentiM.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('cm')

mappingId	result_history_observation_unit HectoPascal
target		data:observation/result/{m_id} qudt:unit qudt-unit:HectoPA.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('hPa')

mappingId	result_history_observation_unit Kilogram
target		data:observation/result/{m_id} qudt:unit qudt-unit:KiloGM . 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('kg')

mappingId	result_history_observation_unit Kilometre
target		data:observation/result/{m_id} qudt:unit qudt-unit:KiloM . 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('km')

mappingId	result_history_observation_unit Metre
target		data:observation/result/{m_id} qudt:unit qudt-unit:M . 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('m')

mappingId	result_history_observation_unit Metre per second
target		data:observation/result/{m_id} qudt:unit qudt-unit:M-PER-SEC. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('m/s', 'm/sec')

mappingId	result_history_observation_unit Milligram per litre
target		data:observation/result/{m_id} qudt:unit qudt-unit:MilliGM-PER-L. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('mg/l')

mappingId	result_history_observation_unit Milligram per cubic metre
target		data:observation/result/{m_id} qudt:unit qudt-unit:MilliGM-PER-M3. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('mg/mÂ³')

mappingId	result_history_observation_unit MilliSecond
target		data:observation/result/{m_id} qudt:unit qudt-unit:MilliSEC. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit = 'ms'

mappingId	result_history_observation_unit  Cubic metre per second
target		data:observation/result/{m_id} qudt:unit qudt-unit:M3-PER-SEC. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('mÂ³/s')

mappingId	result_history_observation_unit  Nanogram per cubic metre
target		data:observation/result/{m_id} qudt:unit qudt-unit:NanoGM-PER-M3. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('ng/mÂ³')

mappingId	result_history_observation_unit Number
target		data:observation/result/{m_id} qudt:unit qudt-unit:NUM.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('nr.', 'n', 'number')

mappingId	result_history_observation_unit  Parts per billion
target		data:observation/result/{m_id} qudt:unit qudt-unit:PPB. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('ppb')

mappingId	result_history_observation_unit  Parts per millon
target		data:observation/result/{m_id} qudt:unit qudt-unit:PPM. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('ppm')

mappingId	result_history_observation_unit Microgram per cubic metre
target		data:observation/result/{m_id} qudt:unit qudt-unit:MicroGM-PER-M3.
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('Âµg/mÂ³', 'ug/m3')

mappingId	result_history_observation_unit  Microsievert per hour
target		data:observation/result/{m_id} qudt:unit qudt-unit:MicroSV-PER-HR. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('ÂµSv/h')

mappingId	result_history_observation_unit  Microgram per cubic metre
target		data:observation/result/{m_id} qudt:unit qudt-unit:MicroGM-PER-M3. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('Âµg/mÂ³')

mappingId	result_history_observation_unit  Milligram per millic
target		data:observation/result/{m_id} qudt:unit :MiliGM-PER-MilliC. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('mg/mc')

mappingId	result_history_observation_unit  V
target		data:observation/result/{m_id} qudt:unit :V. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('V')

mappingId	result_history_observation_unit  Boolean
target		data:observation/result/{m_id} qudt:unit :Boolean. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('boolean')

mappingId	result_history_observation_unit Gram per kilometre per hour
target		data:observation/result/{m_id} qudt:unit :GM-PER-KiloM-PER-HR. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('g/km/h')

mappingId	result_history_observation_unit  Grid North
target		data:observation/result/{m_id} qudt:unit :GridNorth. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('gN')

mappingId	result_history_observation_unit  Nanogram per millic
target		data:observation/result/{m_id} qudt:unit :NanoGM-PER-MilliC. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('ng/mc')

mappingId	result_history_observation_unit  Number per kilometre
target		data:observation/result/{m_id} qudt:unit :NUM-PER-KiloM. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('nr/km')

mappingId	result_history_observation_unit  Vehicles per hour
target		data:observation/result/{m_id} qudt:unit :Vehicle-PER-HR. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('vehicles/hour')

mappingId	result_history_observation_unit  Vehicles per kilometre
target		data:observation/result/{m_id} qudt:unit :Vehicle-PER-KiloM. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('vehicles/km')

mappingId	result_history_observation_unit  Degree
target		data:observation/result/{m_id} qudt:unit :Degree. 
source		SELECT *, m.id AS m_id FROM intimev2.measurementhistory m, intimev2.type t
			WHERE m.type_id = t.id and t.cunit IN ('Â°', '[Â°]')

mappingId	road_segment
target		data:road_segment/{id} a :RoadSegment ; :hasOrigin data:station/{origin_id} ; :hasDestination data:station/{destination_id} .
source		SELECT * FROM intimev2.edge

mappingId	station_hosts
target		data:station/{id} a sosa:Platform , :Station ; sosa:isHostedBy data:station/{parent_id} ; :hasNOICategory odh:noi-station-categories/{stationtype} .
source		SELECT * FROM intimev2.station

mappingId	station_categories
target		odh:noi-station-categories/{stationtype} a :NOIStationCategory ; schema:name {stationtype} .
source		SELECT * FROM intimev2.station

mappingId	station-CarpoolingUser
target		data:station/{id} a :CarpoolingUser .
source		SELECT * FROM intimev2.station WHERE stationtype='CarpoolingUser'

mappingId	station-EChargingStation
target		data:station/{id} a :EChargingStation .
source		SELECT * FROM intimev2.station WHERE stationtype='EChargingStation'

mappingId	station-NOI-Place
target		data:station/{id} a :NOI-Place .
source		SELECT * FROM intimev2.station WHERE stationtype='NOI-Place'

mappingId	station-LinkStation
target		data:station/{id} a :LinkStation .
source		SELECT * FROM intimev2.station WHERE stationtype='LinkStation'

mappingId	station-VMS
target		data:station/{id} a :VMS .
source		SELECT * FROM intimev2.station WHERE stationtype='VMS'

mappingId	station-BluetoothStation
target		data:station/{id} a :BluetoothStation .
source		SELECT * FROM intimev2.station WHERE stationtype='BluetoothStation'

mappingId	station-TrafficSensor
target		data:station/{id} a :TrafficSensor .
source		SELECT * FROM intimev2.station WHERE stationtype='TrafficSensor'

mappingId	station-EChargingPlug
target		data:station/{id} a :EChargingPlug .
source		SELECT * FROM intimev2.station WHERE stationtype='EChargingPlug'

mappingId	station-TrafficStreetFactor
target		data:station/{id} a :TrafficStreetFactor .
source		SELECT * FROM intimev2.station WHERE stationtype='TrafficStreetFactor'

mappingId	station-CreativeIndustry
target		data:station/{id} a :CreativeIndustry .
source		SELECT * FROM intimev2.station WHERE stationtype='CreativeIndustry'

mappingId	station-Bicycle
target		data:station/{id} a :Bicycle .
source		SELECT * FROM intimev2.station WHERE stationtype='Bicycle'

mappingId	station-EnvironmentStation
target		data:station/{id} a :EnvironmentStation .
source		SELECT * FROM intimev2.station WHERE stationtype='EnvironmentStation'

mappingId	station-CarsharingStation
target		data:station/{id} a :CarsharingStation .
source		SELECT * FROM intimev2.station WHERE stationtype='CarsharingStation'

mappingId	station-CarsharingCar
target		data:station/{id} a :CarsharingCar .
source		SELECT * FROM intimev2.station WHERE stationtype='CarsharingCar'

mappingId	station-CarpoolingService
target		data:station/{id} a :CarpoolingService .
source		SELECT * FROM intimev2.station WHERE stationtype='CarpoolingService'

mappingId	station-CarpoolingHub
target		data:station/{id} a :CarpoolingHub .
source		SELECT * FROM intimev2.station WHERE stationtype='CarpoolingHub'

mappingId	station-Streetstation
target		data:station/{id} a :Streetstation .
source		SELECT * FROM intimev2.station WHERE stationtype='Streetstation'

mappingId	station-WeatherStation
target		data:station/{id} a :WeatherStation .
source		SELECT * FROM intimev2.station WHERE stationtype='MeteoStation'

mappingId	station-ParkingSensor
target		data:station/{id} a :ParkingSensor .
source		SELECT * FROM intimev2.station WHERE stationtype='ParkingSensor'

mappingId	station-BikesharingStation
target		data:station/{id} a :BikesharingStation .
source		SELECT * FROM intimev2.station WHERE stationtype='BikesharingStation'

mappingId	station-Bicyclestationbay
target		data:station/{id} a :Bicyclestationbay .
source		SELECT * FROM intimev2.station WHERE stationtype='Bicyclestationbay'

mappingId	station-RWISstation
target		data:station/{id} a :RWISstation .
source		SELECT * FROM intimev2.station WHERE stationtype='RWISstation'

mappingId	station-Trafficstation
target		data:station/{id} a :Trafficstation .
source		SELECT * FROM intimev2.station WHERE stationtype='Trafficstation'

mappingId	station-Mobilestation
target		data:station/{id} a :Mobilestation .
source		SELECT * FROM intimev2.station WHERE stationtype='Mobilestation'

mappingId	station-traffic
target		data:station/{id} a :traffic .
source		SELECT * FROM intimev2.station WHERE stationtype='traffic'

mappingId	station-ParkingStation
target		data:station/{id} a :ParkingStation .
source		SELECT * FROM intimev2.station WHERE stationtype='ParkingStation'

mappingId	metadata
target		data:station/{station_id} :hasStationMetadata {json}^^xsd:string .
source		SELECT * FROM intimev2.metadata

mappingId	LodgingBusiness-municipality
target		odh:lodging-businesses/{Id} schema:containedInPlace odh:municipalities/{IstatNumber} . 
source		SELECT a."Id", m."IstatNumber" FROM "v_accommodationsopen" a, "v_municipalitiesopen" m WHERE a."LocationInfo-MunicipalityInfo-Id" = m."Id" 

mappingId	v_municipalitiesopen
target		odh:municipalities/{IstatNumber} a :Municipality ; schema:name {Detail-en-Title}@en , {Detail-it-Title}@it , {Detail-de-Title}@de ; rdfs:label {Detail-en-Title}@en , {Detail-it-Title}@it , {Detail-de-Title}@de ; :hasIStatCode {IstatNumber}^^xsd:integer ; :populationCount {Inhabitants}^^xsd:integer ; schema:postalCode {Plz} ; sioc:has_container <https://kg.opendatahub.bz.it/municipalities/> .
source		SELECT * FROM "v_municipalitiesopen"

mappingId	Feature of Interest
target		data:featureOfInterest/{station_id}/{type_id} a sosa:FeatureOfInterest .
source		SELECT * FROM intimev2.measurement

mappingId	Feature of Interest - latest observation
target		data:latest_observation/{id} sosa:hasFeatureOfInterest data:featureOfInterest/{station_id}/{type_id} .
source		SELECT * FROM intimev2.measurement

mappingId	Feature of Interest - historical observation
target		data:observation/{id} sosa:hasFeatureOfInterest data:featureOfInterest/{station_id}/{type_id} .
source		SELECT * FROM intimev2.measurementhistory

mappingId	Feature of Interest - geo
target		data:featureOfInterest/{station_id}/{type_id} geo:defaultGeometry data:station/geometry/{station_id} .
source		SELECT * FROM intimev2.measurement

mappingId	Outdoor water
target		data:featureOfInterest/{station_id}/{type_id} a :OutdoorWater .
source		SELECT * FROM intimev2.measurement WHERE type_id IN (50, 53, 1949)

mappingId	Outdoor air
target		data:featureOfInterest/{station_id}/{type_id} a :OutdoorAir .
source		SELECT * FROM intimev2.measurement WHERE type_id IN (2, 7, 8, 9, 12)

mappingId	Water temperature
target		data:property/{id} a :WaterTemperature .
source		SELECT * FROM intimev2.type WHERE id IN (1949)

mappingId	Wind speed
target		data:property/{id} a :WindSpeed .
source		SELECT * FROM intimev2.type WHERE id IN (2)

mappingId	Air temperature
target		data:property/{id} a :AirTemperature .
source		SELECT * FROM intimev2.type WHERE id IN (8)

mappingId	Nitrogen-dioxide concentration
target		data:property/{id} a :NitrogenDioxideConcentration .
source		SELECT * FROM intimev2.type WHERE id IN (12)
]]
