
DROP TABLE IF EXISTS "v_accommodationfeatures";

CREATE TABLE "v_accommodationfeatures" (
"Id" varchar,
"Key" varchar,
"Type" varchar,
"Bitmask" integer,
"TypeDesc-de" varchar,
"TypeDesc-en" varchar,
"TypeDesc-fr" varchar,
"TypeDesc-it" varchar,
"TypeDesc-nl" varchar,
"TypeDesc-pl" varchar,
"TypeDesc-cs" varchar
);

ALTER TABLE "v_accommodationfeatures" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_accommodationfeatures_fn CASCADE;

CREATE FUNCTION v_accommodationfeatures_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_accommodationfeatures
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Key' As varchar) AS "Key",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Bitmask' As integer) AS "Bitmask",
CAST(NEW."data"->'TypeDesc'->>'de' As varchar) AS "TypeDesc-de",
CAST(NEW."data"->'TypeDesc'->>'en' As varchar) AS "TypeDesc-en",
CAST(NEW."data"->'TypeDesc'->>'fr' As varchar) AS "TypeDesc-fr",
CAST(NEW."data"->'TypeDesc'->>'it' As varchar) AS "TypeDesc-it",
CAST(NEW."data"->'TypeDesc'->>'nl' As varchar) AS "TypeDesc-nl",
CAST(NEW."data"->'TypeDesc'->>'pl' As varchar) AS "TypeDesc-pl",
CAST(NEW."data"->'TypeDesc'->>'cs' As varchar) AS "TypeDesc-cs";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodationfeatures
    BEFORE INSERT
    ON accommodationfeatures
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodationfeatures_fn();

ALTER TABLE accommodationfeatures
    ENABLE ALWAYS TRIGGER t_v_accommodationfeatures;



DROP TABLE IF EXISTS "v_accommodationrooms";

CREATE TABLE "v_accommodationrooms" (
"Id" varchar,
"Self" varchar,
"A0RID" varchar,
"HGVId" varchar,
"LTSId" varchar,
"Source" varchar,
"Roommax" integer,
"Roommin" integer,
"Roomstd" integer,
"RoomCode" varchar,
"Roomtype" varchar,
"Shortname" varchar,
"RoomQuantity" integer,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"AccoRoomDetail-de-Name" varchar,
"AccoRoomDetail-de-Language" varchar,
"AccoRoomDetail-de-Longdesc" varchar,
"AccoRoomDetail-de-Shortdesc" varchar,
"AccoRoomDetail-en-Name" varchar,
"AccoRoomDetail-en-Language" varchar,
"AccoRoomDetail-en-Longdesc" varchar,
"AccoRoomDetail-en-Shortdesc" varchar,
"AccoRoomDetail-it-Name" varchar,
"AccoRoomDetail-it-Language" varchar,
"AccoRoomDetail-it-Longdesc" varchar,
"AccoRoomDetail-it-Shortdesc" varchar,
"PriceFrom" float,
"LastChange" varchar,
"RoomtypeInt" integer,
"RoomClassificationCodes" integer,
"_Meta-LastUpdate" varchar
);

ALTER TABLE "v_accommodationrooms" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_accommodationrooms_fn CASCADE;

CREATE FUNCTION v_accommodationrooms_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_accommodationrooms
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'A0RID' As varchar) AS "A0RID",
CAST(NEW."data"->>'HGVId' As varchar) AS "HGVId",
CAST(NEW."data"->>'LTSId' As varchar) AS "LTSId",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Roommax' As integer) AS "Roommax",
CAST(NEW."data"->>'Roommin' As integer) AS "Roommin",
CAST(NEW."data"->>'Roomstd' As integer) AS "Roomstd",
CAST(NEW."data"->>'RoomCode' As varchar) AS "RoomCode",
CAST(NEW."data"->>'Roomtype' As varchar) AS "Roomtype",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'RoomQuantity' As integer) AS "RoomQuantity",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'AccoRoomDetail'->'de'->>'Name' As varchar) AS "AccoRoomDetail-de-Name",
CAST(NEW."data"->'AccoRoomDetail'->'de'->>'Language' As varchar) AS "AccoRoomDetail-de-Language",
CAST(NEW."data"->'AccoRoomDetail'->'de'->>'Longdesc' As varchar) AS "AccoRoomDetail-de-Longdesc",
CAST(NEW."data"->'AccoRoomDetail'->'de'->>'Shortdesc' As varchar) AS "AccoRoomDetail-de-Shortdesc",
CAST(NEW."data"->'AccoRoomDetail'->'en'->>'Name' As varchar) AS "AccoRoomDetail-en-Name",
CAST(NEW."data"->'AccoRoomDetail'->'en'->>'Language' As varchar) AS "AccoRoomDetail-en-Language",
CAST(NEW."data"->'AccoRoomDetail'->'en'->>'Longdesc' As varchar) AS "AccoRoomDetail-en-Longdesc",
CAST(NEW."data"->'AccoRoomDetail'->'en'->>'Shortdesc' As varchar) AS "AccoRoomDetail-en-Shortdesc",
CAST(NEW."data"->'AccoRoomDetail'->'it'->>'Name' As varchar) AS "AccoRoomDetail-it-Name",
CAST(NEW."data"->'AccoRoomDetail'->'it'->>'Language' As varchar) AS "AccoRoomDetail-it-Language",
CAST(NEW."data"->'AccoRoomDetail'->'it'->>'Longdesc' As varchar) AS "AccoRoomDetail-it-Longdesc",
CAST(NEW."data"->'AccoRoomDetail'->'it'->>'Shortdesc' As varchar) AS "AccoRoomDetail-it-Shortdesc",
CAST(NEW."data"->>'PriceFrom' As float) AS "PriceFrom",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'RoomtypeInt' As integer) AS "RoomtypeInt",
CAST(NEW."data"->>'RoomClassificationCodes' As integer) AS "RoomClassificationCodes",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodationrooms
    BEFORE INSERT
    ON accommodationrooms
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodationrooms_fn();

ALTER TABLE accommodationrooms
    ENABLE ALWAYS TRIGGER t_v_accommodationrooms;



DROP TABLE IF EXISTS "v_accommodationrooms_PublishedOn";

CREATE TABLE  "v_accommodationrooms_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodationrooms_PublishedOn_fn CASCADE;

CREATE FUNCTION v_accommodationrooms_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodationrooms_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodationrooms_PublishedOn
    BEFORE INSERT
    ON accommodationrooms
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodationrooms_PublishedOn_fn();

ALTER TABLE accommodationrooms
    ENABLE ALWAYS TRIGGER t_v_accommodationrooms_PublishedOn;



DROP TABLE IF EXISTS "v_accommodationrooms_Features";

CREATE TABLE "v_accommodationrooms_Features" (
"accommodationrooms_Id" varchar,
"Id" varchar,
"Name" varchar,
"Self" varchar,
"HgvId" varchar,
"OtaCodes" varchar
);

DROP FUNCTION IF EXISTS v_accommodationrooms_Features_fn CASCADE;

CREATE FUNCTION v_accommodationrooms_Features_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodationrooms_Features"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Features') AS "data"
        WHERE NEW."data" -> 'Features' != 'null')
    SELECT "Id" AS "accommodationrooms_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Name' As varchar) AS "Name",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'HgvId' As varchar) AS "HgvId",
CAST("data"->>'OtaCodes' As varchar) AS "OtaCodes"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodationrooms_Features
    BEFORE INSERT
    ON accommodationrooms
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodationrooms_Features_fn();

ALTER TABLE accommodationrooms
    ENABLE ALWAYS TRIGGER t_v_accommodationrooms_Features;



DROP TABLE IF EXISTS "v_accommodationrooms_HasLanguage";

CREATE TABLE  "v_accommodationrooms_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodationrooms_HasLanguage_fn CASCADE;

CREATE FUNCTION v_accommodationrooms_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodationrooms_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodationrooms_HasLanguage
    BEFORE INSERT
    ON accommodationrooms
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodationrooms_HasLanguage_fn();

ALTER TABLE accommodationrooms
    ENABLE ALWAYS TRIGGER t_v_accommodationrooms_HasLanguage;



DROP TABLE IF EXISTS "v_accommodationrooms_RoomNumbers";

CREATE TABLE  "v_accommodationrooms_RoomNumbers" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodationrooms_RoomNumbers_fn CASCADE;

CREATE FUNCTION v_accommodationrooms_RoomNumbers_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodationrooms_RoomNumbers"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'RoomNumbers') AS "data"
        WHERE NEW."data" -> 'RoomNumbers' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodationrooms_RoomNumbers
    BEFORE INSERT
    ON accommodationrooms
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodationrooms_RoomNumbers_fn();

ALTER TABLE accommodationrooms
    ENABLE ALWAYS TRIGGER t_v_accommodationrooms_RoomNumbers;



DROP TABLE IF EXISTS "v_accommodationrooms_Features_RoomAmenityCodes";

CREATE TABLE  "v_accommodationrooms_Features_RoomAmenityCodes" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodationrooms_Features_RoomAmenityCodes_fn CASCADE;

CREATE FUNCTION v_accommodationrooms_Features_RoomAmenityCodes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodationrooms_Features_RoomAmenityCodes"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'Features_RoomAmenityCodes') AS "data"
        WHERE NEW."data" -> 'Features_RoomAmenityCodes' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodationrooms_Features_RoomAmenityCodes
    BEFORE INSERT
    ON accommodationrooms
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodationrooms_Features_RoomAmenityCodes_fn();

ALTER TABLE accommodationrooms
    ENABLE ALWAYS TRIGGER t_v_accommodationrooms_Features_RoomAmenityCodes;



DROP TABLE IF EXISTS "v_accommodationrooms_ImageGallery";

CREATE TABLE "v_accommodationrooms_ImageGallery" (
"accommodationrooms_Id" varchar,
"Width" integer,
"Height" integer,
"ImageUrl" varchar,
"ImageName" varchar,
"ImageSource" varchar,
"ListPosition" integer,
"License" varchar,
"CopyRight" varchar
);

DROP FUNCTION IF EXISTS v_accommodationrooms_ImageGallery_fn CASCADE;

CREATE FUNCTION v_accommodationrooms_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodationrooms_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "accommodationrooms_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'ImageName' As varchar) AS "ImageName",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->>'License' As varchar) AS "License",
CAST("data"->>'CopyRight' As varchar) AS "CopyRight"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodationrooms_ImageGallery
    BEFORE INSERT
    ON accommodationrooms
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodationrooms_ImageGallery_fn();

ALTER TABLE accommodationrooms
    ENABLE ALWAYS TRIGGER t_v_accommodationrooms_ImageGallery;



DROP TABLE IF EXISTS "v_accommodations";

CREATE TABLE "v_accommodations" (
"Id" varchar,
"Self" varchar,
"HgvId" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"HasRoom" bool,
"Altitude" float,
"Latitude" float,
"TVMember" bool,
"IsCamping" bool,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"AccoTypeId" varchar,
"DistrictId" varchar,
"IsBookable" bool,
"LastChange" varchar,
"TrustYouID" varchar,
"FirstImport" varchar,
"GastronomyId" varchar,
"HasApartment" bool,
"IsGastronomy" bool,
"MainLanguage" varchar,
"TrustYouScore" float,
"TrustYouState" integer,
"AccoCategoryId" varchar,
"TrustYouActive" bool,
"IsAccommodation" bool,
"TourismVereinId" varchar,
"TrustYouResults" integer,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"AccoType-Id" varchar,
"AccoType-Self" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"AccoDetail-de-Fax" varchar,
"AccoDetail-de-Zip" varchar,
"AccoDetail-de-City" varchar,
"AccoDetail-de-Name" varchar,
"AccoDetail-de-Email" varchar,
"AccoDetail-de-Phone" varchar,
"AccoDetail-de-Mobile" varchar,
"AccoDetail-de-Street" varchar,
"AccoDetail-de-Website" varchar,
"AccoDetail-de-Language" varchar,
"AccoDetail-de-Lastname" varchar,
"AccoDetail-de-Longdesc" varchar,
"AccoDetail-de-Firstname" varchar,
"AccoDetail-de-Shortdesc" varchar,
"AccoDetail-de-NameAddition" varchar,
"AccoDetail-en-Fax" varchar,
"AccoDetail-en-Zip" varchar,
"AccoDetail-en-City" varchar,
"AccoDetail-en-Name" varchar,
"AccoDetail-en-Email" varchar,
"AccoDetail-en-Phone" varchar,
"AccoDetail-en-Mobile" varchar,
"AccoDetail-en-Street" varchar,
"AccoDetail-en-Website" varchar,
"AccoDetail-en-Language" varchar,
"AccoDetail-en-Lastname" varchar,
"AccoDetail-en-Firstname" varchar,
"AccoDetail-en-NameAddition" varchar,
"AccoDetail-it-Fax" varchar,
"AccoDetail-it-Zip" varchar,
"AccoDetail-it-City" varchar,
"AccoDetail-it-Name" varchar,
"AccoDetail-it-Email" varchar,
"AccoDetail-it-Phone" varchar,
"AccoDetail-it-Mobile" varchar,
"AccoDetail-it-Street" varchar,
"AccoDetail-it-Website" varchar,
"AccoDetail-it-Language" varchar,
"AccoDetail-it-Lastname" varchar,
"AccoDetail-it-Firstname" varchar,
"AccoDetail-it-NameAddition" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"AccoCategory-Id" varchar,
"AccoCategory-Self" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"LocationInfo-DistrictInfo-Id" varchar,
"LocationInfo-DistrictInfo-Self" varchar,
"LocationInfo-DistrictInfo-Name-cs" varchar,
"LocationInfo-DistrictInfo-Name-de" varchar,
"LocationInfo-DistrictInfo-Name-en" varchar,
"LocationInfo-DistrictInfo-Name-fr" varchar,
"LocationInfo-DistrictInfo-Name-it" varchar,
"LocationInfo-DistrictInfo-Name-nl" varchar,
"LocationInfo-DistrictInfo-Name-pl" varchar,
"LocationInfo-DistrictInfo-Name-ru" varchar,
"LocationInfo-MunicipalityInfo-Id" varchar,
"LocationInfo-MunicipalityInfo-Self" varchar,
"LocationInfo-MunicipalityInfo-Name-cs" varchar,
"LocationInfo-MunicipalityInfo-Name-de" varchar,
"LocationInfo-MunicipalityInfo-Name-en" varchar,
"LocationInfo-MunicipalityInfo-Name-fr" varchar,
"LocationInfo-MunicipalityInfo-Name-it" varchar,
"LocationInfo-MunicipalityInfo-Name-nl" varchar,
"LocationInfo-MunicipalityInfo-Name-pl" varchar,
"LocationInfo-MunicipalityInfo-Name-ru" varchar,
"AccoDetail-en-Longdesc" varchar,
"AccoDetail-en-Shortdesc" varchar,
"AccoDetail-it-Longdesc" varchar,
"AccoDetail-it-Shortdesc" varchar,
"Representation" integer,
"AccoDetail-de-Vat" varchar,
"AccoDetail-en-Vat" varchar,
"AccoDetail-it-Vat" varchar,
"AccoDetail-de-CountryCode" varchar,
"AccoDetail-en-CountryCode" varchar,
"AccoDetail-it-CountryCode" varchar
);

ALTER TABLE "v_accommodations" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_accommodations_fn CASCADE;

CREATE FUNCTION v_accommodations_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_accommodations
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'HgvId' As varchar) AS "HgvId",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'HasRoom' As bool) AS "HasRoom",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'TVMember' As bool) AS "TVMember",
CAST(NEW."data"->>'IsCamping' As bool) AS "IsCamping",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'AccoTypeId' As varchar) AS "AccoTypeId",
CAST(NEW."data"->>'DistrictId' As varchar) AS "DistrictId",
CAST(NEW."data"->>'IsBookable' As bool) AS "IsBookable",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'TrustYouID' As varchar) AS "TrustYouID",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'GastronomyId' As varchar) AS "GastronomyId",
CAST(NEW."data"->>'HasApartment' As bool) AS "HasApartment",
CAST(NEW."data"->>'IsGastronomy' As bool) AS "IsGastronomy",
CAST(NEW."data"->>'MainLanguage' As varchar) AS "MainLanguage",
CAST(NEW."data"->>'TrustYouScore' As float) AS "TrustYouScore",
CAST(NEW."data"->>'TrustYouState' As integer) AS "TrustYouState",
CAST(NEW."data"->>'AccoCategoryId' As varchar) AS "AccoCategoryId",
CAST(NEW."data"->>'TrustYouActive' As bool) AS "TrustYouActive",
CAST(NEW."data"->>'IsAccommodation' As bool) AS "IsAccommodation",
CAST(NEW."data"->>'TourismVereinId' As varchar) AS "TourismVereinId",
CAST(NEW."data"->>'TrustYouResults' As integer) AS "TrustYouResults",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'AccoType'->>'Id' As varchar) AS "AccoType-Id",
CAST(NEW."data"->'AccoType'->>'Self' As varchar) AS "AccoType-Self",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'AccoDetail'->'de'->>'Fax' As varchar) AS "AccoDetail-de-Fax",
CAST(NEW."data"->'AccoDetail'->'de'->>'Zip' As varchar) AS "AccoDetail-de-Zip",
CAST(NEW."data"->'AccoDetail'->'de'->>'City' As varchar) AS "AccoDetail-de-City",
CAST(NEW."data"->'AccoDetail'->'de'->>'Name' As varchar) AS "AccoDetail-de-Name",
CAST(NEW."data"->'AccoDetail'->'de'->>'Email' As varchar) AS "AccoDetail-de-Email",
CAST(NEW."data"->'AccoDetail'->'de'->>'Phone' As varchar) AS "AccoDetail-de-Phone",
CAST(NEW."data"->'AccoDetail'->'de'->>'Mobile' As varchar) AS "AccoDetail-de-Mobile",
CAST(NEW."data"->'AccoDetail'->'de'->>'Street' As varchar) AS "AccoDetail-de-Street",
CAST(NEW."data"->'AccoDetail'->'de'->>'Website' As varchar) AS "AccoDetail-de-Website",
CAST(NEW."data"->'AccoDetail'->'de'->>'Language' As varchar) AS "AccoDetail-de-Language",
CAST(NEW."data"->'AccoDetail'->'de'->>'Lastname' As varchar) AS "AccoDetail-de-Lastname",
CAST(NEW."data"->'AccoDetail'->'de'->>'Longdesc' As varchar) AS "AccoDetail-de-Longdesc",
CAST(NEW."data"->'AccoDetail'->'de'->>'Firstname' As varchar) AS "AccoDetail-de-Firstname",
CAST(NEW."data"->'AccoDetail'->'de'->>'Shortdesc' As varchar) AS "AccoDetail-de-Shortdesc",
CAST(NEW."data"->'AccoDetail'->'de'->>'NameAddition' As varchar) AS "AccoDetail-de-NameAddition",
CAST(NEW."data"->'AccoDetail'->'en'->>'Fax' As varchar) AS "AccoDetail-en-Fax",
CAST(NEW."data"->'AccoDetail'->'en'->>'Zip' As varchar) AS "AccoDetail-en-Zip",
CAST(NEW."data"->'AccoDetail'->'en'->>'City' As varchar) AS "AccoDetail-en-City",
CAST(NEW."data"->'AccoDetail'->'en'->>'Name' As varchar) AS "AccoDetail-en-Name",
CAST(NEW."data"->'AccoDetail'->'en'->>'Email' As varchar) AS "AccoDetail-en-Email",
CAST(NEW."data"->'AccoDetail'->'en'->>'Phone' As varchar) AS "AccoDetail-en-Phone",
CAST(NEW."data"->'AccoDetail'->'en'->>'Mobile' As varchar) AS "AccoDetail-en-Mobile",
CAST(NEW."data"->'AccoDetail'->'en'->>'Street' As varchar) AS "AccoDetail-en-Street",
CAST(NEW."data"->'AccoDetail'->'en'->>'Website' As varchar) AS "AccoDetail-en-Website",
CAST(NEW."data"->'AccoDetail'->'en'->>'Language' As varchar) AS "AccoDetail-en-Language",
CAST(NEW."data"->'AccoDetail'->'en'->>'Lastname' As varchar) AS "AccoDetail-en-Lastname",
CAST(NEW."data"->'AccoDetail'->'en'->>'Firstname' As varchar) AS "AccoDetail-en-Firstname",
CAST(NEW."data"->'AccoDetail'->'en'->>'NameAddition' As varchar) AS "AccoDetail-en-NameAddition",
CAST(NEW."data"->'AccoDetail'->'it'->>'Fax' As varchar) AS "AccoDetail-it-Fax",
CAST(NEW."data"->'AccoDetail'->'it'->>'Zip' As varchar) AS "AccoDetail-it-Zip",
CAST(NEW."data"->'AccoDetail'->'it'->>'City' As varchar) AS "AccoDetail-it-City",
CAST(NEW."data"->'AccoDetail'->'it'->>'Name' As varchar) AS "AccoDetail-it-Name",
CAST(NEW."data"->'AccoDetail'->'it'->>'Email' As varchar) AS "AccoDetail-it-Email",
CAST(NEW."data"->'AccoDetail'->'it'->>'Phone' As varchar) AS "AccoDetail-it-Phone",
CAST(NEW."data"->'AccoDetail'->'it'->>'Mobile' As varchar) AS "AccoDetail-it-Mobile",
CAST(NEW."data"->'AccoDetail'->'it'->>'Street' As varchar) AS "AccoDetail-it-Street",
CAST(NEW."data"->'AccoDetail'->'it'->>'Website' As varchar) AS "AccoDetail-it-Website",
CAST(NEW."data"->'AccoDetail'->'it'->>'Language' As varchar) AS "AccoDetail-it-Language",
CAST(NEW."data"->'AccoDetail'->'it'->>'Lastname' As varchar) AS "AccoDetail-it-Lastname",
CAST(NEW."data"->'AccoDetail'->'it'->>'Firstname' As varchar) AS "AccoDetail-it-Firstname",
CAST(NEW."data"->'AccoDetail'->'it'->>'NameAddition' As varchar) AS "AccoDetail-it-NameAddition",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'AccoCategory'->>'Id' As varchar) AS "AccoCategory-Id",
CAST(NEW."data"->'AccoCategory'->>'Self' As varchar) AS "AccoCategory-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Id' As varchar) AS "LocationInfo-DistrictInfo-Id",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Self' As varchar) AS "LocationInfo-DistrictInfo-Self",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-DistrictInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'de' As varchar) AS "LocationInfo-DistrictInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'en' As varchar) AS "LocationInfo-DistrictInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-DistrictInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'it' As varchar) AS "LocationInfo-DistrictInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-DistrictInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-DistrictInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-DistrictInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Id' As varchar) AS "LocationInfo-MunicipalityInfo-Id",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Self' As varchar) AS "LocationInfo-MunicipalityInfo-Self",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-MunicipalityInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'de' As varchar) AS "LocationInfo-MunicipalityInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'en' As varchar) AS "LocationInfo-MunicipalityInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-MunicipalityInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'it' As varchar) AS "LocationInfo-MunicipalityInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-MunicipalityInfo-Name-ru",
CAST(NEW."data"->'AccoDetail'->'en'->>'Longdesc' As varchar) AS "AccoDetail-en-Longdesc",
CAST(NEW."data"->'AccoDetail'->'en'->>'Shortdesc' As varchar) AS "AccoDetail-en-Shortdesc",
CAST(NEW."data"->'AccoDetail'->'it'->>'Longdesc' As varchar) AS "AccoDetail-it-Longdesc",
CAST(NEW."data"->'AccoDetail'->'it'->>'Shortdesc' As varchar) AS "AccoDetail-it-Shortdesc",
CAST(NEW."data"->>'Representation' As integer) AS "Representation",
CAST(NEW."data"->'AccoDetail'->'de'->>'Vat' As varchar) AS "AccoDetail-de-Vat",
CAST(NEW."data"->'AccoDetail'->'en'->>'Vat' As varchar) AS "AccoDetail-en-Vat",
CAST(NEW."data"->'AccoDetail'->'it'->>'Vat' As varchar) AS "AccoDetail-it-Vat",
CAST(NEW."data"->'AccoDetail'->'de'->>'CountryCode' As varchar) AS "AccoDetail-de-CountryCode",
CAST(NEW."data"->'AccoDetail'->'en'->>'CountryCode' As varchar) AS "AccoDetail-en-CountryCode",
CAST(NEW."data"->'AccoDetail'->'it'->>'CountryCode' As varchar) AS "AccoDetail-it-CountryCode";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations;



DROP TABLE IF EXISTS "v_accommodations_BoardIds";

CREATE TABLE  "v_accommodations_BoardIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_BoardIds_fn CASCADE;

CREATE FUNCTION v_accommodations_BoardIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_BoardIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'BoardIds') AS "data"
        WHERE NEW."data" -> 'BoardIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_BoardIds
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_BoardIds_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_BoardIds;



DROP TABLE IF EXISTS "v_accommodations_ThemeIds";

CREATE TABLE  "v_accommodations_ThemeIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_ThemeIds_fn CASCADE;

CREATE FUNCTION v_accommodations_ThemeIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_ThemeIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'ThemeIds') AS "data"
        WHERE NEW."data" -> 'ThemeIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_ThemeIds
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_ThemeIds_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_ThemeIds;



DROP TABLE IF EXISTS "v_accommodations_HasLanguage";

CREATE TABLE  "v_accommodations_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_HasLanguage_fn CASCADE;

CREATE FUNCTION v_accommodations_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_HasLanguage
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_HasLanguage_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_HasLanguage;



DROP TABLE IF EXISTS "v_accommodations_SpecialFeaturesIds";

CREATE TABLE  "v_accommodations_SpecialFeaturesIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_SpecialFeaturesIds_fn CASCADE;

CREATE FUNCTION v_accommodations_SpecialFeaturesIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_SpecialFeaturesIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SpecialFeaturesIds') AS "data"
        WHERE NEW."data" -> 'SpecialFeaturesIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_SpecialFeaturesIds
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_SpecialFeaturesIds_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_SpecialFeaturesIds;



DROP TABLE IF EXISTS "v_accommodations_Features";

CREATE TABLE "v_accommodations_Features" (
"accommodations_Id" varchar,
"Id" varchar,
"Name" varchar,
"Self" varchar,
"HgvId" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_Features_fn CASCADE;

CREATE FUNCTION v_accommodations_Features_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_Features"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Features') AS "data"
        WHERE NEW."data" -> 'Features' != 'null')
    SELECT "Id" AS "accommodations_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Name' As varchar) AS "Name",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'HgvId' As varchar) AS "HgvId"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_Features
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_Features_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_Features;



DROP TABLE IF EXISTS "v_accommodations_AccoBoards";

CREATE TABLE "v_accommodations_AccoBoards" (
"accommodations_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_AccoBoards_fn CASCADE;

CREATE FUNCTION v_accommodations_AccoBoards_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_AccoBoards"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'AccoBoards') AS "data"
        WHERE NEW."data" -> 'AccoBoards' != 'null')
    SELECT "Id" AS "accommodations_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_AccoBoards
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_AccoBoards_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_AccoBoards;



DROP TABLE IF EXISTS "v_accommodations_AccoThemes";

CREATE TABLE "v_accommodations_AccoThemes" (
"accommodations_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_AccoThemes_fn CASCADE;

CREATE FUNCTION v_accommodations_AccoThemes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_AccoThemes"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'AccoThemes') AS "data"
        WHERE NEW."data" -> 'AccoThemes' != 'null')
    SELECT "Id" AS "accommodations_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_AccoThemes
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_AccoThemes_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_AccoThemes;



DROP TABLE IF EXISTS "v_accommodations_ImageGallery";

CREATE TABLE "v_accommodations_ImageGallery" (
"accommodations_Id" varchar,
"Width" integer,
"Height" integer,
"ValidTo" varchar,
"ImageUrl" varchar,
"ValidFrom" varchar,
"IsInGallery" bool,
"ListPosition" integer,
"ImageDesc-de" varchar,
"ImageDesc-en" varchar,
"ImageDesc-it" varchar,
"License" varchar,
"CopyRight" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_ImageGallery_fn CASCADE;

CREATE FUNCTION v_accommodations_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "accommodations_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ValidTo' As varchar) AS "ValidTo",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'ValidFrom' As varchar) AS "ValidFrom",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'ImageDesc'->>'de' As varchar) AS "ImageDesc-de",
CAST("data"->'ImageDesc'->>'en' As varchar) AS "ImageDesc-en",
CAST("data"->'ImageDesc'->>'it' As varchar) AS "ImageDesc-it",
CAST("data"->>'License' As varchar) AS "License",
CAST("data"->>'CopyRight' As varchar) AS "CopyRight"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_ImageGallery
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_ImageGallery_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_ImageGallery;



DROP TABLE IF EXISTS "v_accommodations_ImageGallery_ImageTags";

CREATE TABLE  "v_accommodations_ImageGallery_ImageTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_ImageGallery_ImageTags_fn CASCADE;

CREATE FUNCTION v_accommodations_ImageGallery_ImageTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_ImageGallery_ImageTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'ImageGallery_ImageTags') AS "data"
        WHERE NEW."data" -> 'ImageGallery_ImageTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_ImageGallery_ImageTags
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_ImageGallery_ImageTags_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_ImageGallery_ImageTags;



DROP TABLE IF EXISTS "v_accommodations_AccoSpecialFeatures";

CREATE TABLE "v_accommodations_AccoSpecialFeatures" (
"accommodations_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_AccoSpecialFeatures_fn CASCADE;

CREATE FUNCTION v_accommodations_AccoSpecialFeatures_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_AccoSpecialFeatures"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'AccoSpecialFeatures') AS "data"
        WHERE NEW."data" -> 'AccoSpecialFeatures' != 'null')
    SELECT "Id" AS "accommodations_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_AccoSpecialFeatures
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_AccoSpecialFeatures_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_AccoSpecialFeatures;



DROP TABLE IF EXISTS "v_accommodations_AccoRoomInfo";

CREATE TABLE "v_accommodations_AccoRoomInfo" (
"accommodations_Id" varchar,
"Id" varchar,
"Self" varchar,
"Source" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_AccoRoomInfo_fn CASCADE;

CREATE FUNCTION v_accommodations_AccoRoomInfo_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_AccoRoomInfo"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'AccoRoomInfo') AS "data"
        WHERE NEW."data" -> 'AccoRoomInfo' != 'null')
    SELECT "Id" AS "accommodations_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Source' As varchar) AS "Source"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_AccoRoomInfo
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_AccoRoomInfo_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_AccoRoomInfo;



DROP TABLE IF EXISTS "v_accommodations_MarketingGroupIds";

CREATE TABLE  "v_accommodations_MarketingGroupIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_MarketingGroupIds_fn CASCADE;

CREATE FUNCTION v_accommodations_MarketingGroupIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_MarketingGroupIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'MarketingGroupIds') AS "data"
        WHERE NEW."data" -> 'MarketingGroupIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_MarketingGroupIds
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_MarketingGroupIds_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_MarketingGroupIds;



DROP TABLE IF EXISTS "v_accommodations_AccoBookingChannel";

CREATE TABLE "v_accommodations_AccoBookingChannel" (
"accommodations_Id" varchar,
"Id" varchar,
"Pos1ID" varchar,
"BookingId" varchar,
"Portalname" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_AccoBookingChannel_fn CASCADE;

CREATE FUNCTION v_accommodations_AccoBookingChannel_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_AccoBookingChannel"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'AccoBookingChannel') AS "data"
        WHERE NEW."data" -> 'AccoBookingChannel' != 'null')
    SELECT "Id" AS "accommodations_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Pos1ID' As varchar) AS "Pos1ID",
CAST("data"->>'BookingId' As varchar) AS "BookingId",
CAST("data"->>'Portalname' As varchar) AS "Portalname"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_AccoBookingChannel
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_AccoBookingChannel_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_AccoBookingChannel;



DROP TABLE IF EXISTS "v_accommodations_SmgTags";

CREATE TABLE  "v_accommodations_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_SmgTags_fn CASCADE;

CREATE FUNCTION v_accommodations_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_SmgTags
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_SmgTags_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_SmgTags;



DROP TABLE IF EXISTS "v_accommodations_ODHTags";

CREATE TABLE "v_accommodations_ODHTags" (
"accommodations_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_accommodations_ODHTags_fn CASCADE;

CREATE FUNCTION v_accommodations_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodations_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "accommodations_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodations_ODHTags
    BEFORE INSERT
    ON accommodations
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodations_ODHTags_fn();

ALTER TABLE accommodations
    ENABLE ALWAYS TRIGGER t_v_accommodations_ODHTags;



DROP TABLE IF EXISTS "v_accommodationsopen";

CREATE TABLE "v_accommodationsopen" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"HasRoom" bool,
"Altitude" float,
"Latitude" float,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"AccoTypeId" varchar,
"IsBookable" bool,
"LastChange" varchar,
"FirstImport" varchar,
"HasApartment" bool,
"TrustYouScore" float,
"TrustYouState" integer,
"AccoCategoryId" varchar,
"TrustYouActive" bool,
"TrustYouResults" integer,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"AccoType-Id" varchar,
"AccoType-Self" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"AccoDetail-de-Zip" varchar,
"AccoDetail-de-City" varchar,
"AccoDetail-de-Name" varchar,
"AccoDetail-de-Phone" varchar,
"AccoDetail-de-Street" varchar,
"AccoDetail-de-Language" varchar,
"AccoDetail-de-CountryCode" varchar,
"AccoDetail-en-Zip" varchar,
"AccoDetail-en-City" varchar,
"AccoDetail-en-Name" varchar,
"AccoDetail-en-Phone" varchar,
"AccoDetail-en-Street" varchar,
"AccoDetail-en-Language" varchar,
"AccoDetail-en-CountryCode" varchar,
"AccoDetail-it-Zip" varchar,
"AccoDetail-it-City" varchar,
"AccoDetail-it-Name" varchar,
"AccoDetail-it-Phone" varchar,
"AccoDetail-it-Street" varchar,
"AccoDetail-it-Language" varchar,
"AccoDetail-it-CountryCode" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"AccoCategory-Id" varchar,
"AccoCategory-Self" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"LocationInfo-DistrictInfo-Id" varchar,
"LocationInfo-DistrictInfo-Self" varchar,
"LocationInfo-DistrictInfo-Name-cs" varchar,
"LocationInfo-DistrictInfo-Name-de" varchar,
"LocationInfo-DistrictInfo-Name-en" varchar,
"LocationInfo-DistrictInfo-Name-fr" varchar,
"LocationInfo-DistrictInfo-Name-it" varchar,
"LocationInfo-DistrictInfo-Name-nl" varchar,
"LocationInfo-DistrictInfo-Name-pl" varchar,
"LocationInfo-DistrictInfo-Name-ru" varchar,
"LocationInfo-MunicipalityInfo-Id" varchar,
"LocationInfo-MunicipalityInfo-Self" varchar,
"LocationInfo-MunicipalityInfo-Name-cs" varchar,
"LocationInfo-MunicipalityInfo-Name-de" varchar,
"LocationInfo-MunicipalityInfo-Name-en" varchar,
"LocationInfo-MunicipalityInfo-Name-fr" varchar,
"LocationInfo-MunicipalityInfo-Name-it" varchar,
"LocationInfo-MunicipalityInfo-Name-nl" varchar,
"LocationInfo-MunicipalityInfo-Name-pl" varchar,
"LocationInfo-MunicipalityInfo-Name-ru" varchar,
"AccoDetail-de-Website" varchar,
"AccoDetail-en-Website" varchar,
"AccoDetail-it-Website" varchar
);

ALTER TABLE "v_accommodationsopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_accommodationsopen_fn CASCADE;

CREATE FUNCTION v_accommodationsopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_accommodationsopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'HasRoom' As bool) AS "HasRoom",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'AccoTypeId' As varchar) AS "AccoTypeId",
CAST(NEW."data"->>'IsBookable' As bool) AS "IsBookable",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'HasApartment' As bool) AS "HasApartment",
CAST(NEW."data"->>'TrustYouScore' As float) AS "TrustYouScore",
CAST(NEW."data"->>'TrustYouState' As integer) AS "TrustYouState",
CAST(NEW."data"->>'AccoCategoryId' As varchar) AS "AccoCategoryId",
CAST(NEW."data"->>'TrustYouActive' As bool) AS "TrustYouActive",
CAST(NEW."data"->>'TrustYouResults' As integer) AS "TrustYouResults",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'AccoType'->>'Id' As varchar) AS "AccoType-Id",
CAST(NEW."data"->'AccoType'->>'Self' As varchar) AS "AccoType-Self",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'AccoDetail'->'de'->>'Zip' As varchar) AS "AccoDetail-de-Zip",
CAST(NEW."data"->'AccoDetail'->'de'->>'City' As varchar) AS "AccoDetail-de-City",
CAST(NEW."data"->'AccoDetail'->'de'->>'Name' As varchar) AS "AccoDetail-de-Name",
CAST(NEW."data"->'AccoDetail'->'de'->>'Phone' As varchar) AS "AccoDetail-de-Phone",
CAST(NEW."data"->'AccoDetail'->'de'->>'Street' As varchar) AS "AccoDetail-de-Street",
CAST(NEW."data"->'AccoDetail'->'de'->>'Language' As varchar) AS "AccoDetail-de-Language",
CAST(NEW."data"->'AccoDetail'->'de'->>'CountryCode' As varchar) AS "AccoDetail-de-CountryCode",
CAST(NEW."data"->'AccoDetail'->'en'->>'Zip' As varchar) AS "AccoDetail-en-Zip",
CAST(NEW."data"->'AccoDetail'->'en'->>'City' As varchar) AS "AccoDetail-en-City",
CAST(NEW."data"->'AccoDetail'->'en'->>'Name' As varchar) AS "AccoDetail-en-Name",
CAST(NEW."data"->'AccoDetail'->'en'->>'Phone' As varchar) AS "AccoDetail-en-Phone",
CAST(NEW."data"->'AccoDetail'->'en'->>'Street' As varchar) AS "AccoDetail-en-Street",
CAST(NEW."data"->'AccoDetail'->'en'->>'Language' As varchar) AS "AccoDetail-en-Language",
CAST(NEW."data"->'AccoDetail'->'en'->>'CountryCode' As varchar) AS "AccoDetail-en-CountryCode",
CAST(NEW."data"->'AccoDetail'->'it'->>'Zip' As varchar) AS "AccoDetail-it-Zip",
CAST(NEW."data"->'AccoDetail'->'it'->>'City' As varchar) AS "AccoDetail-it-City",
CAST(NEW."data"->'AccoDetail'->'it'->>'Name' As varchar) AS "AccoDetail-it-Name",
CAST(NEW."data"->'AccoDetail'->'it'->>'Phone' As varchar) AS "AccoDetail-it-Phone",
CAST(NEW."data"->'AccoDetail'->'it'->>'Street' As varchar) AS "AccoDetail-it-Street",
CAST(NEW."data"->'AccoDetail'->'it'->>'Language' As varchar) AS "AccoDetail-it-Language",
CAST(NEW."data"->'AccoDetail'->'it'->>'CountryCode' As varchar) AS "AccoDetail-it-CountryCode",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'AccoCategory'->>'Id' As varchar) AS "AccoCategory-Id",
CAST(NEW."data"->'AccoCategory'->>'Self' As varchar) AS "AccoCategory-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Id' As varchar) AS "LocationInfo-DistrictInfo-Id",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Self' As varchar) AS "LocationInfo-DistrictInfo-Self",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-DistrictInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'de' As varchar) AS "LocationInfo-DistrictInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'en' As varchar) AS "LocationInfo-DistrictInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-DistrictInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'it' As varchar) AS "LocationInfo-DistrictInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-DistrictInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-DistrictInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-DistrictInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Id' As varchar) AS "LocationInfo-MunicipalityInfo-Id",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Self' As varchar) AS "LocationInfo-MunicipalityInfo-Self",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-MunicipalityInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'de' As varchar) AS "LocationInfo-MunicipalityInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'en' As varchar) AS "LocationInfo-MunicipalityInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-MunicipalityInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'it' As varchar) AS "LocationInfo-MunicipalityInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-MunicipalityInfo-Name-ru",
CAST(NEW."data"->'AccoDetail'->'de'->>'Website' As varchar) AS "AccoDetail-de-Website",
CAST(NEW."data"->'AccoDetail'->'en'->>'Website' As varchar) AS "AccoDetail-en-Website",
CAST(NEW."data"->'AccoDetail'->'it'->>'Website' As varchar) AS "AccoDetail-it-Website";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodationsopen
    BEFORE INSERT
    ON accommodationsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodationsopen_fn();

ALTER TABLE accommodationsopen
    ENABLE ALWAYS TRIGGER t_v_accommodationsopen;



DROP TABLE IF EXISTS "v_accommodationsopen_HasLanguage";

CREATE TABLE  "v_accommodationsopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodationsopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_accommodationsopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodationsopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodationsopen_HasLanguage
    BEFORE INSERT
    ON accommodationsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodationsopen_HasLanguage_fn();

ALTER TABLE accommodationsopen
    ENABLE ALWAYS TRIGGER t_v_accommodationsopen_HasLanguage;



DROP TABLE IF EXISTS "v_accommodationsopen_PublishedOn";

CREATE TABLE  "v_accommodationsopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_accommodationsopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_accommodationsopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_accommodationsopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodationsopen_PublishedOn
    BEFORE INSERT
    ON accommodationsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodationsopen_PublishedOn_fn();

ALTER TABLE accommodationsopen
    ENABLE ALWAYS TRIGGER t_v_accommodationsopen_PublishedOn;



DROP TABLE IF EXISTS "v_accommodationtypes";

CREATE TABLE "v_accommodationtypes" (
"Id" varchar,
"Key" varchar,
"Type" varchar,
"Bitmask" integer,
"TypeDesc-cs" varchar,
"TypeDesc-de" varchar,
"TypeDesc-en" varchar,
"TypeDesc-fr" varchar,
"TypeDesc-it" varchar,
"TypeDesc-nl" varchar,
"TypeDesc-pl" varchar,
"TypeDesc-ru" varchar
);

ALTER TABLE "v_accommodationtypes" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_accommodationtypes_fn CASCADE;

CREATE FUNCTION v_accommodationtypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_accommodationtypes
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Key' As varchar) AS "Key",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Bitmask' As integer) AS "Bitmask",
CAST(NEW."data"->'TypeDesc'->>'cs' As varchar) AS "TypeDesc-cs",
CAST(NEW."data"->'TypeDesc'->>'de' As varchar) AS "TypeDesc-de",
CAST(NEW."data"->'TypeDesc'->>'en' As varchar) AS "TypeDesc-en",
CAST(NEW."data"->'TypeDesc'->>'fr' As varchar) AS "TypeDesc-fr",
CAST(NEW."data"->'TypeDesc'->>'it' As varchar) AS "TypeDesc-it",
CAST(NEW."data"->'TypeDesc'->>'nl' As varchar) AS "TypeDesc-nl",
CAST(NEW."data"->'TypeDesc'->>'pl' As varchar) AS "TypeDesc-pl",
CAST(NEW."data"->'TypeDesc'->>'ru' As varchar) AS "TypeDesc-ru";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_accommodationtypes
    BEFORE INSERT
    ON accommodationtypes
    FOR EACH ROW
    EXECUTE PROCEDURE v_accommodationtypes_fn();

ALTER TABLE accommodationtypes
    ENABLE ALWAYS TRIGGER t_v_accommodationtypes;



DROP TABLE IF EXISTS "v_activities";

CREATE TABLE "v_activities" (
"Id" varchar,
"Self" varchar,
"Type" varchar,
"Active" bool,
"IsOpen" bool,
"Source" varchar,
"PoiType" varchar,
"SubType" varchar,
"FeetClimb" bool,
"Highlight" bool,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"Difficulty" varchar,
"HasRentals" bool,
"IsPrepared" bool,
"LastChange" varchar,
"FirstImport" varchar,
"IsWithLigth" bool,
"RunToValley" bool,
"AltitudeSumUp" float,
"BikeTransport" bool,
"LiftAvailable" bool,
"DistanceLength" float,
"AltitudeSumDown" float,
"HasFreeEntrance" bool,
"DistanceDuration" float,
"AltitudeDifference" float,
"AltitudeLowestPoint" float,
"AltitudeHighestPoint" float,
"TourismorganizationId" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-de-Title" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-en-Title" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-Language" varchar,
"Detail-it-Title" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-Language" varchar,
"Ratings-Stamina" varchar,
"Ratings-Landscape" varchar,
"Ratings-Technique" varchar,
"Ratings-Difficulty" varchar,
"Ratings-Experience" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-Surname" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-Faxnumber" varchar,
"ContactInfos-de-Givenname" varchar,
"ContactInfos-de-NamePrefix" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-Surname" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-Faxnumber" varchar,
"ContactInfos-en-Givenname" varchar,
"ContactInfos-en-NamePrefix" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-Surname" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-Faxnumber" varchar,
"ContactInfos-it-Givenname" varchar,
"ContactInfos-it-NamePrefix" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-AreaInfo-Id" varchar,
"LocationInfo-AreaInfo-Self" varchar,
"LocationInfo-AreaInfo-Name-cs" varchar,
"LocationInfo-AreaInfo-Name-de" varchar,
"LocationInfo-AreaInfo-Name-en" varchar,
"LocationInfo-AreaInfo-Name-fr" varchar,
"LocationInfo-AreaInfo-Name-it" varchar,
"LocationInfo-AreaInfo-Name-nl" varchar,
"LocationInfo-AreaInfo-Name-pl" varchar,
"LocationInfo-AreaInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"AdditionalPoiInfos-de-PoiType" varchar,
"AdditionalPoiInfos-de-SubType" varchar,
"AdditionalPoiInfos-de-Language" varchar,
"AdditionalPoiInfos-de-MainType" varchar,
"AdditionalPoiInfos-en-PoiType" varchar,
"AdditionalPoiInfos-en-SubType" varchar,
"AdditionalPoiInfos-en-Language" varchar,
"AdditionalPoiInfos-en-MainType" varchar,
"AdditionalPoiInfos-it-PoiType" varchar,
"AdditionalPoiInfos-it-SubType" varchar,
"AdditionalPoiInfos-it-Language" varchar,
"AdditionalPoiInfos-it-MainType" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-it-Url" varchar,
"SmgId" varchar,
"Detail-de-GetThereText" varchar,
"GpsPoints-position1-Gpstype" varchar,
"GpsPoints-position1-Altitude" float,
"GpsPoints-position1-Latitude" float,
"GpsPoints-position1-Longitude" float,
"GpsPoints-position1-AltitudeUnitofMeasure" varchar,
"Detail-it-GetThereText" varchar,
"GpsPoints-endposition-Gpstype" varchar,
"GpsPoints-endposition-Altitude" float,
"GpsPoints-endposition-Latitude" float,
"GpsPoints-endposition-Longitude" float,
"GpsPoints-endposition-AltitudeUnitofMeasure" varchar,
"Detail-de-AdditionalText" varchar,
"Detail-en-AdditionalText" varchar,
"Detail-it-AdditionalText" varchar,
"Detail-en-GetThereText" varchar,
"AdditionalPoiInfos-de-Novelty" varchar,
"AdditionalPoiInfos-en-Novelty" varchar,
"AdditionalPoiInfos-it-Novelty" varchar,
"OutdooractiveID" varchar,
"OutdooractiveElevationID" varchar
);

ALTER TABLE "v_activities" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_activities_fn CASCADE;

CREATE FUNCTION v_activities_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_activities
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'IsOpen' As bool) AS "IsOpen",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'PoiType' As varchar) AS "PoiType",
CAST(NEW."data"->>'SubType' As varchar) AS "SubType",
CAST(NEW."data"->>'FeetClimb' As bool) AS "FeetClimb",
CAST(NEW."data"->>'Highlight' As bool) AS "Highlight",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'Difficulty' As varchar) AS "Difficulty",
CAST(NEW."data"->>'HasRentals' As bool) AS "HasRentals",
CAST(NEW."data"->>'IsPrepared' As bool) AS "IsPrepared",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'IsWithLigth' As bool) AS "IsWithLigth",
CAST(NEW."data"->>'RunToValley' As bool) AS "RunToValley",
CAST(NEW."data"->>'AltitudeSumUp' As float) AS "AltitudeSumUp",
CAST(NEW."data"->>'BikeTransport' As bool) AS "BikeTransport",
CAST(NEW."data"->>'LiftAvailable' As bool) AS "LiftAvailable",
CAST(NEW."data"->>'DistanceLength' As float) AS "DistanceLength",
CAST(NEW."data"->>'AltitudeSumDown' As float) AS "AltitudeSumDown",
CAST(NEW."data"->>'HasFreeEntrance' As bool) AS "HasFreeEntrance",
CAST(NEW."data"->>'DistanceDuration' As float) AS "DistanceDuration",
CAST(NEW."data"->>'AltitudeDifference' As float) AS "AltitudeDifference",
CAST(NEW."data"->>'AltitudeLowestPoint' As float) AS "AltitudeLowestPoint",
CAST(NEW."data"->>'AltitudeHighestPoint' As float) AS "AltitudeHighestPoint",
CAST(NEW."data"->>'TourismorganizationId' As varchar) AS "TourismorganizationId",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Ratings'->>'Stamina' As varchar) AS "Ratings-Stamina",
CAST(NEW."data"->'Ratings'->>'Landscape' As varchar) AS "Ratings-Landscape",
CAST(NEW."data"->'Ratings'->>'Technique' As varchar) AS "Ratings-Technique",
CAST(NEW."data"->'Ratings'->>'Difficulty' As varchar) AS "Ratings-Difficulty",
CAST(NEW."data"->'Ratings'->>'Experience' As varchar) AS "Ratings-Experience",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'Surname' As varchar) AS "ContactInfos-de-Surname",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'Faxnumber' As varchar) AS "ContactInfos-de-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'Givenname' As varchar) AS "ContactInfos-de-Givenname",
CAST(NEW."data"->'ContactInfos'->'de'->>'NamePrefix' As varchar) AS "ContactInfos-de-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'Surname' As varchar) AS "ContactInfos-en-Surname",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Faxnumber' As varchar) AS "ContactInfos-en-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Givenname' As varchar) AS "ContactInfos-en-Givenname",
CAST(NEW."data"->'ContactInfos'->'en'->>'NamePrefix' As varchar) AS "ContactInfos-en-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'Surname' As varchar) AS "ContactInfos-it-Surname",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'Faxnumber' As varchar) AS "ContactInfos-it-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Givenname' As varchar) AS "ContactInfos-it-Givenname",
CAST(NEW."data"->'ContactInfos'->'it'->>'NamePrefix' As varchar) AS "ContactInfos-it-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->>'Id' As varchar) AS "LocationInfo-AreaInfo-Id",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->>'Self' As varchar) AS "LocationInfo-AreaInfo-Self",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-AreaInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'de' As varchar) AS "LocationInfo-AreaInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'en' As varchar) AS "LocationInfo-AreaInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-AreaInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'it' As varchar) AS "LocationInfo-AreaInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-AreaInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-AreaInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-AreaInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'PoiType' As varchar) AS "AdditionalPoiInfos-de-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'SubType' As varchar) AS "AdditionalPoiInfos-de-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'Language' As varchar) AS "AdditionalPoiInfos-de-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'MainType' As varchar) AS "AdditionalPoiInfos-de-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'PoiType' As varchar) AS "AdditionalPoiInfos-en-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'SubType' As varchar) AS "AdditionalPoiInfos-en-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'Language' As varchar) AS "AdditionalPoiInfos-en-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'MainType' As varchar) AS "AdditionalPoiInfos-en-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'PoiType' As varchar) AS "AdditionalPoiInfos-it-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'SubType' As varchar) AS "AdditionalPoiInfos-it-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'Language' As varchar) AS "AdditionalPoiInfos-it-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'MainType' As varchar) AS "AdditionalPoiInfos-it-MainType",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->>'SmgId' As varchar) AS "SmgId",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'GpsPoints'->'position1'->>'Gpstype' As varchar) AS "GpsPoints-position1-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position1'->>'Altitude' As float) AS "GpsPoints-position1-Altitude",
CAST(NEW."data"->'GpsPoints'->'position1'->>'Latitude' As float) AS "GpsPoints-position1-Latitude",
CAST(NEW."data"->'GpsPoints'->'position1'->>'Longitude' As float) AS "GpsPoints-position1-Longitude",
CAST(NEW."data"->'GpsPoints'->'position1'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position1-AltitudeUnitofMeasure",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'GpsPoints'->'endposition'->>'Gpstype' As varchar) AS "GpsPoints-endposition-Gpstype",
CAST(NEW."data"->'GpsPoints'->'endposition'->>'Altitude' As float) AS "GpsPoints-endposition-Altitude",
CAST(NEW."data"->'GpsPoints'->'endposition'->>'Latitude' As float) AS "GpsPoints-endposition-Latitude",
CAST(NEW."data"->'GpsPoints'->'endposition'->>'Longitude' As float) AS "GpsPoints-endposition-Longitude",
CAST(NEW."data"->'GpsPoints'->'endposition'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-endposition-AltitudeUnitofMeasure",
CAST(NEW."data"->'Detail'->'de'->>'AdditionalText' As varchar) AS "Detail-de-AdditionalText",
CAST(NEW."data"->'Detail'->'en'->>'AdditionalText' As varchar) AS "Detail-en-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'AdditionalText' As varchar) AS "Detail-it-AdditionalText",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'Novelty' As varchar) AS "AdditionalPoiInfos-de-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'Novelty' As varchar) AS "AdditionalPoiInfos-en-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'Novelty' As varchar) AS "AdditionalPoiInfos-it-Novelty",
CAST(NEW."data"->>'OutdooractiveID' As varchar) AS "OutdooractiveID",
CAST(NEW."data"->>'OutdooractiveElevationID' As varchar) AS "OutdooractiveElevationID";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities;



DROP TABLE IF EXISTS "v_activities_AreaId";

CREATE TABLE  "v_activities_AreaId" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_activities_AreaId_fn CASCADE;

CREATE FUNCTION v_activities_AreaId_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_AreaId"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'AreaId') AS "data"
        WHERE NEW."data" -> 'AreaId' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_AreaId
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_AreaId_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_AreaId;



DROP TABLE IF EXISTS "v_activities_AreaIds";

CREATE TABLE  "v_activities_AreaIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_activities_AreaIds_fn CASCADE;

CREATE FUNCTION v_activities_AreaIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_AreaIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'AreaIds') AS "data"
        WHERE NEW."data" -> 'AreaIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_AreaIds
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_AreaIds_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_AreaIds;



DROP TABLE IF EXISTS "v_activities_SmgTags";

CREATE TABLE  "v_activities_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_activities_SmgTags_fn CASCADE;

CREATE FUNCTION v_activities_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_SmgTags
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_SmgTags_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_SmgTags;



DROP TABLE IF EXISTS "v_activities_HasLanguage";

CREATE TABLE  "v_activities_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_activities_HasLanguage_fn CASCADE;

CREATE FUNCTION v_activities_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_HasLanguage
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_HasLanguage_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_HasLanguage;



DROP TABLE IF EXISTS "v_activities_Areas";

CREATE TABLE "v_activities_Areas" (
"activities_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_activities_Areas_fn CASCADE;

CREATE FUNCTION v_activities_Areas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_Areas"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Areas') AS "data"
        WHERE NEW."data" -> 'Areas' != 'null')
    SELECT "Id" AS "activities_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_Areas
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_Areas_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_Areas;



DROP TABLE IF EXISTS "v_activities_ODHTags";

CREATE TABLE "v_activities_ODHTags" (
"activities_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_activities_ODHTags_fn CASCADE;

CREATE FUNCTION v_activities_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "activities_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_ODHTags
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_ODHTags_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_ODHTags;



DROP TABLE IF EXISTS "v_activities_ActivityTypes";

CREATE TABLE "v_activities_ActivityTypes" (
"activities_Id" varchar,
"Id" varchar,
"Self" varchar,
"Type" varchar
);

DROP FUNCTION IF EXISTS v_activities_ActivityTypes_fn CASCADE;

CREATE FUNCTION v_activities_ActivityTypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_ActivityTypes"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ActivityTypes') AS "data"
        WHERE NEW."data" -> 'ActivityTypes' != 'null')
    SELECT "Id" AS "activities_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Type' As varchar) AS "Type"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_ActivityTypes
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_ActivityTypes_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_ActivityTypes;



DROP TABLE IF EXISTS "v_activities_GpsInfo";

CREATE TABLE "v_activities_GpsInfo" (
"activities_Id" varchar,
"Gpstype" varchar,
"Altitude" float,
"Latitude" float,
"Longitude" float,
"AltitudeUnitofMeasure" varchar
);

DROP FUNCTION IF EXISTS v_activities_GpsInfo_fn CASCADE;

CREATE FUNCTION v_activities_GpsInfo_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_GpsInfo"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'GpsInfo') AS "data"
        WHERE NEW."data" -> 'GpsInfo' != 'null')
    SELECT "Id" AS "activities_Id", CAST("data"->>'Gpstype' As varchar) AS "Gpstype",
CAST("data"->>'Altitude' As float) AS "Altitude",
CAST("data"->>'Latitude' As float) AS "Latitude",
CAST("data"->>'Longitude' As float) AS "Longitude",
CAST("data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_GpsInfo
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_GpsInfo_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_GpsInfo;



DROP TABLE IF EXISTS "v_activities_GpsTrack";

CREATE TABLE "v_activities_GpsTrack" (
"activities_Id" varchar,
"Id" varchar,
"Type" varchar,
"GpxTrackUrl" varchar,
"GpxTrackDesc-de" varchar,
"GpxTrackDesc-en" varchar,
"GpxTrackDesc-it" varchar
);

DROP FUNCTION IF EXISTS v_activities_GpsTrack_fn CASCADE;

CREATE FUNCTION v_activities_GpsTrack_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_GpsTrack"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'GpsTrack') AS "data"
        WHERE NEW."data" -> 'GpsTrack' != 'null')
    SELECT "Id" AS "activities_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Type' As varchar) AS "Type",
CAST("data"->>'GpxTrackUrl' As varchar) AS "GpxTrackUrl",
CAST("data"->'GpxTrackDesc'->>'de' As varchar) AS "GpxTrackDesc-de",
CAST("data"->'GpxTrackDesc'->>'en' As varchar) AS "GpxTrackDesc-en",
CAST("data"->'GpxTrackDesc'->>'it' As varchar) AS "GpxTrackDesc-it"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_GpsTrack
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_GpsTrack_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_GpsTrack;



DROP TABLE IF EXISTS "v_activities_ImageGallery";

CREATE TABLE "v_activities_ImageGallery" (
"activities_Id" varchar,
"Width" integer,
"Height" integer,
"ImageUrl" varchar,
"CopyRight" varchar,
"ImageName" varchar,
"ImageSource" varchar,
"IsInGallery" bool,
"ListPosition" integer,
"ImageDesc-de" varchar,
"ImageDesc-en" varchar,
"ImageDesc-it" varchar
);

DROP FUNCTION IF EXISTS v_activities_ImageGallery_fn CASCADE;

CREATE FUNCTION v_activities_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "activities_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'CopyRight' As varchar) AS "CopyRight",
CAST("data"->>'ImageName' As varchar) AS "ImageName",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'ImageDesc'->>'de' As varchar) AS "ImageDesc-de",
CAST("data"->'ImageDesc'->>'en' As varchar) AS "ImageDesc-en",
CAST("data"->'ImageDesc'->>'it' As varchar) AS "ImageDesc-it"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_ImageGallery
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_ImageGallery_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_ImageGallery;



DROP TABLE IF EXISTS "v_activities_OperationSchedule";

CREATE TABLE "v_activities_OperationSchedule" (
"activities_Id" varchar,
"Stop" varchar,
"Type" varchar,
"Start" varchar,
"OperationscheduleName-de" varchar
);

DROP FUNCTION IF EXISTS v_activities_OperationSchedule_fn CASCADE;

CREATE FUNCTION v_activities_OperationSchedule_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_OperationSchedule"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'OperationSchedule') AS "data"
        WHERE NEW."data" -> 'OperationSchedule' != 'null')
    SELECT "Id" AS "activities_Id", CAST("data"->>'Stop' As varchar) AS "Stop",
CAST("data"->>'Type' As varchar) AS "Type",
CAST("data"->>'Start' As varchar) AS "Start",
CAST("data"->'OperationscheduleName'->>'de' As varchar) AS "OperationscheduleName-de"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_OperationSchedule
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_OperationSchedule_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_OperationSchedule;



DROP TABLE IF EXISTS "v_activities_Exposition";

CREATE TABLE  "v_activities_Exposition" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_activities_Exposition_fn CASCADE;

CREATE FUNCTION v_activities_Exposition_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_Exposition"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'Exposition') AS "data"
        WHERE NEW."data" -> 'Exposition' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_Exposition
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_Exposition_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_Exposition;



DROP TABLE IF EXISTS "v_activities_OperationSchedule_OperationScheduleTime";

CREATE TABLE "v_activities_OperationSchedule_OperationScheduleTime" (
"activities_Id" varchar,
"End" varchar,
"Start" varchar,
"State" integer,
"Friday" bool,
"Monday" bool,
"Sunday" bool,
"Tuesday" bool,
"Saturday" bool,
"Thursday" bool,
"Timecode" integer,
"Thuresday" bool,
"Wednesday" bool
);

DROP FUNCTION IF EXISTS v_activities_OperationSchedule_OperationScheduleTime_fn CASCADE;

CREATE FUNCTION v_activities_OperationSchedule_OperationScheduleTime_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activities_OperationSchedule_OperationScheduleTime"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'OperationSchedule_OperationScheduleTime') AS "data"
        WHERE NEW."data" -> 'OperationSchedule_OperationScheduleTime' != 'null')
    SELECT "Id" AS "activities_Id", CAST("data"->>'End' As varchar) AS "End",
CAST("data"->>'Start' As varchar) AS "Start",
CAST("data"->>'State' As integer) AS "State",
CAST("data"->>'Friday' As bool) AS "Friday",
CAST("data"->>'Monday' As bool) AS "Monday",
CAST("data"->>'Sunday' As bool) AS "Sunday",
CAST("data"->>'Tuesday' As bool) AS "Tuesday",
CAST("data"->>'Saturday' As bool) AS "Saturday",
CAST("data"->>'Thursday' As bool) AS "Thursday",
CAST("data"->>'Timecode' As integer) AS "Timecode",
CAST("data"->>'Thuresday' As bool) AS "Thuresday",
CAST("data"->>'Wednesday' As bool) AS "Wednesday"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activities_OperationSchedule_OperationScheduleTime
    BEFORE INSERT
    ON activities
    FOR EACH ROW
    EXECUTE PROCEDURE v_activities_OperationSchedule_OperationScheduleTime_fn();

ALTER TABLE activities
    ENABLE ALWAYS TRIGGER t_v_activities_OperationSchedule_OperationScheduleTime;



DROP TABLE IF EXISTS "v_activitiesopen";

CREATE TABLE "v_activitiesopen" (
"Id" varchar,
"Self" varchar,
"Type" varchar,
"Active" bool,
"IsOpen" bool,
"Source" varchar,
"PoiType" varchar,
"SubType" varchar,
"FeetClimb" bool,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"HasRentals" bool,
"LastChange" varchar,
"FirstImport" varchar,
"IsWithLigth" bool,
"BikeTransport" bool,
"LiftAvailable" bool,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-de-Title" varchar,
"Detail-de-Language" varchar,
"Detail-en-Title" varchar,
"Detail-en-Language" varchar,
"Detail-it-Title" varchar,
"Detail-it-Language" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-Language" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"AdditionalPoiInfos-de-PoiType" varchar,
"AdditionalPoiInfos-de-SubType" varchar,
"AdditionalPoiInfos-de-Language" varchar,
"AdditionalPoiInfos-de-MainType" varchar,
"AdditionalPoiInfos-en-PoiType" varchar,
"AdditionalPoiInfos-en-SubType" varchar,
"AdditionalPoiInfos-en-Language" varchar,
"AdditionalPoiInfos-en-MainType" varchar,
"AdditionalPoiInfos-it-PoiType" varchar,
"AdditionalPoiInfos-it-SubType" varchar,
"AdditionalPoiInfos-it-Language" varchar,
"AdditionalPoiInfos-it-MainType" varchar,
"GpsPoints-endposition-Gpstype" varchar,
"GpsPoints-endposition-Altitude" float,
"GpsPoints-endposition-Latitude" float,
"GpsPoints-endposition-Longitude" float,
"GpsPoints-endposition-AltitudeUnitofMeasure" varchar,
"AdditionalPoiInfos-de-Novelty" varchar,
"AdditionalPoiInfos-it-Novelty" varchar,
"AdditionalPoiInfos-en-Novelty" varchar
);

ALTER TABLE "v_activitiesopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_activitiesopen_fn CASCADE;

CREATE FUNCTION v_activitiesopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_activitiesopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'IsOpen' As bool) AS "IsOpen",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'PoiType' As varchar) AS "PoiType",
CAST(NEW."data"->>'SubType' As varchar) AS "SubType",
CAST(NEW."data"->>'FeetClimb' As bool) AS "FeetClimb",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'HasRentals' As bool) AS "HasRentals",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'IsWithLigth' As bool) AS "IsWithLigth",
CAST(NEW."data"->>'BikeTransport' As bool) AS "BikeTransport",
CAST(NEW."data"->>'LiftAvailable' As bool) AS "LiftAvailable",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'PoiType' As varchar) AS "AdditionalPoiInfos-de-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'SubType' As varchar) AS "AdditionalPoiInfos-de-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'Language' As varchar) AS "AdditionalPoiInfos-de-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'MainType' As varchar) AS "AdditionalPoiInfos-de-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'PoiType' As varchar) AS "AdditionalPoiInfos-en-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'SubType' As varchar) AS "AdditionalPoiInfos-en-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'Language' As varchar) AS "AdditionalPoiInfos-en-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'MainType' As varchar) AS "AdditionalPoiInfos-en-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'PoiType' As varchar) AS "AdditionalPoiInfos-it-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'SubType' As varchar) AS "AdditionalPoiInfos-it-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'Language' As varchar) AS "AdditionalPoiInfos-it-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'MainType' As varchar) AS "AdditionalPoiInfos-it-MainType",
CAST(NEW."data"->'GpsPoints'->'endposition'->>'Gpstype' As varchar) AS "GpsPoints-endposition-Gpstype",
CAST(NEW."data"->'GpsPoints'->'endposition'->>'Altitude' As float) AS "GpsPoints-endposition-Altitude",
CAST(NEW."data"->'GpsPoints'->'endposition'->>'Latitude' As float) AS "GpsPoints-endposition-Latitude",
CAST(NEW."data"->'GpsPoints'->'endposition'->>'Longitude' As float) AS "GpsPoints-endposition-Longitude",
CAST(NEW."data"->'GpsPoints'->'endposition'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-endposition-AltitudeUnitofMeasure",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'Novelty' As varchar) AS "AdditionalPoiInfos-de-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'Novelty' As varchar) AS "AdditionalPoiInfos-it-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'Novelty' As varchar) AS "AdditionalPoiInfos-en-Novelty";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activitiesopen
    BEFORE INSERT
    ON activitiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_activitiesopen_fn();

ALTER TABLE activitiesopen
    ENABLE ALWAYS TRIGGER t_v_activitiesopen;



DROP TABLE IF EXISTS "v_activitiesopen_SmgTags";

CREATE TABLE  "v_activitiesopen_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_activitiesopen_SmgTags_fn CASCADE;

CREATE FUNCTION v_activitiesopen_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activitiesopen_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activitiesopen_SmgTags
    BEFORE INSERT
    ON activitiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_activitiesopen_SmgTags_fn();

ALTER TABLE activitiesopen
    ENABLE ALWAYS TRIGGER t_v_activitiesopen_SmgTags;



DROP TABLE IF EXISTS "v_activitiesopen_HasLanguage";

CREATE TABLE  "v_activitiesopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_activitiesopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_activitiesopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activitiesopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activitiesopen_HasLanguage
    BEFORE INSERT
    ON activitiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_activitiesopen_HasLanguage_fn();

ALTER TABLE activitiesopen
    ENABLE ALWAYS TRIGGER t_v_activitiesopen_HasLanguage;



DROP TABLE IF EXISTS "v_activitiesopen_GpsInfo";

CREATE TABLE "v_activitiesopen_GpsInfo" (
"activitiesopen_Id" varchar,
"Gpstype" varchar,
"Altitude" float,
"Latitude" float,
"Longitude" float,
"AltitudeUnitofMeasure" varchar
);

DROP FUNCTION IF EXISTS v_activitiesopen_GpsInfo_fn CASCADE;

CREATE FUNCTION v_activitiesopen_GpsInfo_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activitiesopen_GpsInfo"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'GpsInfo') AS "data"
        WHERE NEW."data" -> 'GpsInfo' != 'null')
    SELECT "Id" AS "activitiesopen_Id", CAST("data"->>'Gpstype' As varchar) AS "Gpstype",
CAST("data"->>'Altitude' As float) AS "Altitude",
CAST("data"->>'Latitude' As float) AS "Latitude",
CAST("data"->>'Longitude' As float) AS "Longitude",
CAST("data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activitiesopen_GpsInfo
    BEFORE INSERT
    ON activitiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_activitiesopen_GpsInfo_fn();

ALTER TABLE activitiesopen
    ENABLE ALWAYS TRIGGER t_v_activitiesopen_GpsInfo;



DROP TABLE IF EXISTS "v_activitiesopen_LTSTags";

CREATE TABLE "v_activitiesopen_LTSTags" (
"activitiesopen_Id" varchar,
"Id" varchar,
"Self" varchar,
"Level" integer,
"LTSRID" varchar,
"TagName-de" varchar,
"TagName-en" varchar,
"TagName-it" varchar
);

DROP FUNCTION IF EXISTS v_activitiesopen_LTSTags_fn CASCADE;

CREATE FUNCTION v_activitiesopen_LTSTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activitiesopen_LTSTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'LTSTags') AS "data"
        WHERE NEW."data" -> 'LTSTags' != 'null')
    SELECT "Id" AS "activitiesopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Level' As integer) AS "Level",
CAST("data"->>'LTSRID' As varchar) AS "LTSRID",
CAST("data"->'TagName'->>'de' As varchar) AS "TagName-de",
CAST("data"->'TagName'->>'en' As varchar) AS "TagName-en",
CAST("data"->'TagName'->>'it' As varchar) AS "TagName-it"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activitiesopen_LTSTags
    BEFORE INSERT
    ON activitiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_activitiesopen_LTSTags_fn();

ALTER TABLE activitiesopen
    ENABLE ALWAYS TRIGGER t_v_activitiesopen_LTSTags;



DROP TABLE IF EXISTS "v_activitiesopen_ODHTags";

CREATE TABLE "v_activitiesopen_ODHTags" (
"activitiesopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_activitiesopen_ODHTags_fn CASCADE;

CREATE FUNCTION v_activitiesopen_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activitiesopen_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "activitiesopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activitiesopen_ODHTags
    BEFORE INSERT
    ON activitiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_activitiesopen_ODHTags_fn();

ALTER TABLE activitiesopen
    ENABLE ALWAYS TRIGGER t_v_activitiesopen_ODHTags;



DROP TABLE IF EXISTS "v_activitiesopen_ActivityTypes";

CREATE TABLE "v_activitiesopen_ActivityTypes" (
"activitiesopen_Id" varchar,
"Id" varchar,
"Self" varchar,
"Type" varchar
);

DROP FUNCTION IF EXISTS v_activitiesopen_ActivityTypes_fn CASCADE;

CREATE FUNCTION v_activitiesopen_ActivityTypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_activitiesopen_ActivityTypes"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ActivityTypes') AS "data"
        WHERE NEW."data" -> 'ActivityTypes' != 'null')
    SELECT "Id" AS "activitiesopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Type' As varchar) AS "Type"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activitiesopen_ActivityTypes
    BEFORE INSERT
    ON activitiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_activitiesopen_ActivityTypes_fn();

ALTER TABLE activitiesopen
    ENABLE ALWAYS TRIGGER t_v_activitiesopen_ActivityTypes;



DROP TABLE IF EXISTS "v_activitytypes";

CREATE TABLE "v_activitytypes" (
"Id" varchar,
"Key" varchar,
"Type" varchar,
"Parent" varchar,
"Bitmask" integer,
"TypeDesc-de" varchar,
"TypeDesc-en" varchar,
"TypeDesc-it" varchar
);

ALTER TABLE "v_activitytypes" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_activitytypes_fn CASCADE;

CREATE FUNCTION v_activitytypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_activitytypes
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Key' As varchar) AS "Key",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Parent' As varchar) AS "Parent",
CAST(NEW."data"->>'Bitmask' As integer) AS "Bitmask",
CAST(NEW."data"->'TypeDesc'->>'de' As varchar) AS "TypeDesc-de",
CAST(NEW."data"->'TypeDesc'->>'en' As varchar) AS "TypeDesc-en",
CAST(NEW."data"->'TypeDesc'->>'it' As varchar) AS "TypeDesc-it";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_activitytypes
    BEFORE INSERT
    ON activitytypes
    FOR EACH ROW
    EXECUTE PROCEDURE v_activitytypes_fn();

ALTER TABLE activitytypes
    ENABLE ALWAYS TRIGGER t_v_activitytypes;



DROP TABLE IF EXISTS "v_areas";

CREATE TABLE "v_areas" (
"Id" varchar,
"GID" varchar,
"Self" varchar,
"Active" bool,
"AreaType" varchar,
"CustomId" varchar,
"RegionId" varchar,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"TourismvereinId" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"Region-Id" varchar,
"Region-Self" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"Tourismassociation-Id" varchar,
"Tourismassociation-Self" varchar,
"LtsID" varchar
);

ALTER TABLE "v_areas" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_areas_fn CASCADE;

CREATE FUNCTION v_areas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_areas
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'GID' As varchar) AS "GID",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'AreaType' As varchar) AS "AreaType",
CAST(NEW."data"->>'CustomId' As varchar) AS "CustomId",
CAST(NEW."data"->>'RegionId' As varchar) AS "RegionId",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'TourismvereinId' As varchar) AS "TourismvereinId",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'Region'->>'Id' As varchar) AS "Region-Id",
CAST(NEW."data"->'Region'->>'Self' As varchar) AS "Region-Self",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'Tourismassociation'->>'Id' As varchar) AS "Tourismassociation-Id",
CAST(NEW."data"->'Tourismassociation'->>'Self' As varchar) AS "Tourismassociation-Self",
CAST(NEW."data"->>'LtsID' As varchar) AS "LtsID";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_areas
    BEFORE INSERT
    ON areas
    FOR EACH ROW
    EXECUTE PROCEDURE v_areas_fn();

ALTER TABLE areas
    ENABLE ALWAYS TRIGGER t_v_areas;



DROP TABLE IF EXISTS "v_articles";

CREATE TABLE "v_articles" (
"Id" varchar,
"Self" varchar,
"Type" varchar,
"Active" bool,
"Source" varchar,
"SubType" varchar,
"Highlight" bool,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"ArticleDate" varchar,
"FirstImport" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-en-Title" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-Language" varchar,
"Detail-en-IntroText" varchar,
"Detail-en-SubHeader" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"AdditionalArticleInfos-en-Language" varchar,
"AdditionalArticleInfos-en-Elements-author" varchar,
"AdditionalArticleInfos-en-Elements-playlist" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-Language" varchar,
"Detail-nl-IntroText" varchar,
"Detail-nl-SubHeader" varchar,
"ContactInfos-nl-City" varchar,
"ContactInfos-nl-ZipCode" varchar,
"ContactInfos-nl-Language" varchar,
"ContactInfos-nl-CountryCode" varchar,
"ContactInfos-nl-CountryName" varchar,
"AdditionalArticleInfos-nl-Language" varchar,
"AdditionalArticleInfos-nl-Elements-author" varchar,
"AdditionalArticleInfos-nl-Elements-playlist" varchar,
"Detail-de-Title" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-de-SubHeader" varchar,
"Detail-de-AdditionalText" varchar,
"Detail-it-Title" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-MetaTitle" varchar,
"Detail-it-SubHeader" varchar,
"Detail-it-AdditionalText" varchar,
"AdditionalArticleInfos-de-Language" varchar,
"AdditionalArticleInfos-de-Elements-zutat1" varchar,
"AdditionalArticleInfos-de-Elements-personen" varchar,
"AdditionalArticleInfos-de-Elements-zubereitungstext" varchar,
"AdditionalArticleInfos-it-Language" varchar,
"AdditionalArticleInfos-it-Elements-zutat1" varchar,
"AdditionalArticleInfos-it-Elements-personen" varchar,
"AdditionalArticleInfos-it-Elements-zubereitungstext" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-Language" varchar,
"Detail-pl-IntroText" varchar,
"Detail-pl-SubHeader" varchar,
"ContactInfos-pl-City" varchar,
"ContactInfos-pl-ZipCode" varchar,
"ContactInfos-pl-Language" varchar,
"ContactInfos-pl-CountryCode" varchar,
"ContactInfos-pl-CountryName" varchar,
"AdditionalArticleInfos-pl-Language" varchar,
"AdditionalArticleInfos-pl-Elements-author" varchar,
"AdditionalArticleInfos-pl-Elements-playlist" varchar,
"AdditionalArticleInfos-pl-Elements-pressecat" varchar,
"Detail-de-Language" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"AdditionalArticleInfos-de-Elements-author" varchar,
"AdditionalArticleInfos-de-Elements-playlist" varchar,
"AdditionalArticleInfos-de-Elements-tipptext" varchar,
"AdditionalArticleInfos-it-Elements-tipptext" varchar,
"AdditionalArticleInfos-de-Elements-zeit" varchar,
"AdditionalArticleInfos-de-Elements-kategorie" varchar,
"AdditionalArticleInfos-it-Elements-zeit" varchar,
"AdditionalArticleInfos-it-Elements-author" varchar,
"AdditionalArticleInfos-it-Elements-kategorie" varchar,
"Detail-en-AdditionalText" varchar,
"Detail-it-Language" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"AdditionalArticleInfos-en-Elements-zutat1" varchar,
"AdditionalArticleInfos-en-Elements-tipptext" varchar,
"AdditionalArticleInfos-en-Elements-zubereitungstext" varchar,
"Detail-de-GetThereText" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-BaseText" varchar,
"Detail-fr-MetaDesc" varchar,
"Detail-fr-IntroText" varchar,
"Detail-fr-SubHeader" varchar,
"AdditionalArticleInfos-fr-Language" varchar,
"AdditionalArticleInfos-fr-Elements-zeit" varchar,
"AdditionalArticleInfos-fr-Elements-zutat1" varchar,
"AdditionalArticleInfos-fr-Elements-personen" varchar,
"AdditionalArticleInfos-fr-Elements-tipptext" varchar,
"AdditionalArticleInfos-fr-Elements-zubereitungstext" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-fr-MetaTitle" varchar,
"Detail-fr-AdditionalText" varchar,
"ArticleLinkInfo-de-Language" varchar,
"A-d-Elements-Weitere Rezepte mit Südtiroler Speck g.g.A." varchar,
"ArticleLinkInfo-en-Language" varchar,
"A-e-Elements-More recipes with Speck Alto Adige P.G.I." varchar,
"ArticleLinkInfo-it-Language" varchar,
"A-i-E-Ulteriori ricette con lo speck dell’Alto Adige I.G.P." varchar,
"AdditionalArticleInfos-en-Elements-personen" varchar,
"Detail-de-Header" varchar,
"AdditionalArticleInfos-en-Elements-zeit" varchar,
"Detail-fr-Header" varchar,
"Detail-pl-AdditionalText" varchar,
"AdditionalArticleInfos-pl-Elements-zutat1" varchar,
"AdditionalArticleInfos-pl-Elements-tipptext" varchar,
"AdditionalArticleInfos-pl-Elements-zubereitungstext" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-Language" varchar,
"Detail-cs-SubHeader" varchar,
"ContactInfos-cs-City" varchar,
"ContactInfos-cs-ZipCode" varchar,
"ContactInfos-cs-Language" varchar,
"ContactInfos-cs-CountryCode" varchar,
"ContactInfos-cs-CountryName" varchar,
"AdditionalArticleInfos-cs-Language" varchar,
"AdditionalArticleInfos-cs-Elements-zutat1" varchar,
"AdditionalArticleInfos-cs-Elements-tipptext" varchar,
"AdditionalArticleInfos-cs-Elements-zubereitungstext" varchar,
"Detail-en-Header" varchar
);

ALTER TABLE "v_articles" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_articles_fn CASCADE;

CREATE FUNCTION v_articles_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_articles
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'SubType' As varchar) AS "SubType",
CAST(NEW."data"->>'Highlight' As bool) AS "Highlight",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'ArticleDate' As varchar) AS "ArticleDate",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->>'Language' As varchar) AS "AdditionalArticleInfos-en-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'author' As varchar) AS "AdditionalArticleInfos-en-Elements-author",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'playlist' As varchar) AS "AdditionalArticleInfos-en-Elements-playlist",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'SubHeader' As varchar) AS "Detail-nl-SubHeader",
CAST(NEW."data"->'ContactInfos'->'nl'->>'City' As varchar) AS "ContactInfos-nl-City",
CAST(NEW."data"->'ContactInfos'->'nl'->>'ZipCode' As varchar) AS "ContactInfos-nl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Language' As varchar) AS "ContactInfos-nl-Language",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryCode' As varchar) AS "ContactInfos-nl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryName' As varchar) AS "ContactInfos-nl-CountryName",
CAST(NEW."data"->'AdditionalArticleInfos'->'nl'->>'Language' As varchar) AS "AdditionalArticleInfos-nl-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'nl'->'Elements'->>'author' As varchar) AS "AdditionalArticleInfos-nl-Elements-author",
CAST(NEW."data"->'AdditionalArticleInfos'->'nl'->'Elements'->>'playlist' As varchar) AS "AdditionalArticleInfos-nl-Elements-playlist",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'de'->>'AdditionalText' As varchar) AS "Detail-de-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'AdditionalText' As varchar) AS "Detail-it-AdditionalText",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->>'Language' As varchar) AS "AdditionalArticleInfos-de-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'zutat1' As varchar) AS "AdditionalArticleInfos-de-Elements-zutat1",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'personen' As varchar) AS "AdditionalArticleInfos-de-Elements-personen",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'zubereitungstext' As varchar) AS "AdditionalArticleInfos-de-Elements-zubereitungstext",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->>'Language' As varchar) AS "AdditionalArticleInfos-it-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'zutat1' As varchar) AS "AdditionalArticleInfos-it-Elements-zutat1",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'personen' As varchar) AS "AdditionalArticleInfos-it-Elements-personen",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'zubereitungstext' As varchar) AS "AdditionalArticleInfos-it-Elements-zubereitungstext",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'SubHeader' As varchar) AS "Detail-pl-SubHeader",
CAST(NEW."data"->'ContactInfos'->'pl'->>'City' As varchar) AS "ContactInfos-pl-City",
CAST(NEW."data"->'ContactInfos'->'pl'->>'ZipCode' As varchar) AS "ContactInfos-pl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Language' As varchar) AS "ContactInfos-pl-Language",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryCode' As varchar) AS "ContactInfos-pl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryName' As varchar) AS "ContactInfos-pl-CountryName",
CAST(NEW."data"->'AdditionalArticleInfos'->'pl'->>'Language' As varchar) AS "AdditionalArticleInfos-pl-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'pl'->'Elements'->>'author' As varchar) AS "AdditionalArticleInfos-pl-Elements-author",
CAST(NEW."data"->'AdditionalArticleInfos'->'pl'->'Elements'->>'playlist' As varchar) AS "AdditionalArticleInfos-pl-Elements-playlist",
CAST(NEW."data"->'AdditionalArticleInfos'->'pl'->'Elements'->>'pressecat' As varchar) AS "AdditionalArticleInfos-pl-Elements-pressecat",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'author' As varchar) AS "AdditionalArticleInfos-de-Elements-author",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'playlist' As varchar) AS "AdditionalArticleInfos-de-Elements-playlist",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'tipptext' As varchar) AS "AdditionalArticleInfos-de-Elements-tipptext",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'tipptext' As varchar) AS "AdditionalArticleInfos-it-Elements-tipptext",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'zeit' As varchar) AS "AdditionalArticleInfos-de-Elements-zeit",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'kategorie' As varchar) AS "AdditionalArticleInfos-de-Elements-kategorie",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'zeit' As varchar) AS "AdditionalArticleInfos-it-Elements-zeit",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'author' As varchar) AS "AdditionalArticleInfos-it-Elements-author",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'kategorie' As varchar) AS "AdditionalArticleInfos-it-Elements-kategorie",
CAST(NEW."data"->'Detail'->'en'->>'AdditionalText' As varchar) AS "Detail-en-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'zutat1' As varchar) AS "AdditionalArticleInfos-en-Elements-zutat1",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'tipptext' As varchar) AS "AdditionalArticleInfos-en-Elements-tipptext",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'zubereitungstext' As varchar) AS "AdditionalArticleInfos-en-Elements-zubereitungstext",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'BaseText' As varchar) AS "Detail-fr-BaseText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaDesc' As varchar) AS "Detail-fr-MetaDesc",
CAST(NEW."data"->'Detail'->'fr'->>'IntroText' As varchar) AS "Detail-fr-IntroText",
CAST(NEW."data"->'Detail'->'fr'->>'SubHeader' As varchar) AS "Detail-fr-SubHeader",
CAST(NEW."data"->'AdditionalArticleInfos'->'fr'->>'Language' As varchar) AS "AdditionalArticleInfos-fr-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'fr'->'Elements'->>'zeit' As varchar) AS "AdditionalArticleInfos-fr-Elements-zeit",
CAST(NEW."data"->'AdditionalArticleInfos'->'fr'->'Elements'->>'zutat1' As varchar) AS "AdditionalArticleInfos-fr-Elements-zutat1",
CAST(NEW."data"->'AdditionalArticleInfos'->'fr'->'Elements'->>'personen' As varchar) AS "AdditionalArticleInfos-fr-Elements-personen",
CAST(NEW."data"->'AdditionalArticleInfos'->'fr'->'Elements'->>'tipptext' As varchar) AS "AdditionalArticleInfos-fr-Elements-tipptext",
CAST(NEW."data"->'AdditionalArticleInfos'->'fr'->'Elements'->>'zubereitungstext' As varchar) AS "AdditionalArticleInfos-fr-Elements-zubereitungstext",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'fr'->>'MetaTitle' As varchar) AS "Detail-fr-MetaTitle",
CAST(NEW."data"->'Detail'->'fr'->>'AdditionalText' As varchar) AS "Detail-fr-AdditionalText",
CAST(NEW."data"->'ArticleLinkInfo'->'de'->>'Language' As varchar) AS "ArticleLinkInfo-de-Language",
CAST(NEW."data"->'ArticleLinkInfo'->'de'->'Elements'->>'Weitere Rezepte mit Südtiroler Speck g.g.A.' As varchar) AS "A-d-Elements-Weitere Rezepte mit Südtiroler Speck g.g.A.",
CAST(NEW."data"->'ArticleLinkInfo'->'en'->>'Language' As varchar) AS "ArticleLinkInfo-en-Language",
CAST(NEW."data"->'ArticleLinkInfo'->'en'->'Elements'->>'More recipes with Speck Alto Adige P.G.I.' As varchar) AS "A-e-Elements-More recipes with Speck Alto Adige P.G.I.",
CAST(NEW."data"->'ArticleLinkInfo'->'it'->>'Language' As varchar) AS "ArticleLinkInfo-it-Language",
CAST(NEW."data"->'ArticleLinkInfo'->'it'->'Elements'->>'Ulteriori ricette con lo speck dell’Alto Adige I.G.P.' As varchar) AS "A-i-E-Ulteriori ricette con lo speck dell’Alto Adige I.G.P.",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'personen' As varchar) AS "AdditionalArticleInfos-en-Elements-personen",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'zeit' As varchar) AS "AdditionalArticleInfos-en-Elements-zeit",
CAST(NEW."data"->'Detail'->'fr'->>'Header' As varchar) AS "Detail-fr-Header",
CAST(NEW."data"->'Detail'->'pl'->>'AdditionalText' As varchar) AS "Detail-pl-AdditionalText",
CAST(NEW."data"->'AdditionalArticleInfos'->'pl'->'Elements'->>'zutat1' As varchar) AS "AdditionalArticleInfos-pl-Elements-zutat1",
CAST(NEW."data"->'AdditionalArticleInfos'->'pl'->'Elements'->>'tipptext' As varchar) AS "AdditionalArticleInfos-pl-Elements-tipptext",
CAST(NEW."data"->'AdditionalArticleInfos'->'pl'->'Elements'->>'zubereitungstext' As varchar) AS "AdditionalArticleInfos-pl-Elements-zubereitungstext",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'cs'->>'SubHeader' As varchar) AS "Detail-cs-SubHeader",
CAST(NEW."data"->'ContactInfos'->'cs'->>'City' As varchar) AS "ContactInfos-cs-City",
CAST(NEW."data"->'ContactInfos'->'cs'->>'ZipCode' As varchar) AS "ContactInfos-cs-ZipCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Language' As varchar) AS "ContactInfos-cs-Language",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryCode' As varchar) AS "ContactInfos-cs-CountryCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryName' As varchar) AS "ContactInfos-cs-CountryName",
CAST(NEW."data"->'AdditionalArticleInfos'->'cs'->>'Language' As varchar) AS "AdditionalArticleInfos-cs-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'cs'->'Elements'->>'zutat1' As varchar) AS "AdditionalArticleInfos-cs-Elements-zutat1",
CAST(NEW."data"->'AdditionalArticleInfos'->'cs'->'Elements'->>'tipptext' As varchar) AS "AdditionalArticleInfos-cs-Elements-tipptext",
CAST(NEW."data"->'AdditionalArticleInfos'->'cs'->'Elements'->>'zubereitungstext' As varchar) AS "AdditionalArticleInfos-cs-Elements-zubereitungstext",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articles
    BEFORE INSERT
    ON articles
    FOR EACH ROW
    EXECUTE PROCEDURE v_articles_fn();

ALTER TABLE articles
    ENABLE ALWAYS TRIGGER t_v_articles;



DROP TABLE IF EXISTS "v_articles_HasLanguage";

CREATE TABLE  "v_articles_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_articles_HasLanguage_fn CASCADE;

CREATE FUNCTION v_articles_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articles_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articles_HasLanguage
    BEFORE INSERT
    ON articles
    FOR EACH ROW
    EXECUTE PROCEDURE v_articles_HasLanguage_fn();

ALTER TABLE articles
    ENABLE ALWAYS TRIGGER t_v_articles_HasLanguage;



DROP TABLE IF EXISTS "v_articles_ArticleTypeList";

CREATE TABLE  "v_articles_ArticleTypeList" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_articles_ArticleTypeList_fn CASCADE;

CREATE FUNCTION v_articles_ArticleTypeList_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articles_ArticleTypeList"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'ArticleTypeList') AS "data"
        WHERE NEW."data" -> 'ArticleTypeList' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articles_ArticleTypeList
    BEFORE INSERT
    ON articles
    FOR EACH ROW
    EXECUTE PROCEDURE v_articles_ArticleTypeList_fn();

ALTER TABLE articles
    ENABLE ALWAYS TRIGGER t_v_articles_ArticleTypeList;



DROP TABLE IF EXISTS "v_articles_ArticleTypes";

CREATE TABLE "v_articles_ArticleTypes" (
"articles_Id" varchar,
"Id" varchar,
"Self" varchar,
"Type" varchar
);

DROP FUNCTION IF EXISTS v_articles_ArticleTypes_fn CASCADE;

CREATE FUNCTION v_articles_ArticleTypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articles_ArticleTypes"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ArticleTypes') AS "data"
        WHERE NEW."data" -> 'ArticleTypes' != 'null')
    SELECT "Id" AS "articles_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Type' As varchar) AS "Type"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articles_ArticleTypes
    BEFORE INSERT
    ON articles
    FOR EACH ROW
    EXECUTE PROCEDURE v_articles_ArticleTypes_fn();

ALTER TABLE articles
    ENABLE ALWAYS TRIGGER t_v_articles_ArticleTypes;



DROP TABLE IF EXISTS "v_articles_ImageGallery";

CREATE TABLE "v_articles_ImageGallery" (
"articles_Id" varchar,
"Width" integer,
"Height" integer,
"ImageUrl" varchar,
"ImageName" varchar,
"ValidFrom" varchar,
"ImageSource" varchar,
"IsInGallery" bool,
"ListPosition" integer,
"ImageDesc-en" varchar,
"ImageTitle-en" varchar,
"ImageDesc-nl" varchar,
"ImageTitle-nl" varchar,
"ImageDesc-de" varchar,
"ImageDesc-it" varchar,
"ImageTitle-de" varchar,
"ImageTitle-it" varchar,
"ImageDesc-pl" varchar,
"ImageTitle-pl" varchar,
"CopyRight" varchar,
"ImageDesc-fr" varchar,
"ImageTitle-fr" varchar,
"License" varchar,
"ImageDesc-cs" varchar,
"ImageTitle-cs" varchar
);

DROP FUNCTION IF EXISTS v_articles_ImageGallery_fn CASCADE;

CREATE FUNCTION v_articles_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articles_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "articles_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'ImageName' As varchar) AS "ImageName",
CAST("data"->>'ValidFrom' As varchar) AS "ValidFrom",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'ImageDesc'->>'en' As varchar) AS "ImageDesc-en",
CAST("data"->'ImageTitle'->>'en' As varchar) AS "ImageTitle-en",
CAST("data"->'ImageDesc'->>'nl' As varchar) AS "ImageDesc-nl",
CAST("data"->'ImageTitle'->>'nl' As varchar) AS "ImageTitle-nl",
CAST("data"->'ImageDesc'->>'de' As varchar) AS "ImageDesc-de",
CAST("data"->'ImageDesc'->>'it' As varchar) AS "ImageDesc-it",
CAST("data"->'ImageTitle'->>'de' As varchar) AS "ImageTitle-de",
CAST("data"->'ImageTitle'->>'it' As varchar) AS "ImageTitle-it",
CAST("data"->'ImageDesc'->>'pl' As varchar) AS "ImageDesc-pl",
CAST("data"->'ImageTitle'->>'pl' As varchar) AS "ImageTitle-pl",
CAST("data"->>'CopyRight' As varchar) AS "CopyRight",
CAST("data"->'ImageDesc'->>'fr' As varchar) AS "ImageDesc-fr",
CAST("data"->'ImageTitle'->>'fr' As varchar) AS "ImageTitle-fr",
CAST("data"->>'License' As varchar) AS "License",
CAST("data"->'ImageDesc'->>'cs' As varchar) AS "ImageDesc-cs",
CAST("data"->'ImageTitle'->>'cs' As varchar) AS "ImageTitle-cs"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articles_ImageGallery
    BEFORE INSERT
    ON articles
    FOR EACH ROW
    EXECUTE PROCEDURE v_articles_ImageGallery_fn();

ALTER TABLE articles
    ENABLE ALWAYS TRIGGER t_v_articles_ImageGallery;



DROP TABLE IF EXISTS "v_articles_SmgTags";

CREATE TABLE  "v_articles_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_articles_SmgTags_fn CASCADE;

CREATE FUNCTION v_articles_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articles_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articles_SmgTags
    BEFORE INSERT
    ON articles
    FOR EACH ROW
    EXECUTE PROCEDURE v_articles_SmgTags_fn();

ALTER TABLE articles
    ENABLE ALWAYS TRIGGER t_v_articles_SmgTags;



DROP TABLE IF EXISTS "v_articles_PublishedOn";

CREATE TABLE  "v_articles_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_articles_PublishedOn_fn CASCADE;

CREATE FUNCTION v_articles_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articles_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articles_PublishedOn
    BEFORE INSERT
    ON articles
    FOR EACH ROW
    EXECUTE PROCEDURE v_articles_PublishedOn_fn();

ALTER TABLE articles
    ENABLE ALWAYS TRIGGER t_v_articles_PublishedOn;



DROP TABLE IF EXISTS "v_articles_ODHTags";

CREATE TABLE "v_articles_ODHTags" (
"articles_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_articles_ODHTags_fn CASCADE;

CREATE FUNCTION v_articles_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articles_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "articles_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articles_ODHTags
    BEFORE INSERT
    ON articles
    FOR EACH ROW
    EXECUTE PROCEDURE v_articles_ODHTags_fn();

ALTER TABLE articles
    ENABLE ALWAYS TRIGGER t_v_articles_ODHTags;



DROP TABLE IF EXISTS "v_articlesopen";

CREATE TABLE "v_articlesopen" (
"Id" varchar,
"Self" varchar,
"Type" varchar,
"Active" bool,
"Source" varchar,
"SubType" varchar,
"Highlight" bool,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"FirstImport" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-de-Title" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-de-SubHeader" varchar,
"Detail-en-Title" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-Language" varchar,
"Detail-en-SubHeader" varchar,
"Detail-it-Title" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-Language" varchar,
"Detail-it-SubHeader" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-Givenname" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-Givenname" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-Givenname" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"AdditionalArticleInfos-de-Language" varchar,
"AdditionalArticleInfos-de-Elements-ranking" varchar,
"AdditionalArticleInfos-de-Elements-emailtitel1" varchar,
"AdditionalArticleInfos-de-Elements-emailadresse1" varchar,
"AdditionalArticleInfos-de-Elements-veranstaltungsdaten" varchar,
"AdditionalArticleInfos-en-Language" varchar,
"AdditionalArticleInfos-en-Elements-ranking" varchar,
"AdditionalArticleInfos-en-Elements-emailtitel1" varchar,
"AdditionalArticleInfos-en-Elements-emailadresse1" varchar,
"AdditionalArticleInfos-en-Elements-veranstaltungsdaten" varchar,
"AdditionalArticleInfos-it-Language" varchar,
"AdditionalArticleInfos-it-Elements-ranking" varchar,
"AdditionalArticleInfos-it-Elements-emailtitel1" varchar,
"AdditionalArticleInfos-it-Elements-emailadresse1" varchar,
"AdditionalArticleInfos-it-Elements-veranstaltungsdaten" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-it-CompanyName" varchar,
"Detail-en-IntroText" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-Language" varchar,
"Detail-cs-SubHeader" varchar,
"Detail-de-GetThereText" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-GetThereText" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-Language" varchar,
"Detail-nl-SubHeader" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-Language" varchar,
"Detail-pl-SubHeader" varchar,
"ContactInfos-cs-Url" varchar,
"ContactInfos-cs-City" varchar,
"ContactInfos-cs-Email" varchar,
"ContactInfos-cs-Address" varchar,
"ContactInfos-cs-ZipCode" varchar,
"ContactInfos-cs-Language" varchar,
"ContactInfos-cs-Givenname" varchar,
"ContactInfos-cs-CountryCode" varchar,
"ContactInfos-cs-CountryName" varchar,
"ContactInfos-cs-Phonenumber" varchar,
"ContactInfos-nl-Url" varchar,
"ContactInfos-nl-City" varchar,
"ContactInfos-nl-Email" varchar,
"ContactInfos-nl-Address" varchar,
"ContactInfos-nl-ZipCode" varchar,
"ContactInfos-nl-Language" varchar,
"ContactInfos-nl-Givenname" varchar,
"ContactInfos-nl-CountryCode" varchar,
"ContactInfos-nl-CountryName" varchar,
"ContactInfos-nl-Phonenumber" varchar,
"ContactInfos-pl-Url" varchar,
"ContactInfos-pl-City" varchar,
"ContactInfos-pl-Email" varchar,
"ContactInfos-pl-Address" varchar,
"ContactInfos-pl-ZipCode" varchar,
"ContactInfos-pl-Language" varchar,
"ContactInfos-pl-Givenname" varchar,
"ContactInfos-pl-CountryCode" varchar,
"ContactInfos-pl-CountryName" varchar,
"ContactInfos-pl-Phonenumber" varchar,
"AdditionalArticleInfos-cs-Language" varchar,
"AdditionalArticleInfos-cs-Elements-ranking" varchar,
"AdditionalArticleInfos-cs-Elements-emailtitel1" varchar,
"AdditionalArticleInfos-cs-Elements-emailadresse1" varchar,
"AdditionalArticleInfos-cs-Elements-veranstaltungsdaten" varchar,
"AdditionalArticleInfos-nl-Language" varchar,
"AdditionalArticleInfos-nl-Elements-ranking" varchar,
"AdditionalArticleInfos-nl-Elements-emailtitel1" varchar,
"AdditionalArticleInfos-nl-Elements-emailadresse1" varchar,
"AdditionalArticleInfos-nl-Elements-veranstaltungsdaten" varchar,
"AdditionalArticleInfos-pl-Language" varchar,
"AdditionalArticleInfos-pl-Elements-ranking" varchar,
"AdditionalArticleInfos-pl-Elements-emailtitel1" varchar,
"AdditionalArticleInfos-pl-Elements-emailadresse1" varchar,
"AdditionalArticleInfos-pl-Elements-veranstaltungsdaten" varchar,
"Detail-nl-GetThereText" varchar,
"ContactInfos-cs-CompanyName" varchar,
"ContactInfos-nl-CompanyName" varchar,
"ContactInfos-pl-CompanyName" varchar,
"Detail-en-GetThereText" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-de-AdditionalText" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-MetaTitle" varchar,
"Detail-it-AdditionalText" varchar,
"AdditionalArticleInfos-de-Elements-zeit" varchar,
"AdditionalArticleInfos-de-Elements-author" varchar,
"AdditionalArticleInfos-de-Elements-zutat1" varchar,
"AdditionalArticleInfos-de-Elements-personen" varchar,
"AdditionalArticleInfos-de-Elements-tipptext" varchar,
"AdditionalArticleInfos-de-Elements-kategorie" varchar,
"AdditionalArticleInfos-de-Elements-zubereitungstext" varchar,
"AdditionalArticleInfos-it-Elements-zeit" varchar,
"AdditionalArticleInfos-it-Elements-author" varchar,
"AdditionalArticleInfos-it-Elements-zutat1" varchar,
"AdditionalArticleInfos-it-Elements-personen" varchar,
"AdditionalArticleInfos-it-Elements-tipptext" varchar,
"AdditionalArticleInfos-it-Elements-kategorie" varchar,
"AdditionalArticleInfos-it-Elements-zubereitungstext" varchar,
"Detail-cs-GetThereText" varchar,
"Detail-pl-GetThereText" varchar,
"Detail-en-MetaTitle" varchar,
"AdditionalArticleInfos-en-Elements-zeit" varchar,
"AdditionalArticleInfos-en-Elements-zutat1" varchar,
"AdditionalArticleInfos-en-Elements-personen" varchar,
"AdditionalArticleInfos-en-Elements-zubereitungstext" varchar,
"Detail-cs-IntroText" varchar,
"Detail-nl-IntroText" varchar,
"Detail-pl-IntroText" varchar,
"Detail-en-AdditionalText" varchar,
"AdditionalArticleInfos-en-Elements-tipptext" varchar,
"ArticleLinkInfo-de-Language" varchar,
"ArticleLinkInfo-de-Elements-undefined" varchar,
"Detail-it-Header" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-BaseText" varchar,
"Detail-fr-MetaDesc" varchar,
"Detail-fr-IntroText" varchar,
"Detail-fr-SubHeader" varchar,
"AdditionalArticleInfos-fr-Language" varchar,
"AdditionalArticleInfos-fr-Elements-zeit" varchar,
"AdditionalArticleInfos-fr-Elements-zutat1" varchar,
"AdditionalArticleInfos-fr-Elements-personen" varchar,
"AdditionalArticleInfos-fr-Elements-tipptext" varchar,
"AdditionalArticleInfos-fr-Elements-zubereitungstext" varchar,
"Detail-fr-MetaTitle" varchar,
"Detail-fr-AdditionalText" varchar,
"A-d-Elements-Weitere Rezepte mit Südtiroler Speck g.g.A." varchar,
"ArticleLinkInfo-en-Language" varchar,
"A-e-Elements-More recipes with Speck Alto Adige P.G.I." varchar,
"ArticleLinkInfo-it-Language" varchar,
"A-i-E-Ulteriori ricette con lo speck dell’Alto Adige I.G.P." varchar,
"Detail-de-Header" varchar,
"ArticleLinkInfo-en-Elements-undefined" varchar,
"Detail-fr-Header" varchar,
"Detail-en-Header" varchar
);

ALTER TABLE "v_articlesopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_articlesopen_fn CASCADE;

CREATE FUNCTION v_articlesopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_articlesopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'SubType' As varchar) AS "SubType",
CAST(NEW."data"->>'Highlight' As bool) AS "Highlight",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'Givenname' As varchar) AS "ContactInfos-de-Givenname",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Givenname' As varchar) AS "ContactInfos-en-Givenname",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'Givenname' As varchar) AS "ContactInfos-it-Givenname",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->>'Language' As varchar) AS "AdditionalArticleInfos-de-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'ranking' As varchar) AS "AdditionalArticleInfos-de-Elements-ranking",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'emailtitel1' As varchar) AS "AdditionalArticleInfos-de-Elements-emailtitel1",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'emailadresse1' As varchar) AS "AdditionalArticleInfos-de-Elements-emailadresse1",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'veranstaltungsdaten' As varchar) AS "AdditionalArticleInfos-de-Elements-veranstaltungsdaten",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->>'Language' As varchar) AS "AdditionalArticleInfos-en-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'ranking' As varchar) AS "AdditionalArticleInfos-en-Elements-ranking",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'emailtitel1' As varchar) AS "AdditionalArticleInfos-en-Elements-emailtitel1",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'emailadresse1' As varchar) AS "AdditionalArticleInfos-en-Elements-emailadresse1",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'veranstaltungsdaten' As varchar) AS "AdditionalArticleInfos-en-Elements-veranstaltungsdaten",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->>'Language' As varchar) AS "AdditionalArticleInfos-it-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'ranking' As varchar) AS "AdditionalArticleInfos-it-Elements-ranking",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'emailtitel1' As varchar) AS "AdditionalArticleInfos-it-Elements-emailtitel1",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'emailadresse1' As varchar) AS "AdditionalArticleInfos-it-Elements-emailadresse1",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'veranstaltungsdaten' As varchar) AS "AdditionalArticleInfos-it-Elements-veranstaltungsdaten",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'cs'->>'SubHeader' As varchar) AS "Detail-cs-SubHeader",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'nl'->>'SubHeader' As varchar) AS "Detail-nl-SubHeader",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'SubHeader' As varchar) AS "Detail-pl-SubHeader",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Url' As varchar) AS "ContactInfos-cs-Url",
CAST(NEW."data"->'ContactInfos'->'cs'->>'City' As varchar) AS "ContactInfos-cs-City",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Email' As varchar) AS "ContactInfos-cs-Email",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Address' As varchar) AS "ContactInfos-cs-Address",
CAST(NEW."data"->'ContactInfos'->'cs'->>'ZipCode' As varchar) AS "ContactInfos-cs-ZipCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Language' As varchar) AS "ContactInfos-cs-Language",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Givenname' As varchar) AS "ContactInfos-cs-Givenname",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryCode' As varchar) AS "ContactInfos-cs-CountryCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryName' As varchar) AS "ContactInfos-cs-CountryName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Phonenumber' As varchar) AS "ContactInfos-cs-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Url' As varchar) AS "ContactInfos-nl-Url",
CAST(NEW."data"->'ContactInfos'->'nl'->>'City' As varchar) AS "ContactInfos-nl-City",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Email' As varchar) AS "ContactInfos-nl-Email",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Address' As varchar) AS "ContactInfos-nl-Address",
CAST(NEW."data"->'ContactInfos'->'nl'->>'ZipCode' As varchar) AS "ContactInfos-nl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Language' As varchar) AS "ContactInfos-nl-Language",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Givenname' As varchar) AS "ContactInfos-nl-Givenname",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryCode' As varchar) AS "ContactInfos-nl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryName' As varchar) AS "ContactInfos-nl-CountryName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Phonenumber' As varchar) AS "ContactInfos-nl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Url' As varchar) AS "ContactInfos-pl-Url",
CAST(NEW."data"->'ContactInfos'->'pl'->>'City' As varchar) AS "ContactInfos-pl-City",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Email' As varchar) AS "ContactInfos-pl-Email",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Address' As varchar) AS "ContactInfos-pl-Address",
CAST(NEW."data"->'ContactInfos'->'pl'->>'ZipCode' As varchar) AS "ContactInfos-pl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Language' As varchar) AS "ContactInfos-pl-Language",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Givenname' As varchar) AS "ContactInfos-pl-Givenname",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryCode' As varchar) AS "ContactInfos-pl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryName' As varchar) AS "ContactInfos-pl-CountryName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Phonenumber' As varchar) AS "ContactInfos-pl-Phonenumber",
CAST(NEW."data"->'AdditionalArticleInfos'->'cs'->>'Language' As varchar) AS "AdditionalArticleInfos-cs-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'cs'->'Elements'->>'ranking' As varchar) AS "AdditionalArticleInfos-cs-Elements-ranking",
CAST(NEW."data"->'AdditionalArticleInfos'->'cs'->'Elements'->>'emailtitel1' As varchar) AS "AdditionalArticleInfos-cs-Elements-emailtitel1",
CAST(NEW."data"->'AdditionalArticleInfos'->'cs'->'Elements'->>'emailadresse1' As varchar) AS "AdditionalArticleInfos-cs-Elements-emailadresse1",
CAST(NEW."data"->'AdditionalArticleInfos'->'cs'->'Elements'->>'veranstaltungsdaten' As varchar) AS "AdditionalArticleInfos-cs-Elements-veranstaltungsdaten",
CAST(NEW."data"->'AdditionalArticleInfos'->'nl'->>'Language' As varchar) AS "AdditionalArticleInfos-nl-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'nl'->'Elements'->>'ranking' As varchar) AS "AdditionalArticleInfos-nl-Elements-ranking",
CAST(NEW."data"->'AdditionalArticleInfos'->'nl'->'Elements'->>'emailtitel1' As varchar) AS "AdditionalArticleInfos-nl-Elements-emailtitel1",
CAST(NEW."data"->'AdditionalArticleInfos'->'nl'->'Elements'->>'emailadresse1' As varchar) AS "AdditionalArticleInfos-nl-Elements-emailadresse1",
CAST(NEW."data"->'AdditionalArticleInfos'->'nl'->'Elements'->>'veranstaltungsdaten' As varchar) AS "AdditionalArticleInfos-nl-Elements-veranstaltungsdaten",
CAST(NEW."data"->'AdditionalArticleInfos'->'pl'->>'Language' As varchar) AS "AdditionalArticleInfos-pl-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'pl'->'Elements'->>'ranking' As varchar) AS "AdditionalArticleInfos-pl-Elements-ranking",
CAST(NEW."data"->'AdditionalArticleInfos'->'pl'->'Elements'->>'emailtitel1' As varchar) AS "AdditionalArticleInfos-pl-Elements-emailtitel1",
CAST(NEW."data"->'AdditionalArticleInfos'->'pl'->'Elements'->>'emailadresse1' As varchar) AS "AdditionalArticleInfos-pl-Elements-emailadresse1",
CAST(NEW."data"->'AdditionalArticleInfos'->'pl'->'Elements'->>'veranstaltungsdaten' As varchar) AS "AdditionalArticleInfos-pl-Elements-veranstaltungsdaten",
CAST(NEW."data"->'Detail'->'nl'->>'GetThereText' As varchar) AS "Detail-nl-GetThereText",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CompanyName' As varchar) AS "ContactInfos-cs-CompanyName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CompanyName' As varchar) AS "ContactInfos-nl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CompanyName' As varchar) AS "ContactInfos-pl-CompanyName",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'de'->>'AdditionalText' As varchar) AS "Detail-de-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'AdditionalText' As varchar) AS "Detail-it-AdditionalText",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'zeit' As varchar) AS "AdditionalArticleInfos-de-Elements-zeit",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'author' As varchar) AS "AdditionalArticleInfos-de-Elements-author",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'zutat1' As varchar) AS "AdditionalArticleInfos-de-Elements-zutat1",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'personen' As varchar) AS "AdditionalArticleInfos-de-Elements-personen",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'tipptext' As varchar) AS "AdditionalArticleInfos-de-Elements-tipptext",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'kategorie' As varchar) AS "AdditionalArticleInfos-de-Elements-kategorie",
CAST(NEW."data"->'AdditionalArticleInfos'->'de'->'Elements'->>'zubereitungstext' As varchar) AS "AdditionalArticleInfos-de-Elements-zubereitungstext",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'zeit' As varchar) AS "AdditionalArticleInfos-it-Elements-zeit",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'author' As varchar) AS "AdditionalArticleInfos-it-Elements-author",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'zutat1' As varchar) AS "AdditionalArticleInfos-it-Elements-zutat1",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'personen' As varchar) AS "AdditionalArticleInfos-it-Elements-personen",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'tipptext' As varchar) AS "AdditionalArticleInfos-it-Elements-tipptext",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'kategorie' As varchar) AS "AdditionalArticleInfos-it-Elements-kategorie",
CAST(NEW."data"->'AdditionalArticleInfos'->'it'->'Elements'->>'zubereitungstext' As varchar) AS "AdditionalArticleInfos-it-Elements-zubereitungstext",
CAST(NEW."data"->'Detail'->'cs'->>'GetThereText' As varchar) AS "Detail-cs-GetThereText",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'zeit' As varchar) AS "AdditionalArticleInfos-en-Elements-zeit",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'zutat1' As varchar) AS "AdditionalArticleInfos-en-Elements-zutat1",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'personen' As varchar) AS "AdditionalArticleInfos-en-Elements-personen",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'zubereitungstext' As varchar) AS "AdditionalArticleInfos-en-Elements-zubereitungstext",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'AdditionalText' As varchar) AS "Detail-en-AdditionalText",
CAST(NEW."data"->'AdditionalArticleInfos'->'en'->'Elements'->>'tipptext' As varchar) AS "AdditionalArticleInfos-en-Elements-tipptext",
CAST(NEW."data"->'ArticleLinkInfo'->'de'->>'Language' As varchar) AS "ArticleLinkInfo-de-Language",
CAST(NEW."data"->'ArticleLinkInfo'->'de'->'Elements'->>'undefined' As varchar) AS "ArticleLinkInfo-de-Elements-undefined",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'BaseText' As varchar) AS "Detail-fr-BaseText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaDesc' As varchar) AS "Detail-fr-MetaDesc",
CAST(NEW."data"->'Detail'->'fr'->>'IntroText' As varchar) AS "Detail-fr-IntroText",
CAST(NEW."data"->'Detail'->'fr'->>'SubHeader' As varchar) AS "Detail-fr-SubHeader",
CAST(NEW."data"->'AdditionalArticleInfos'->'fr'->>'Language' As varchar) AS "AdditionalArticleInfos-fr-Language",
CAST(NEW."data"->'AdditionalArticleInfos'->'fr'->'Elements'->>'zeit' As varchar) AS "AdditionalArticleInfos-fr-Elements-zeit",
CAST(NEW."data"->'AdditionalArticleInfos'->'fr'->'Elements'->>'zutat1' As varchar) AS "AdditionalArticleInfos-fr-Elements-zutat1",
CAST(NEW."data"->'AdditionalArticleInfos'->'fr'->'Elements'->>'personen' As varchar) AS "AdditionalArticleInfos-fr-Elements-personen",
CAST(NEW."data"->'AdditionalArticleInfos'->'fr'->'Elements'->>'tipptext' As varchar) AS "AdditionalArticleInfos-fr-Elements-tipptext",
CAST(NEW."data"->'AdditionalArticleInfos'->'fr'->'Elements'->>'zubereitungstext' As varchar) AS "AdditionalArticleInfos-fr-Elements-zubereitungstext",
CAST(NEW."data"->'Detail'->'fr'->>'MetaTitle' As varchar) AS "Detail-fr-MetaTitle",
CAST(NEW."data"->'Detail'->'fr'->>'AdditionalText' As varchar) AS "Detail-fr-AdditionalText",
CAST(NEW."data"->'ArticleLinkInfo'->'de'->'Elements'->>'Weitere Rezepte mit Südtiroler Speck g.g.A.' As varchar) AS "A-d-Elements-Weitere Rezepte mit Südtiroler Speck g.g.A.",
CAST(NEW."data"->'ArticleLinkInfo'->'en'->>'Language' As varchar) AS "ArticleLinkInfo-en-Language",
CAST(NEW."data"->'ArticleLinkInfo'->'en'->'Elements'->>'More recipes with Speck Alto Adige P.G.I.' As varchar) AS "A-e-Elements-More recipes with Speck Alto Adige P.G.I.",
CAST(NEW."data"->'ArticleLinkInfo'->'it'->>'Language' As varchar) AS "ArticleLinkInfo-it-Language",
CAST(NEW."data"->'ArticleLinkInfo'->'it'->'Elements'->>'Ulteriori ricette con lo speck dell’Alto Adige I.G.P.' As varchar) AS "A-i-E-Ulteriori ricette con lo speck dell’Alto Adige I.G.P.",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'ArticleLinkInfo'->'en'->'Elements'->>'undefined' As varchar) AS "ArticleLinkInfo-en-Elements-undefined",
CAST(NEW."data"->'Detail'->'fr'->>'Header' As varchar) AS "Detail-fr-Header",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articlesopen
    BEFORE INSERT
    ON articlesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_articlesopen_fn();

ALTER TABLE articlesopen
    ENABLE ALWAYS TRIGGER t_v_articlesopen;



DROP TABLE IF EXISTS "v_articlesopen_SmgTags";

CREATE TABLE  "v_articlesopen_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_articlesopen_SmgTags_fn CASCADE;

CREATE FUNCTION v_articlesopen_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articlesopen_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articlesopen_SmgTags
    BEFORE INSERT
    ON articlesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_articlesopen_SmgTags_fn();

ALTER TABLE articlesopen
    ENABLE ALWAYS TRIGGER t_v_articlesopen_SmgTags;



DROP TABLE IF EXISTS "v_articlesopen_HasLanguage";

CREATE TABLE  "v_articlesopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_articlesopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_articlesopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articlesopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articlesopen_HasLanguage
    BEFORE INSERT
    ON articlesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_articlesopen_HasLanguage_fn();

ALTER TABLE articlesopen
    ENABLE ALWAYS TRIGGER t_v_articlesopen_HasLanguage;



DROP TABLE IF EXISTS "v_articlesopen_PublishedOn";

CREATE TABLE  "v_articlesopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_articlesopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_articlesopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articlesopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articlesopen_PublishedOn
    BEFORE INSERT
    ON articlesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_articlesopen_PublishedOn_fn();

ALTER TABLE articlesopen
    ENABLE ALWAYS TRIGGER t_v_articlesopen_PublishedOn;



DROP TABLE IF EXISTS "v_articlesopen_ArticleTypeList";

CREATE TABLE  "v_articlesopen_ArticleTypeList" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_articlesopen_ArticleTypeList_fn CASCADE;

CREATE FUNCTION v_articlesopen_ArticleTypeList_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articlesopen_ArticleTypeList"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'ArticleTypeList') AS "data"
        WHERE NEW."data" -> 'ArticleTypeList' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articlesopen_ArticleTypeList
    BEFORE INSERT
    ON articlesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_articlesopen_ArticleTypeList_fn();

ALTER TABLE articlesopen
    ENABLE ALWAYS TRIGGER t_v_articlesopen_ArticleTypeList;



DROP TABLE IF EXISTS "v_articlesopen_ODHTags";

CREATE TABLE "v_articlesopen_ODHTags" (
"articlesopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_articlesopen_ODHTags_fn CASCADE;

CREATE FUNCTION v_articlesopen_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articlesopen_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "articlesopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articlesopen_ODHTags
    BEFORE INSERT
    ON articlesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_articlesopen_ODHTags_fn();

ALTER TABLE articlesopen
    ENABLE ALWAYS TRIGGER t_v_articlesopen_ODHTags;



DROP TABLE IF EXISTS "v_articlesopen_ArticleTypes";

CREATE TABLE "v_articlesopen_ArticleTypes" (
"articlesopen_Id" varchar,
"Id" varchar,
"Self" varchar,
"Type" varchar
);

DROP FUNCTION IF EXISTS v_articlesopen_ArticleTypes_fn CASCADE;

CREATE FUNCTION v_articlesopen_ArticleTypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_articlesopen_ArticleTypes"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ArticleTypes') AS "data"
        WHERE NEW."data" -> 'ArticleTypes' != 'null')
    SELECT "Id" AS "articlesopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Type' As varchar) AS "Type"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articlesopen_ArticleTypes
    BEFORE INSERT
    ON articlesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_articlesopen_ArticleTypes_fn();

ALTER TABLE articlesopen
    ENABLE ALWAYS TRIGGER t_v_articlesopen_ArticleTypes;



DROP TABLE IF EXISTS "v_articletypes";

CREATE TABLE "v_articletypes" (
"Id" varchar,
"Key" varchar,
"Type" varchar,
"Parent" varchar,
"Bitmask" integer
);

ALTER TABLE "v_articletypes" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_articletypes_fn CASCADE;

CREATE FUNCTION v_articletypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_articletypes
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Key' As varchar) AS "Key",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Parent' As varchar) AS "Parent",
CAST(NEW."data"->>'Bitmask' As integer) AS "Bitmask";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_articletypes
    BEFORE INSERT
    ON articletypes
    FOR EACH ROW
    EXECUTE PROCEDURE v_articletypes_fn();

ALTER TABLE articletypes
    ENABLE ALWAYS TRIGGER t_v_articletypes;



DROP TABLE IF EXISTS "v_districts";

CREATE TABLE "v_districts" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"CustomId" varchar,
"IsComune" bool,
"Latitude" float,
"RegionId" varchar,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"MunicipalityId" varchar,
"TourismvereinId" varchar,
"VisibleInSearch" bool,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-Language" varchar,
"Detail-de-Title" varchar,
"Detail-de-Language" varchar,
"Detail-en-Title" varchar,
"Detail-en-Language" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Language" varchar,
"Detail-it-Title" varchar,
"Detail-it-Language" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-Language" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-Language" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Language" varchar,
"Region-Id" varchar,
"Region-Self" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"Municipality-Id" varchar,
"Municipality-Self" varchar,
"Tourismassociation-Id" varchar,
"Tourismassociation-Self" varchar,
"SiagId" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-IntroText" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-IntroText" varchar
);

ALTER TABLE "v_districts" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_districts_fn CASCADE;

CREATE FUNCTION v_districts_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_districts
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'CustomId' As varchar) AS "CustomId",
CAST(NEW."data"->>'IsComune' As bool) AS "IsComune",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'RegionId' As varchar) AS "RegionId",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'MunicipalityId' As varchar) AS "MunicipalityId",
CAST(NEW."data"->>'TourismvereinId' As varchar) AS "TourismvereinId",
CAST(NEW."data"->>'VisibleInSearch' As bool) AS "VisibleInSearch",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Language' As varchar) AS "Detail-fr-Language",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Language' As varchar) AS "Detail-ru-Language",
CAST(NEW."data"->'Region'->>'Id' As varchar) AS "Region-Id",
CAST(NEW."data"->'Region'->>'Self' As varchar) AS "Region-Self",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'Municipality'->>'Id' As varchar) AS "Municipality-Id",
CAST(NEW."data"->'Municipality'->>'Self' As varchar) AS "Municipality-Self",
CAST(NEW."data"->'Tourismassociation'->>'Id' As varchar) AS "Tourismassociation-Id",
CAST(NEW."data"->'Tourismassociation'->>'Self' As varchar) AS "Tourismassociation-Self",
CAST(NEW."data"->>'SiagId' As varchar) AS "SiagId",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_districts
    BEFORE INSERT
    ON districts
    FOR EACH ROW
    EXECUTE PROCEDURE v_districts_fn();

ALTER TABLE districts
    ENABLE ALWAYS TRIGGER t_v_districts;



DROP TABLE IF EXISTS "v_districts_HasLanguage";

CREATE TABLE  "v_districts_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_districts_HasLanguage_fn CASCADE;

CREATE FUNCTION v_districts_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_districts_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_districts_HasLanguage
    BEFORE INSERT
    ON districts
    FOR EACH ROW
    EXECUTE PROCEDURE v_districts_HasLanguage_fn();

ALTER TABLE districts
    ENABLE ALWAYS TRIGGER t_v_districts_HasLanguage;



DROP TABLE IF EXISTS "v_districts_PublishedOn";

CREATE TABLE  "v_districts_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_districts_PublishedOn_fn CASCADE;

CREATE FUNCTION v_districts_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_districts_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_districts_PublishedOn
    BEFORE INSERT
    ON districts
    FOR EACH ROW
    EXECUTE PROCEDURE v_districts_PublishedOn_fn();

ALTER TABLE districts
    ENABLE ALWAYS TRIGGER t_v_districts_PublishedOn;



DROP TABLE IF EXISTS "v_districtsopen";

CREATE TABLE "v_districtsopen" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"CustomId" varchar,
"IsComune" bool,
"Latitude" float,
"RegionId" varchar,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"MunicipalityId" varchar,
"TourismvereinId" varchar,
"VisibleInSearch" bool,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-Language" varchar,
"Detail-de-Title" varchar,
"Detail-de-Language" varchar,
"Detail-en-Title" varchar,
"Detail-en-Language" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Language" varchar,
"Detail-it-Title" varchar,
"Detail-it-Language" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-Language" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-Language" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Language" varchar,
"Region-Id" varchar,
"Region-Self" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"Municipality-Id" varchar,
"Municipality-Self" varchar,
"Tourismassociation-Id" varchar,
"Tourismassociation-Self" varchar,
"SiagId" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-IntroText" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-IntroText" varchar
);

ALTER TABLE "v_districtsopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_districtsopen_fn CASCADE;

CREATE FUNCTION v_districtsopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_districtsopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'CustomId' As varchar) AS "CustomId",
CAST(NEW."data"->>'IsComune' As bool) AS "IsComune",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'RegionId' As varchar) AS "RegionId",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'MunicipalityId' As varchar) AS "MunicipalityId",
CAST(NEW."data"->>'TourismvereinId' As varchar) AS "TourismvereinId",
CAST(NEW."data"->>'VisibleInSearch' As bool) AS "VisibleInSearch",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Language' As varchar) AS "Detail-fr-Language",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Language' As varchar) AS "Detail-ru-Language",
CAST(NEW."data"->'Region'->>'Id' As varchar) AS "Region-Id",
CAST(NEW."data"->'Region'->>'Self' As varchar) AS "Region-Self",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'Municipality'->>'Id' As varchar) AS "Municipality-Id",
CAST(NEW."data"->'Municipality'->>'Self' As varchar) AS "Municipality-Self",
CAST(NEW."data"->'Tourismassociation'->>'Id' As varchar) AS "Tourismassociation-Id",
CAST(NEW."data"->'Tourismassociation'->>'Self' As varchar) AS "Tourismassociation-Self",
CAST(NEW."data"->>'SiagId' As varchar) AS "SiagId",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_districtsopen
    BEFORE INSERT
    ON districtsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_districtsopen_fn();

ALTER TABLE districtsopen
    ENABLE ALWAYS TRIGGER t_v_districtsopen;



DROP TABLE IF EXISTS "v_districtsopen_HasLanguage";

CREATE TABLE  "v_districtsopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_districtsopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_districtsopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_districtsopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_districtsopen_HasLanguage
    BEFORE INSERT
    ON districtsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_districtsopen_HasLanguage_fn();

ALTER TABLE districtsopen
    ENABLE ALWAYS TRIGGER t_v_districtsopen_HasLanguage;



DROP TABLE IF EXISTS "v_districtsopen_PublishedOn";

CREATE TABLE  "v_districtsopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_districtsopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_districtsopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_districtsopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_districtsopen_PublishedOn
    BEFORE INSERT
    ON districtsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_districtsopen_PublishedOn_fn();

ALTER TABLE districtsopen
    ENABLE ALWAYS TRIGGER t_v_districtsopen_PublishedOn;



DROP TABLE IF EXISTS "v_eventeuracnoi";

CREATE TABLE "v_eventeuracnoi" (
"Id" varchar,
"Source" varchar,
"EndDate" varchar,
"EventId" integer,
"Display1" varchar,
"Display2" varchar,
"Display3" varchar,
"Display4" varchar,
"Display5" varchar,
"Display6" varchar,
"Display7" varchar,
"Display8" varchar,
"Display9" varchar,
"ChangedOn" varchar,
"CompanyId" varchar,
"StartDate" varchar,
"CompanyFax" varchar,
"CompanyUrl" varchar,
"ContactFax" varchar,
"EndDateUTC" float,
"WebAddress" varchar,
"AnchorVenue" varchar,
"CompanyCity" varchar,
"CompanyMail" varchar,
"CompanyName" varchar,
"ContactCell" varchar,
"ContactCity" varchar,
"ContactCode" varchar,
"CompanyPhone" varchar,
"ContactEmail" varchar,
"ContactPhone" varchar,
"StartDateUTC" float,
"EventLocation" varchar,
"CompanyCountry" varchar,
"ContactCountry" varchar,
"ContactLastName" varchar,
"AnchorVenueShort" varchar,
"ContactFirstName" varchar,
"EventDescription" varchar,
"CompanyPostalCode" varchar,
"ContactPostalCode" varchar,
"EventDescriptionDE" varchar,
"EventDescriptionEN" varchar,
"EventDescriptionIT" varchar,
"CompanyAddressLine1" varchar,
"CompanyAddressLine2" varchar,
"CompanyAddressLine3" varchar,
"ContactAddressLine1" varchar,
"ContactAddressLine2" varchar,
"ContactAddressLine3" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"SoldOut" bool,
"VideoUrl" varchar,
"EventTextDE" varchar,
"EventTextEN" varchar,
"EventTextIT" varchar,
"ExternalOrganizer" bool,
"ActiveWeb" bool
);

ALTER TABLE "v_eventeuracnoi" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_eventeuracnoi_fn CASCADE;

CREATE FUNCTION v_eventeuracnoi_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_eventeuracnoi
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'EndDate' As varchar) AS "EndDate",
CAST(NEW."data"->>'EventId' As integer) AS "EventId",
CAST(NEW."data"->>'Display1' As varchar) AS "Display1",
CAST(NEW."data"->>'Display2' As varchar) AS "Display2",
CAST(NEW."data"->>'Display3' As varchar) AS "Display3",
CAST(NEW."data"->>'Display4' As varchar) AS "Display4",
CAST(NEW."data"->>'Display5' As varchar) AS "Display5",
CAST(NEW."data"->>'Display6' As varchar) AS "Display6",
CAST(NEW."data"->>'Display7' As varchar) AS "Display7",
CAST(NEW."data"->>'Display8' As varchar) AS "Display8",
CAST(NEW."data"->>'Display9' As varchar) AS "Display9",
CAST(NEW."data"->>'ChangedOn' As varchar) AS "ChangedOn",
CAST(NEW."data"->>'CompanyId' As varchar) AS "CompanyId",
CAST(NEW."data"->>'StartDate' As varchar) AS "StartDate",
CAST(NEW."data"->>'CompanyFax' As varchar) AS "CompanyFax",
CAST(NEW."data"->>'CompanyUrl' As varchar) AS "CompanyUrl",
CAST(NEW."data"->>'ContactFax' As varchar) AS "ContactFax",
CAST(NEW."data"->>'EndDateUTC' As float) AS "EndDateUTC",
CAST(NEW."data"->>'WebAddress' As varchar) AS "WebAddress",
CAST(NEW."data"->>'AnchorVenue' As varchar) AS "AnchorVenue",
CAST(NEW."data"->>'CompanyCity' As varchar) AS "CompanyCity",
CAST(NEW."data"->>'CompanyMail' As varchar) AS "CompanyMail",
CAST(NEW."data"->>'CompanyName' As varchar) AS "CompanyName",
CAST(NEW."data"->>'ContactCell' As varchar) AS "ContactCell",
CAST(NEW."data"->>'ContactCity' As varchar) AS "ContactCity",
CAST(NEW."data"->>'ContactCode' As varchar) AS "ContactCode",
CAST(NEW."data"->>'CompanyPhone' As varchar) AS "CompanyPhone",
CAST(NEW."data"->>'ContactEmail' As varchar) AS "ContactEmail",
CAST(NEW."data"->>'ContactPhone' As varchar) AS "ContactPhone",
CAST(NEW."data"->>'StartDateUTC' As float) AS "StartDateUTC",
CAST(NEW."data"->>'EventLocation' As varchar) AS "EventLocation",
CAST(NEW."data"->>'CompanyCountry' As varchar) AS "CompanyCountry",
CAST(NEW."data"->>'ContactCountry' As varchar) AS "ContactCountry",
CAST(NEW."data"->>'ContactLastName' As varchar) AS "ContactLastName",
CAST(NEW."data"->>'AnchorVenueShort' As varchar) AS "AnchorVenueShort",
CAST(NEW."data"->>'ContactFirstName' As varchar) AS "ContactFirstName",
CAST(NEW."data"->>'EventDescription' As varchar) AS "EventDescription",
CAST(NEW."data"->>'CompanyPostalCode' As varchar) AS "CompanyPostalCode",
CAST(NEW."data"->>'ContactPostalCode' As varchar) AS "ContactPostalCode",
CAST(NEW."data"->>'EventDescriptionDE' As varchar) AS "EventDescriptionDE",
CAST(NEW."data"->>'EventDescriptionEN' As varchar) AS "EventDescriptionEN",
CAST(NEW."data"->>'EventDescriptionIT' As varchar) AS "EventDescriptionIT",
CAST(NEW."data"->>'CompanyAddressLine1' As varchar) AS "CompanyAddressLine1",
CAST(NEW."data"->>'CompanyAddressLine2' As varchar) AS "CompanyAddressLine2",
CAST(NEW."data"->>'CompanyAddressLine3' As varchar) AS "CompanyAddressLine3",
CAST(NEW."data"->>'ContactAddressLine1' As varchar) AS "ContactAddressLine1",
CAST(NEW."data"->>'ContactAddressLine2' As varchar) AS "ContactAddressLine2",
CAST(NEW."data"->>'ContactAddressLine3' As varchar) AS "ContactAddressLine3",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->>'SoldOut' As bool) AS "SoldOut",
CAST(NEW."data"->>'VideoUrl' As varchar) AS "VideoUrl",
CAST(NEW."data"->>'EventTextDE' As varchar) AS "EventTextDE",
CAST(NEW."data"->>'EventTextEN' As varchar) AS "EventTextEN",
CAST(NEW."data"->>'EventTextIT' As varchar) AS "EventTextIT",
CAST(NEW."data"->>'ExternalOrganizer' As bool) AS "ExternalOrganizer",
CAST(NEW."data"->>'ActiveWeb' As bool) AS "ActiveWeb";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_eventeuracnoi
    BEFORE INSERT
    ON eventeuracnoi
    FOR EACH ROW
    EXECUTE PROCEDURE v_eventeuracnoi_fn();

ALTER TABLE eventeuracnoi
    ENABLE ALWAYS TRIGGER t_v_eventeuracnoi;



DROP TABLE IF EXISTS "v_eventeuracnoi_RoomBooked";

CREATE TABLE "v_eventeuracnoi_RoomBooked" (
"eventeuracnoi_Id" varchar,
"Space" varchar,
"Comment" varchar,
"EndDate" varchar,
"Subtitle" varchar,
"SpaceDesc" varchar,
"SpaceType" varchar,
"StartDate" varchar,
"EndDateUTC" float,
"SpaceAbbrev" varchar,
"StartDateUTC" float
);

DROP FUNCTION IF EXISTS v_eventeuracnoi_RoomBooked_fn CASCADE;

CREATE FUNCTION v_eventeuracnoi_RoomBooked_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_eventeuracnoi_RoomBooked"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'RoomBooked') AS "data"
        WHERE NEW."data" -> 'RoomBooked' != 'null')
    SELECT "Id" AS "eventeuracnoi_Id", CAST("data"->>'Space' As varchar) AS "Space",
CAST("data"->>'Comment' As varchar) AS "Comment",
CAST("data"->>'EndDate' As varchar) AS "EndDate",
CAST("data"->>'Subtitle' As varchar) AS "Subtitle",
CAST("data"->>'SpaceDesc' As varchar) AS "SpaceDesc",
CAST("data"->>'SpaceType' As varchar) AS "SpaceType",
CAST("data"->>'StartDate' As varchar) AS "StartDate",
CAST("data"->>'EndDateUTC' As float) AS "EndDateUTC",
CAST("data"->>'SpaceAbbrev' As varchar) AS "SpaceAbbrev",
CAST("data"->>'StartDateUTC' As float) AS "StartDateUTC"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_eventeuracnoi_RoomBooked
    BEFORE INSERT
    ON eventeuracnoi
    FOR EACH ROW
    EXECUTE PROCEDURE v_eventeuracnoi_RoomBooked_fn();

ALTER TABLE eventeuracnoi
    ENABLE ALWAYS TRIGGER t_v_eventeuracnoi_RoomBooked;



DROP TABLE IF EXISTS "v_eventeuracnoi_CustomTagging";

CREATE TABLE  "v_eventeuracnoi_CustomTagging" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_eventeuracnoi_CustomTagging_fn CASCADE;

CREATE FUNCTION v_eventeuracnoi_CustomTagging_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_eventeuracnoi_CustomTagging"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'CustomTagging') AS "data"
        WHERE NEW."data" -> 'CustomTagging' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_eventeuracnoi_CustomTagging
    BEFORE INSERT
    ON eventeuracnoi
    FOR EACH ROW
    EXECUTE PROCEDURE v_eventeuracnoi_CustomTagging_fn();

ALTER TABLE eventeuracnoi
    ENABLE ALWAYS TRIGGER t_v_eventeuracnoi_CustomTagging;



DROP TABLE IF EXISTS "v_eventeuracnoi_TechnologyFields";

CREATE TABLE  "v_eventeuracnoi_TechnologyFields" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_eventeuracnoi_TechnologyFields_fn CASCADE;

CREATE FUNCTION v_eventeuracnoi_TechnologyFields_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_eventeuracnoi_TechnologyFields"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'TechnologyFields') AS "data"
        WHERE NEW."data" -> 'TechnologyFields' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_eventeuracnoi_TechnologyFields
    BEFORE INSERT
    ON eventeuracnoi
    FOR EACH ROW
    EXECUTE PROCEDURE v_eventeuracnoi_TechnologyFields_fn();

ALTER TABLE eventeuracnoi
    ENABLE ALWAYS TRIGGER t_v_eventeuracnoi_TechnologyFields;



DROP TABLE IF EXISTS "v_events";

CREATE TABLE "v_events" (
"Id" varchar,
"Ranc" integer,
"Self" varchar,
"Type" varchar,
"Active" bool,
"OrgRID" varchar,
"PayMet" varchar,
"SignOn" varchar,
"Source" varchar,
"Ticket" varchar,
"DateEnd" varchar,
"Gpstype" varchar,
"Latitude" float,
"DateBegin" varchar,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"DistrictId" varchar,
"LastChange" varchar,
"FirstImport" varchar,
"NextBeginDate" varchar,
"EventDateCounter" integer,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-de-Title" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-de-GetThereText" varchar,
"Detail-en-Language" varchar,
"Detail-it-Title" varchar,
"Detail-it-Language" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"LocationInfo-DistrictInfo-Id" varchar,
"LocationInfo-DistrictInfo-Self" varchar,
"LocationInfo-DistrictInfo-Name-cs" varchar,
"LocationInfo-DistrictInfo-Name-de" varchar,
"LocationInfo-DistrictInfo-Name-en" varchar,
"LocationInfo-DistrictInfo-Name-fr" varchar,
"LocationInfo-DistrictInfo-Name-it" varchar,
"LocationInfo-DistrictInfo-Name-nl" varchar,
"LocationInfo-DistrictInfo-Name-pl" varchar,
"LocationInfo-DistrictInfo-Name-ru" varchar,
"LocationInfo-MunicipalityInfo-Id" varchar,
"LocationInfo-MunicipalityInfo-Self" varchar,
"LocationInfo-MunicipalityInfo-Name-cs" varchar,
"LocationInfo-MunicipalityInfo-Name-de" varchar,
"LocationInfo-MunicipalityInfo-Name-en" varchar,
"LocationInfo-MunicipalityInfo-Name-fr" varchar,
"LocationInfo-MunicipalityInfo-Name-it" varchar,
"LocationInfo-MunicipalityInfo-Name-nl" varchar,
"LocationInfo-MunicipalityInfo-Name-pl" varchar,
"LocationInfo-MunicipalityInfo-Name-ru" varchar,
"OrganizerInfos-de-Tax" varchar,
"OrganizerInfos-de-Url" varchar,
"OrganizerInfos-de-Vat" varchar,
"OrganizerInfos-de-City" varchar,
"OrganizerInfos-de-Email" varchar,
"OrganizerInfos-de-Address" varchar,
"OrganizerInfos-de-Surname" varchar,
"OrganizerInfos-de-ZipCode" varchar,
"OrganizerInfos-de-Language" varchar,
"OrganizerInfos-de-Faxnumber" varchar,
"OrganizerInfos-de-Givenname" varchar,
"OrganizerInfos-de-CompanyName" varchar,
"OrganizerInfos-de-Phonenumber" varchar,
"OrganizerInfos-en-Tax" varchar,
"OrganizerInfos-en-Url" varchar,
"OrganizerInfos-en-Vat" varchar,
"OrganizerInfos-en-City" varchar,
"OrganizerInfos-en-Email" varchar,
"OrganizerInfos-en-Address" varchar,
"OrganizerInfos-en-Surname" varchar,
"OrganizerInfos-en-ZipCode" varchar,
"OrganizerInfos-en-Language" varchar,
"OrganizerInfos-en-Faxnumber" varchar,
"OrganizerInfos-en-Givenname" varchar,
"OrganizerInfos-en-CompanyName" varchar,
"OrganizerInfos-en-Phonenumber" varchar,
"OrganizerInfos-it-Tax" varchar,
"OrganizerInfos-it-Url" varchar,
"OrganizerInfos-it-Vat" varchar,
"OrganizerInfos-it-City" varchar,
"OrganizerInfos-it-Email" varchar,
"OrganizerInfos-it-Address" varchar,
"OrganizerInfos-it-Surname" varchar,
"OrganizerInfos-it-ZipCode" varchar,
"OrganizerInfos-it-Language" varchar,
"OrganizerInfos-it-Faxnumber" varchar,
"OrganizerInfos-it-Givenname" varchar,
"OrganizerInfos-it-CompanyName" varchar,
"OrganizerInfos-it-Phonenumber" varchar,
"EventAdditionalInfos-de-Reg" varchar,
"EventAdditionalInfos-de-Mplace" varchar,
"EventAdditionalInfos-de-Language" varchar,
"EventAdditionalInfos-de-Location" varchar,
"EventAdditionalInfos-en-Language" varchar,
"EventAdditionalInfos-it-Reg" varchar,
"EventAdditionalInfos-it-Mplace" varchar,
"EventAdditionalInfos-it-Language" varchar,
"EventAdditionalInfos-it-Location" varchar,
"Detail-it-BaseText" varchar,
"Detail-en-Title" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-GetThereText" varchar,
"Detail-it-GetThereText" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-CompanyName" varchar,
"EventAdditionalInfos-en-Reg" varchar,
"EventAdditionalInfos-en-Mplace" varchar,
"EventAdditionalInfos-en-Location" varchar,
"EventPrice-de-Pstd" varchar,
"EventPrice-de-Type" varchar,
"EventPrice-de-Price" float,
"EventPrice-de-Language" varchar,
"EventPrice-de-ShortDesc" varchar,
"EventPrice-de-Description" varchar,
"EventPrice-en-Pstd" varchar,
"EventPrice-en-Type" varchar,
"EventPrice-en-Price" float,
"EventPrice-en-Language" varchar,
"EventPrice-en-ShortDesc" varchar,
"EventPrice-en-Description" varchar,
"EventPrice-it-Pstd" varchar,
"EventPrice-it-Type" varchar,
"EventPrice-it-Price" float,
"EventPrice-it-Language" varchar,
"EventPrice-it-ShortDesc" varchar,
"EventPrice-it-Description" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-it-MetaTitle" varchar
);

ALTER TABLE "v_events" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_events_fn CASCADE;

CREATE FUNCTION v_events_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_events
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Ranc' As integer) AS "Ranc",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'OrgRID' As varchar) AS "OrgRID",
CAST(NEW."data"->>'PayMet' As varchar) AS "PayMet",
CAST(NEW."data"->>'SignOn' As varchar) AS "SignOn",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Ticket' As varchar) AS "Ticket",
CAST(NEW."data"->>'DateEnd' As varchar) AS "DateEnd",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'DateBegin' As varchar) AS "DateBegin",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'DistrictId' As varchar) AS "DistrictId",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'NextBeginDate' As varchar) AS "NextBeginDate",
CAST(NEW."data"->>'EventDateCounter' As integer) AS "EventDateCounter",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Id' As varchar) AS "LocationInfo-DistrictInfo-Id",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Self' As varchar) AS "LocationInfo-DistrictInfo-Self",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-DistrictInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'de' As varchar) AS "LocationInfo-DistrictInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'en' As varchar) AS "LocationInfo-DistrictInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-DistrictInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'it' As varchar) AS "LocationInfo-DistrictInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-DistrictInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-DistrictInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-DistrictInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Id' As varchar) AS "LocationInfo-MunicipalityInfo-Id",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Self' As varchar) AS "LocationInfo-MunicipalityInfo-Self",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-MunicipalityInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'de' As varchar) AS "LocationInfo-MunicipalityInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'en' As varchar) AS "LocationInfo-MunicipalityInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-MunicipalityInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'it' As varchar) AS "LocationInfo-MunicipalityInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-MunicipalityInfo-Name-ru",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'Tax' As varchar) AS "OrganizerInfos-de-Tax",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'Url' As varchar) AS "OrganizerInfos-de-Url",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'Vat' As varchar) AS "OrganizerInfos-de-Vat",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'City' As varchar) AS "OrganizerInfos-de-City",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'Email' As varchar) AS "OrganizerInfos-de-Email",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'Address' As varchar) AS "OrganizerInfos-de-Address",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'Surname' As varchar) AS "OrganizerInfos-de-Surname",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'ZipCode' As varchar) AS "OrganizerInfos-de-ZipCode",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'Language' As varchar) AS "OrganizerInfos-de-Language",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'Faxnumber' As varchar) AS "OrganizerInfos-de-Faxnumber",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'Givenname' As varchar) AS "OrganizerInfos-de-Givenname",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'CompanyName' As varchar) AS "OrganizerInfos-de-CompanyName",
CAST(NEW."data"->'OrganizerInfos'->'de'->>'Phonenumber' As varchar) AS "OrganizerInfos-de-Phonenumber",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'Tax' As varchar) AS "OrganizerInfos-en-Tax",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'Url' As varchar) AS "OrganizerInfos-en-Url",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'Vat' As varchar) AS "OrganizerInfos-en-Vat",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'City' As varchar) AS "OrganizerInfos-en-City",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'Email' As varchar) AS "OrganizerInfos-en-Email",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'Address' As varchar) AS "OrganizerInfos-en-Address",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'Surname' As varchar) AS "OrganizerInfos-en-Surname",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'ZipCode' As varchar) AS "OrganizerInfos-en-ZipCode",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'Language' As varchar) AS "OrganizerInfos-en-Language",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'Faxnumber' As varchar) AS "OrganizerInfos-en-Faxnumber",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'Givenname' As varchar) AS "OrganizerInfos-en-Givenname",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'CompanyName' As varchar) AS "OrganizerInfos-en-CompanyName",
CAST(NEW."data"->'OrganizerInfos'->'en'->>'Phonenumber' As varchar) AS "OrganizerInfos-en-Phonenumber",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'Tax' As varchar) AS "OrganizerInfos-it-Tax",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'Url' As varchar) AS "OrganizerInfos-it-Url",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'Vat' As varchar) AS "OrganizerInfos-it-Vat",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'City' As varchar) AS "OrganizerInfos-it-City",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'Email' As varchar) AS "OrganizerInfos-it-Email",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'Address' As varchar) AS "OrganizerInfos-it-Address",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'Surname' As varchar) AS "OrganizerInfos-it-Surname",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'ZipCode' As varchar) AS "OrganizerInfos-it-ZipCode",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'Language' As varchar) AS "OrganizerInfos-it-Language",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'Faxnumber' As varchar) AS "OrganizerInfos-it-Faxnumber",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'Givenname' As varchar) AS "OrganizerInfos-it-Givenname",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'CompanyName' As varchar) AS "OrganizerInfos-it-CompanyName",
CAST(NEW."data"->'OrganizerInfos'->'it'->>'Phonenumber' As varchar) AS "OrganizerInfos-it-Phonenumber",
CAST(NEW."data"->'EventAdditionalInfos'->'de'->>'Reg' As varchar) AS "EventAdditionalInfos-de-Reg",
CAST(NEW."data"->'EventAdditionalInfos'->'de'->>'Mplace' As varchar) AS "EventAdditionalInfos-de-Mplace",
CAST(NEW."data"->'EventAdditionalInfos'->'de'->>'Language' As varchar) AS "EventAdditionalInfos-de-Language",
CAST(NEW."data"->'EventAdditionalInfos'->'de'->>'Location' As varchar) AS "EventAdditionalInfos-de-Location",
CAST(NEW."data"->'EventAdditionalInfos'->'en'->>'Language' As varchar) AS "EventAdditionalInfos-en-Language",
CAST(NEW."data"->'EventAdditionalInfos'->'it'->>'Reg' As varchar) AS "EventAdditionalInfos-it-Reg",
CAST(NEW."data"->'EventAdditionalInfos'->'it'->>'Mplace' As varchar) AS "EventAdditionalInfos-it-Mplace",
CAST(NEW."data"->'EventAdditionalInfos'->'it'->>'Language' As varchar) AS "EventAdditionalInfos-it-Language",
CAST(NEW."data"->'EventAdditionalInfos'->'it'->>'Location' As varchar) AS "EventAdditionalInfos-it-Location",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'EventAdditionalInfos'->'en'->>'Reg' As varchar) AS "EventAdditionalInfos-en-Reg",
CAST(NEW."data"->'EventAdditionalInfos'->'en'->>'Mplace' As varchar) AS "EventAdditionalInfos-en-Mplace",
CAST(NEW."data"->'EventAdditionalInfos'->'en'->>'Location' As varchar) AS "EventAdditionalInfos-en-Location",
CAST(NEW."data"->'EventPrice'->'de'->>'Pstd' As varchar) AS "EventPrice-de-Pstd",
CAST(NEW."data"->'EventPrice'->'de'->>'Type' As varchar) AS "EventPrice-de-Type",
CAST(NEW."data"->'EventPrice'->'de'->>'Price' As float) AS "EventPrice-de-Price",
CAST(NEW."data"->'EventPrice'->'de'->>'Language' As varchar) AS "EventPrice-de-Language",
CAST(NEW."data"->'EventPrice'->'de'->>'ShortDesc' As varchar) AS "EventPrice-de-ShortDesc",
CAST(NEW."data"->'EventPrice'->'de'->>'Description' As varchar) AS "EventPrice-de-Description",
CAST(NEW."data"->'EventPrice'->'en'->>'Pstd' As varchar) AS "EventPrice-en-Pstd",
CAST(NEW."data"->'EventPrice'->'en'->>'Type' As varchar) AS "EventPrice-en-Type",
CAST(NEW."data"->'EventPrice'->'en'->>'Price' As float) AS "EventPrice-en-Price",
CAST(NEW."data"->'EventPrice'->'en'->>'Language' As varchar) AS "EventPrice-en-Language",
CAST(NEW."data"->'EventPrice'->'en'->>'ShortDesc' As varchar) AS "EventPrice-en-ShortDesc",
CAST(NEW."data"->'EventPrice'->'en'->>'Description' As varchar) AS "EventPrice-en-Description",
CAST(NEW."data"->'EventPrice'->'it'->>'Pstd' As varchar) AS "EventPrice-it-Pstd",
CAST(NEW."data"->'EventPrice'->'it'->>'Type' As varchar) AS "EventPrice-it-Type",
CAST(NEW."data"->'EventPrice'->'it'->>'Price' As float) AS "EventPrice-it-Price",
CAST(NEW."data"->'EventPrice'->'it'->>'Language' As varchar) AS "EventPrice-it-Language",
CAST(NEW."data"->'EventPrice'->'it'->>'ShortDesc' As varchar) AS "EventPrice-it-ShortDesc",
CAST(NEW."data"->'EventPrice'->'it'->>'Description' As varchar) AS "EventPrice-it-Description",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_events
    BEFORE INSERT
    ON events
    FOR EACH ROW
    EXECUTE PROCEDURE v_events_fn();

ALTER TABLE events
    ENABLE ALWAYS TRIGGER t_v_events;



DROP TABLE IF EXISTS "v_events_DistrictIds";

CREATE TABLE  "v_events_DistrictIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_events_DistrictIds_fn CASCADE;

CREATE FUNCTION v_events_DistrictIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_events_DistrictIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'DistrictIds') AS "data"
        WHERE NEW."data" -> 'DistrictIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_events_DistrictIds
    BEFORE INSERT
    ON events
    FOR EACH ROW
    EXECUTE PROCEDURE v_events_DistrictIds_fn();

ALTER TABLE events
    ENABLE ALWAYS TRIGGER t_v_events_DistrictIds;



DROP TABLE IF EXISTS "v_events_HasLanguage";

CREATE TABLE  "v_events_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_events_HasLanguage_fn CASCADE;

CREATE FUNCTION v_events_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_events_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_events_HasLanguage
    BEFORE INSERT
    ON events
    FOR EACH ROW
    EXECUTE PROCEDURE v_events_HasLanguage_fn();

ALTER TABLE events
    ENABLE ALWAYS TRIGGER t_v_events_HasLanguage;



DROP TABLE IF EXISTS "v_events_Districts";

CREATE TABLE "v_events_Districts" (
"events_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_events_Districts_fn CASCADE;

CREATE FUNCTION v_events_Districts_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_events_Districts"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Districts') AS "data"
        WHERE NEW."data" -> 'Districts' != 'null')
    SELECT "Id" AS "events_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_events_Districts
    BEFORE INSERT
    ON events
    FOR EACH ROW
    EXECUTE PROCEDURE v_events_Districts_fn();

ALTER TABLE events
    ENABLE ALWAYS TRIGGER t_v_events_Districts;



DROP TABLE IF EXISTS "v_events_TopicRIDs";

CREATE TABLE  "v_events_TopicRIDs" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_events_TopicRIDs_fn CASCADE;

CREATE FUNCTION v_events_TopicRIDs_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_events_TopicRIDs"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'TopicRIDs') AS "data"
        WHERE NEW."data" -> 'TopicRIDs' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_events_TopicRIDs
    BEFORE INSERT
    ON events
    FOR EACH ROW
    EXECUTE PROCEDURE v_events_TopicRIDs_fn();

ALTER TABLE events
    ENABLE ALWAYS TRIGGER t_v_events_TopicRIDs;



DROP TABLE IF EXISTS "v_events_EventDatesEnd";

CREATE TABLE  "v_events_EventDatesEnd" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_events_EventDatesEnd_fn CASCADE;

CREATE FUNCTION v_events_EventDatesEnd_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_events_EventDatesEnd"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'EventDatesEnd') AS "data"
        WHERE NEW."data" -> 'EventDatesEnd' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_events_EventDatesEnd
    BEFORE INSERT
    ON events
    FOR EACH ROW
    EXECUTE PROCEDURE v_events_EventDatesEnd_fn();

ALTER TABLE events
    ENABLE ALWAYS TRIGGER t_v_events_EventDatesEnd;



DROP TABLE IF EXISTS "v_events_EventDatesBegin";

CREATE TABLE  "v_events_EventDatesBegin" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_events_EventDatesBegin_fn CASCADE;

CREATE FUNCTION v_events_EventDatesBegin_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_events_EventDatesBegin"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'EventDatesBegin') AS "data"
        WHERE NEW."data" -> 'EventDatesBegin' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_events_EventDatesBegin
    BEFORE INSERT
    ON events
    FOR EACH ROW
    EXECUTE PROCEDURE v_events_EventDatesBegin_fn();

ALTER TABLE events
    ENABLE ALWAYS TRIGGER t_v_events_EventDatesBegin;



DROP TABLE IF EXISTS "v_events_Topics";

CREATE TABLE "v_events_Topics" (
"events_Id" varchar,
"Self" varchar,
"TopicRID" varchar,
"TopicInfo" varchar
);

DROP FUNCTION IF EXISTS v_events_Topics_fn CASCADE;

CREATE FUNCTION v_events_Topics_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_events_Topics"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Topics') AS "data"
        WHERE NEW."data" -> 'Topics' != 'null')
    SELECT "Id" AS "events_Id", CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'TopicRID' As varchar) AS "TopicRID",
CAST("data"->>'TopicInfo' As varchar) AS "TopicInfo"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_events_Topics
    BEFORE INSERT
    ON events
    FOR EACH ROW
    EXECUTE PROCEDURE v_events_Topics_fn();

ALTER TABLE events
    ENABLE ALWAYS TRIGGER t_v_events_Topics;



DROP TABLE IF EXISTS "v_events_EventDate";

CREATE TABLE "v_events_EventDate" (
"events_Id" varchar,
"To" varchar,
"End" varchar,
"From" varchar,
"Begin" varchar,
"Ticket" bool,
"GpsEast" float,
"Entrance" varchar,
"GpsNorth" float,
"MaxPersons" integer,
"MinPersons" integer,
"SingleDays" bool,
"Cancelled" varchar
);

DROP FUNCTION IF EXISTS v_events_EventDate_fn CASCADE;

CREATE FUNCTION v_events_EventDate_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_events_EventDate"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'EventDate') AS "data"
        WHERE NEW."data" -> 'EventDate' != 'null')
    SELECT "Id" AS "events_Id", CAST("data"->>'To' As varchar) AS "To",
CAST("data"->>'End' As varchar) AS "End",
CAST("data"->>'From' As varchar) AS "From",
CAST("data"->>'Begin' As varchar) AS "Begin",
CAST("data"->>'Ticket' As bool) AS "Ticket",
CAST("data"->>'GpsEast' As float) AS "GpsEast",
CAST("data"->>'Entrance' As varchar) AS "Entrance",
CAST("data"->>'GpsNorth' As float) AS "GpsNorth",
CAST("data"->>'MaxPersons' As integer) AS "MaxPersons",
CAST("data"->>'MinPersons' As integer) AS "MinPersons",
CAST("data"->>'SingleDays' As bool) AS "SingleDays",
CAST("data"->>'Cancelled' As varchar) AS "Cancelled"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_events_EventDate
    BEFORE INSERT
    ON events
    FOR EACH ROW
    EXECUTE PROCEDURE v_events_EventDate_fn();

ALTER TABLE events
    ENABLE ALWAYS TRIGGER t_v_events_EventDate;



DROP TABLE IF EXISTS "v_events_ImageGallery";

CREATE TABLE "v_events_ImageGallery" (
"events_Id" varchar,
"Width" integer,
"Height" integer,
"ImageUrl" varchar,
"CopyRight" varchar,
"ImageSource" varchar,
"IsInGallery" bool,
"ListPosition" integer,
"ImageDesc-de" varchar,
"ImageDesc-en" varchar,
"ImageDesc-it" varchar
);

DROP FUNCTION IF EXISTS v_events_ImageGallery_fn CASCADE;

CREATE FUNCTION v_events_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_events_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "events_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'CopyRight' As varchar) AS "CopyRight",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'ImageDesc'->>'de' As varchar) AS "ImageDesc-de",
CAST("data"->'ImageDesc'->>'en' As varchar) AS "ImageDesc-en",
CAST("data"->'ImageDesc'->>'it' As varchar) AS "ImageDesc-it"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_events_ImageGallery
    BEFORE INSERT
    ON events
    FOR EACH ROW
    EXECUTE PROCEDURE v_events_ImageGallery_fn();

ALTER TABLE events
    ENABLE ALWAYS TRIGGER t_v_events_ImageGallery;



DROP TABLE IF EXISTS "v_eventsopen";

CREATE TABLE "v_eventsopen" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"DateEnd" varchar,
"Gpstype" varchar,
"Latitude" float,
"DateBegin" varchar,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"FirstImport" varchar,
"NextBeginDate" varchar,
"EventDateCounter" integer,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-de-Title" varchar,
"Detail-de-Language" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-en-Title" varchar,
"Detail-en-Language" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-it-Title" varchar,
"Detail-it-Language" varchar,
"Detail-it-MetaTitle" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"LocationInfo-DistrictInfo-Id" varchar,
"LocationInfo-DistrictInfo-Self" varchar,
"LocationInfo-DistrictInfo-Name-cs" varchar,
"LocationInfo-DistrictInfo-Name-de" varchar,
"LocationInfo-DistrictInfo-Name-en" varchar,
"LocationInfo-DistrictInfo-Name-fr" varchar,
"LocationInfo-DistrictInfo-Name-it" varchar,
"LocationInfo-DistrictInfo-Name-nl" varchar,
"LocationInfo-DistrictInfo-Name-pl" varchar,
"LocationInfo-DistrictInfo-Name-ru" varchar,
"LocationInfo-MunicipalityInfo-Id" varchar,
"LocationInfo-MunicipalityInfo-Self" varchar,
"LocationInfo-MunicipalityInfo-Name-cs" varchar,
"LocationInfo-MunicipalityInfo-Name-de" varchar,
"LocationInfo-MunicipalityInfo-Name-en" varchar,
"LocationInfo-MunicipalityInfo-Name-fr" varchar,
"LocationInfo-MunicipalityInfo-Name-it" varchar,
"LocationInfo-MunicipalityInfo-Name-nl" varchar,
"LocationInfo-MunicipalityInfo-Name-pl" varchar,
"LocationInfo-MunicipalityInfo-Name-ru" varchar,
"EventBooking-BookingUrl-de-Url" varchar,
"EventBooking-BookingUrl-en-Url" varchar,
"EventBooking-BookingUrl-it-Url" varchar
);

ALTER TABLE "v_eventsopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_eventsopen_fn CASCADE;

CREATE FUNCTION v_eventsopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_eventsopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'DateEnd' As varchar) AS "DateEnd",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'DateBegin' As varchar) AS "DateBegin",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'NextBeginDate' As varchar) AS "NextBeginDate",
CAST(NEW."data"->>'EventDateCounter' As integer) AS "EventDateCounter",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Id' As varchar) AS "LocationInfo-DistrictInfo-Id",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Self' As varchar) AS "LocationInfo-DistrictInfo-Self",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-DistrictInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'de' As varchar) AS "LocationInfo-DistrictInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'en' As varchar) AS "LocationInfo-DistrictInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-DistrictInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'it' As varchar) AS "LocationInfo-DistrictInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-DistrictInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-DistrictInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-DistrictInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Id' As varchar) AS "LocationInfo-MunicipalityInfo-Id",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Self' As varchar) AS "LocationInfo-MunicipalityInfo-Self",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-MunicipalityInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'de' As varchar) AS "LocationInfo-MunicipalityInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'en' As varchar) AS "LocationInfo-MunicipalityInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-MunicipalityInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'it' As varchar) AS "LocationInfo-MunicipalityInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-MunicipalityInfo-Name-ru",
CAST(NEW."data"->'EventBooking'->'BookingUrl'->'de'->>'Url' As varchar) AS "EventBooking-BookingUrl-de-Url",
CAST(NEW."data"->'EventBooking'->'BookingUrl'->'en'->>'Url' As varchar) AS "EventBooking-BookingUrl-en-Url",
CAST(NEW."data"->'EventBooking'->'BookingUrl'->'it'->>'Url' As varchar) AS "EventBooking-BookingUrl-it-Url";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_eventsopen
    BEFORE INSERT
    ON eventsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_eventsopen_fn();

ALTER TABLE eventsopen
    ENABLE ALWAYS TRIGGER t_v_eventsopen;



DROP TABLE IF EXISTS "v_eventsopen_HasLanguage";

CREATE TABLE  "v_eventsopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_eventsopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_eventsopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_eventsopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_eventsopen_HasLanguage
    BEFORE INSERT
    ON eventsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_eventsopen_HasLanguage_fn();

ALTER TABLE eventsopen
    ENABLE ALWAYS TRIGGER t_v_eventsopen_HasLanguage;



DROP TABLE IF EXISTS "v_eventsopen_EventDatesEnd";

CREATE TABLE  "v_eventsopen_EventDatesEnd" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_eventsopen_EventDatesEnd_fn CASCADE;

CREATE FUNCTION v_eventsopen_EventDatesEnd_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_eventsopen_EventDatesEnd"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'EventDatesEnd') AS "data"
        WHERE NEW."data" -> 'EventDatesEnd' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_eventsopen_EventDatesEnd
    BEFORE INSERT
    ON eventsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_eventsopen_EventDatesEnd_fn();

ALTER TABLE eventsopen
    ENABLE ALWAYS TRIGGER t_v_eventsopen_EventDatesEnd;



DROP TABLE IF EXISTS "v_eventsopen_EventDatesBegin";

CREATE TABLE  "v_eventsopen_EventDatesBegin" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_eventsopen_EventDatesBegin_fn CASCADE;

CREATE FUNCTION v_eventsopen_EventDatesBegin_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_eventsopen_EventDatesBegin"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'EventDatesBegin') AS "data"
        WHERE NEW."data" -> 'EventDatesBegin' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_eventsopen_EventDatesBegin
    BEFORE INSERT
    ON eventsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_eventsopen_EventDatesBegin_fn();

ALTER TABLE eventsopen
    ENABLE ALWAYS TRIGGER t_v_eventsopen_EventDatesBegin;



DROP TABLE IF EXISTS "v_eventsopen_EventDate";

CREATE TABLE "v_eventsopen_EventDate" (
"eventsopen_Id" varchar,
"To" varchar,
"End" varchar,
"From" varchar,
"Begin" varchar,
"Cancelled" varchar,
"SingleDays" bool,
"PriceFrom" varchar
);

DROP FUNCTION IF EXISTS v_eventsopen_EventDate_fn CASCADE;

CREATE FUNCTION v_eventsopen_EventDate_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_eventsopen_EventDate"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'EventDate') AS "data"
        WHERE NEW."data" -> 'EventDate' != 'null')
    SELECT "Id" AS "eventsopen_Id", CAST("data"->>'To' As varchar) AS "To",
CAST("data"->>'End' As varchar) AS "End",
CAST("data"->>'From' As varchar) AS "From",
CAST("data"->>'Begin' As varchar) AS "Begin",
CAST("data"->>'Cancelled' As varchar) AS "Cancelled",
CAST("data"->>'SingleDays' As bool) AS "SingleDays",
CAST("data"->>'PriceFrom' As varchar) AS "PriceFrom"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_eventsopen_EventDate
    BEFORE INSERT
    ON eventsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_eventsopen_EventDate_fn();

ALTER TABLE eventsopen
    ENABLE ALWAYS TRIGGER t_v_eventsopen_EventDate;



DROP TABLE IF EXISTS "v_eventsopen_PublishedOn";

CREATE TABLE  "v_eventsopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_eventsopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_eventsopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_eventsopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_eventsopen_PublishedOn
    BEFORE INSERT
    ON eventsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_eventsopen_PublishedOn_fn();

ALTER TABLE eventsopen
    ENABLE ALWAYS TRIGGER t_v_eventsopen_PublishedOn;



DROP TABLE IF EXISTS "v_eventtypes";

CREATE TABLE "v_eventtypes" (
"Id" varchar,
"Type" varchar,
"Bitmask" integer,
"TypeDesc-cs" varchar,
"TypeDesc-de" varchar,
"TypeDesc-en" varchar,
"TypeDesc-it" varchar,
"TypeDesc-nl" varchar,
"TypeDesc-pl" varchar
);

ALTER TABLE "v_eventtypes" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_eventtypes_fn CASCADE;

CREATE FUNCTION v_eventtypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_eventtypes
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Bitmask' As integer) AS "Bitmask",
CAST(NEW."data"->'TypeDesc'->>'cs' As varchar) AS "TypeDesc-cs",
CAST(NEW."data"->'TypeDesc'->>'de' As varchar) AS "TypeDesc-de",
CAST(NEW."data"->'TypeDesc'->>'en' As varchar) AS "TypeDesc-en",
CAST(NEW."data"->'TypeDesc'->>'it' As varchar) AS "TypeDesc-it",
CAST(NEW."data"->'TypeDesc'->>'nl' As varchar) AS "TypeDesc-nl",
CAST(NEW."data"->'TypeDesc'->>'pl' As varchar) AS "TypeDesc-pl";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_eventtypes
    BEFORE INSERT
    ON eventtypes
    FOR EACH ROW
    EXECUTE PROCEDURE v_eventtypes_fn();

ALTER TABLE eventtypes
    ENABLE ALWAYS TRIGGER t_v_eventtypes;



DROP TABLE IF EXISTS "v_experienceareas";

CREATE TABLE "v_experienceareas" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Latitude" float,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"VisibleInSearch" bool,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-de-Title" varchar,
"Detail-en-Title" varchar,
"Detail-fr-Title" varchar,
"Detail-it-Title" varchar,
"Detail-nl-Title" varchar,
"Detail-pl-Title" varchar,
"Detail-ru-Title" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar
);

ALTER TABLE "v_experienceareas" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_experienceareas_fn CASCADE;

CREATE FUNCTION v_experienceareas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_experienceareas
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'VisibleInSearch' As bool) AS "VisibleInSearch",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_experienceareas
    BEFORE INSERT
    ON experienceareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_experienceareas_fn();

ALTER TABLE experienceareas
    ENABLE ALWAYS TRIGGER t_v_experienceareas;



DROP TABLE IF EXISTS "v_experienceareas_PublishedOn";

CREATE TABLE  "v_experienceareas_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_experienceareas_PublishedOn_fn CASCADE;

CREATE FUNCTION v_experienceareas_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_experienceareas_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_experienceareas_PublishedOn
    BEFORE INSERT
    ON experienceareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_experienceareas_PublishedOn_fn();

ALTER TABLE experienceareas
    ENABLE ALWAYS TRIGGER t_v_experienceareas_PublishedOn;



DROP TABLE IF EXISTS "v_experienceareas_TourismvereinIds";

CREATE TABLE  "v_experienceareas_TourismvereinIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_experienceareas_TourismvereinIds_fn CASCADE;

CREATE FUNCTION v_experienceareas_TourismvereinIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_experienceareas_TourismvereinIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'TourismvereinIds') AS "data"
        WHERE NEW."data" -> 'TourismvereinIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_experienceareas_TourismvereinIds
    BEFORE INSERT
    ON experienceareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_experienceareas_TourismvereinIds_fn();

ALTER TABLE experienceareas
    ENABLE ALWAYS TRIGGER t_v_experienceareas_TourismvereinIds;



DROP TABLE IF EXISTS "v_experienceareas_TourismAssociations";

CREATE TABLE "v_experienceareas_TourismAssociations" (
"experienceareas_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_experienceareas_TourismAssociations_fn CASCADE;

CREATE FUNCTION v_experienceareas_TourismAssociations_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_experienceareas_TourismAssociations"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'TourismAssociations') AS "data"
        WHERE NEW."data" -> 'TourismAssociations' != 'null')
    SELECT "Id" AS "experienceareas_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_experienceareas_TourismAssociations
    BEFORE INSERT
    ON experienceareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_experienceareas_TourismAssociations_fn();

ALTER TABLE experienceareas
    ENABLE ALWAYS TRIGGER t_v_experienceareas_TourismAssociations;



DROP TABLE IF EXISTS "v_experienceareasopen";

CREATE TABLE "v_experienceareasopen" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Latitude" float,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"VisibleInSearch" bool,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-de-Title" varchar,
"Detail-en-Title" varchar,
"Detail-fr-Title" varchar,
"Detail-it-Title" varchar,
"Detail-nl-Title" varchar,
"Detail-pl-Title" varchar,
"Detail-ru-Title" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar
);

ALTER TABLE "v_experienceareasopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_experienceareasopen_fn CASCADE;

CREATE FUNCTION v_experienceareasopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_experienceareasopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'VisibleInSearch' As bool) AS "VisibleInSearch",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_experienceareasopen
    BEFORE INSERT
    ON experienceareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_experienceareasopen_fn();

ALTER TABLE experienceareasopen
    ENABLE ALWAYS TRIGGER t_v_experienceareasopen;



DROP TABLE IF EXISTS "v_experienceareasopen_PublishedOn";

CREATE TABLE  "v_experienceareasopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_experienceareasopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_experienceareasopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_experienceareasopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_experienceareasopen_PublishedOn
    BEFORE INSERT
    ON experienceareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_experienceareasopen_PublishedOn_fn();

ALTER TABLE experienceareasopen
    ENABLE ALWAYS TRIGGER t_v_experienceareasopen_PublishedOn;



DROP TABLE IF EXISTS "v_experienceareasopen_TourismvereinIds";

CREATE TABLE  "v_experienceareasopen_TourismvereinIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_experienceareasopen_TourismvereinIds_fn CASCADE;

CREATE FUNCTION v_experienceareasopen_TourismvereinIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_experienceareasopen_TourismvereinIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'TourismvereinIds') AS "data"
        WHERE NEW."data" -> 'TourismvereinIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_experienceareasopen_TourismvereinIds
    BEFORE INSERT
    ON experienceareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_experienceareasopen_TourismvereinIds_fn();

ALTER TABLE experienceareasopen
    ENABLE ALWAYS TRIGGER t_v_experienceareasopen_TourismvereinIds;



DROP TABLE IF EXISTS "v_experienceareasopen_TourismAssociations";

CREATE TABLE "v_experienceareasopen_TourismAssociations" (
"experienceareasopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_experienceareasopen_TourismAssociations_fn CASCADE;

CREATE FUNCTION v_experienceareasopen_TourismAssociations_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_experienceareasopen_TourismAssociations"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'TourismAssociations') AS "data"
        WHERE NEW."data" -> 'TourismAssociations' != 'null')
    SELECT "Id" AS "experienceareasopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_experienceareasopen_TourismAssociations
    BEFORE INSERT
    ON experienceareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_experienceareasopen_TourismAssociations_fn();

ALTER TABLE experienceareasopen
    ENABLE ALWAYS TRIGGER t_v_experienceareasopen_TourismAssociations;



DROP TABLE IF EXISTS "v_gastronomies";

CREATE TABLE "v_gastronomies" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"Latitude" float,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"DistrictId" varchar,
"LastChange" varchar,
"FirstImport" varchar,
"AccommodationId" varchar,
"MaxSeatingCapacity" integer,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-de-Title" varchar,
"Detail-de-Header" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-de-GetThereText" varchar,
"Detail-de-AdditionalText" varchar,
"Detail-en-Title" varchar,
"Detail-en-Header" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-Language" varchar,
"Detail-en-GetThereText" varchar,
"Detail-en-AdditionalText" varchar,
"Detail-it-Title" varchar,
"Detail-it-Header" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-Language" varchar,
"Detail-it-GetThereText" varchar,
"Detail-it-AdditionalText" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-Surname" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-Faxnumber" varchar,
"ContactInfos-de-Givenname" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-Surname" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-Faxnumber" varchar,
"ContactInfos-en-Givenname" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-Surname" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-Faxnumber" varchar,
"ContactInfos-it-Givenname" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"LocationInfo-DistrictInfo-Id" varchar,
"LocationInfo-DistrictInfo-Self" varchar,
"LocationInfo-DistrictInfo-Name-cs" varchar,
"LocationInfo-DistrictInfo-Name-de" varchar,
"LocationInfo-DistrictInfo-Name-en" varchar,
"LocationInfo-DistrictInfo-Name-fr" varchar,
"LocationInfo-DistrictInfo-Name-it" varchar,
"LocationInfo-DistrictInfo-Name-nl" varchar,
"LocationInfo-DistrictInfo-Name-pl" varchar,
"LocationInfo-DistrictInfo-Name-ru" varchar,
"LocationInfo-MunicipalityInfo-Id" varchar,
"LocationInfo-MunicipalityInfo-Self" varchar,
"LocationInfo-MunicipalityInfo-Name-cs" varchar,
"LocationInfo-MunicipalityInfo-Name-de" varchar,
"LocationInfo-MunicipalityInfo-Name-en" varchar,
"LocationInfo-MunicipalityInfo-Name-fr" varchar,
"LocationInfo-MunicipalityInfo-Name-it" varchar,
"LocationInfo-MunicipalityInfo-Name-nl" varchar,
"LocationInfo-MunicipalityInfo-Name-pl" varchar,
"LocationInfo-MunicipalityInfo-Name-ru" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-it-Email" varchar,
"Detail-de-IntroText" varchar,
"Detail-en-IntroText" varchar,
"Detail-it-IntroText" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-en-MetaDesc" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-MetaTitle" varchar
);

ALTER TABLE "v_gastronomies" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_gastronomies_fn CASCADE;

CREATE FUNCTION v_gastronomies_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_gastronomies
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'DistrictId' As varchar) AS "DistrictId",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'AccommodationId' As varchar) AS "AccommodationId",
CAST(NEW."data"->>'MaxSeatingCapacity' As integer) AS "MaxSeatingCapacity",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'Detail'->'de'->>'AdditionalText' As varchar) AS "Detail-de-AdditionalText",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'AdditionalText' As varchar) AS "Detail-en-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'AdditionalText' As varchar) AS "Detail-it-AdditionalText",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'Surname' As varchar) AS "ContactInfos-de-Surname",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'Faxnumber' As varchar) AS "ContactInfos-de-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'Givenname' As varchar) AS "ContactInfos-de-Givenname",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'Surname' As varchar) AS "ContactInfos-en-Surname",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Faxnumber' As varchar) AS "ContactInfos-en-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Givenname' As varchar) AS "ContactInfos-en-Givenname",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'Surname' As varchar) AS "ContactInfos-it-Surname",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'Faxnumber' As varchar) AS "ContactInfos-it-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Givenname' As varchar) AS "ContactInfos-it-Givenname",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Id' As varchar) AS "LocationInfo-DistrictInfo-Id",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Self' As varchar) AS "LocationInfo-DistrictInfo-Self",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-DistrictInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'de' As varchar) AS "LocationInfo-DistrictInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'en' As varchar) AS "LocationInfo-DistrictInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-DistrictInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'it' As varchar) AS "LocationInfo-DistrictInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-DistrictInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-DistrictInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-DistrictInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Id' As varchar) AS "LocationInfo-MunicipalityInfo-Id",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Self' As varchar) AS "LocationInfo-MunicipalityInfo-Self",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-MunicipalityInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'de' As varchar) AS "LocationInfo-MunicipalityInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'en' As varchar) AS "LocationInfo-MunicipalityInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-MunicipalityInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'it' As varchar) AS "LocationInfo-MunicipalityInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-MunicipalityInfo-Name-ru",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'MetaDesc' As varchar) AS "Detail-en-MetaDesc",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomies
    BEFORE INSERT
    ON gastronomies
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomies_fn();

ALTER TABLE gastronomies
    ENABLE ALWAYS TRIGGER t_v_gastronomies;



DROP TABLE IF EXISTS "v_gastronomies_HasLanguage";

CREATE TABLE  "v_gastronomies_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_gastronomies_HasLanguage_fn CASCADE;

CREATE FUNCTION v_gastronomies_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_gastronomies_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomies_HasLanguage
    BEFORE INSERT
    ON gastronomies
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomies_HasLanguage_fn();

ALTER TABLE gastronomies
    ENABLE ALWAYS TRIGGER t_v_gastronomies_HasLanguage;



DROP TABLE IF EXISTS "v_gastronomies_Facilities";

CREATE TABLE "v_gastronomies_Facilities" (
"gastronomies_Id" varchar,
"Id" varchar,
"Self" varchar,
"Shortname" varchar
);

DROP FUNCTION IF EXISTS v_gastronomies_Facilities_fn CASCADE;

CREATE FUNCTION v_gastronomies_Facilities_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_gastronomies_Facilities"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Facilities') AS "data"
        WHERE NEW."data" -> 'Facilities' != 'null')
    SELECT "Id" AS "gastronomies_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Shortname' As varchar) AS "Shortname"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomies_Facilities
    BEFORE INSERT
    ON gastronomies
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomies_Facilities_fn();

ALTER TABLE gastronomies
    ENABLE ALWAYS TRIGGER t_v_gastronomies_Facilities;



DROP TABLE IF EXISTS "v_gastronomies_CategoryCodes";

CREATE TABLE "v_gastronomies_CategoryCodes" (
"gastronomies_Id" varchar,
"Id" varchar,
"Self" varchar,
"Shortname" varchar
);

DROP FUNCTION IF EXISTS v_gastronomies_CategoryCodes_fn CASCADE;

CREATE FUNCTION v_gastronomies_CategoryCodes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_gastronomies_CategoryCodes"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'CategoryCodes') AS "data"
        WHERE NEW."data" -> 'CategoryCodes' != 'null')
    SELECT "Id" AS "gastronomies_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Shortname' As varchar) AS "Shortname"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomies_CategoryCodes
    BEFORE INSERT
    ON gastronomies
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomies_CategoryCodes_fn();

ALTER TABLE gastronomies
    ENABLE ALWAYS TRIGGER t_v_gastronomies_CategoryCodes;



DROP TABLE IF EXISTS "v_gastronomies_ImageGallery";

CREATE TABLE "v_gastronomies_ImageGallery" (
"gastronomies_Id" varchar,
"Width" integer,
"Height" integer,
"ValidTo" varchar,
"ImageUrl" varchar,
"ValidFrom" varchar,
"IsInGallery" bool,
"ListPosition" integer,
"ImageDesc-de" varchar,
"ImageDesc-en" varchar,
"ImageDesc-it" varchar,
"CopyRight" varchar
);

DROP FUNCTION IF EXISTS v_gastronomies_ImageGallery_fn CASCADE;

CREATE FUNCTION v_gastronomies_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_gastronomies_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "gastronomies_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ValidTo' As varchar) AS "ValidTo",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'ValidFrom' As varchar) AS "ValidFrom",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'ImageDesc'->>'de' As varchar) AS "ImageDesc-de",
CAST("data"->'ImageDesc'->>'en' As varchar) AS "ImageDesc-en",
CAST("data"->'ImageDesc'->>'it' As varchar) AS "ImageDesc-it",
CAST("data"->>'CopyRight' As varchar) AS "CopyRight"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomies_ImageGallery
    BEFORE INSERT
    ON gastronomies
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomies_ImageGallery_fn();

ALTER TABLE gastronomies
    ENABLE ALWAYS TRIGGER t_v_gastronomies_ImageGallery;



DROP TABLE IF EXISTS "v_gastronomies_DishRates";

CREATE TABLE "v_gastronomies_DishRates" (
"gastronomies_Id" varchar,
"Id" varchar,
"Self" varchar,
"MaxAmount" float,
"MinAmount" float,
"Shortname" varchar,
"CurrencyCode" varchar
);

DROP FUNCTION IF EXISTS v_gastronomies_DishRates_fn CASCADE;

CREATE FUNCTION v_gastronomies_DishRates_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_gastronomies_DishRates"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'DishRates') AS "data"
        WHERE NEW."data" -> 'DishRates' != 'null')
    SELECT "Id" AS "gastronomies_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'MaxAmount' As float) AS "MaxAmount",
CAST("data"->>'MinAmount' As float) AS "MinAmount",
CAST("data"->>'Shortname' As varchar) AS "Shortname",
CAST("data"->>'CurrencyCode' As varchar) AS "CurrencyCode"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomies_DishRates
    BEFORE INSERT
    ON gastronomies
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomies_DishRates_fn();

ALTER TABLE gastronomies
    ENABLE ALWAYS TRIGGER t_v_gastronomies_DishRates;



DROP TABLE IF EXISTS "v_gastronomies_CapacityCeremony";

CREATE TABLE "v_gastronomies_CapacityCeremony" (
"gastronomies_Id" varchar,
"Id" varchar,
"Self" varchar,
"Shortname" varchar,
"MaxSeatingCapacity" integer
);

DROP FUNCTION IF EXISTS v_gastronomies_CapacityCeremony_fn CASCADE;

CREATE FUNCTION v_gastronomies_CapacityCeremony_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_gastronomies_CapacityCeremony"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'CapacityCeremony') AS "data"
        WHERE NEW."data" -> 'CapacityCeremony' != 'null')
    SELECT "Id" AS "gastronomies_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Shortname' As varchar) AS "Shortname",
CAST("data"->>'MaxSeatingCapacity' As integer) AS "MaxSeatingCapacity"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomies_CapacityCeremony
    BEFORE INSERT
    ON gastronomies
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomies_CapacityCeremony_fn();

ALTER TABLE gastronomies
    ENABLE ALWAYS TRIGGER t_v_gastronomies_CapacityCeremony;



DROP TABLE IF EXISTS "v_gastronomies_OperationSchedule";

CREATE TABLE "v_gastronomies_OperationSchedule" (
"gastronomies_Id" varchar,
"Stop" varchar,
"Type" varchar,
"Start" varchar,
"OperationscheduleName-de" varchar
);

DROP FUNCTION IF EXISTS v_gastronomies_OperationSchedule_fn CASCADE;

CREATE FUNCTION v_gastronomies_OperationSchedule_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_gastronomies_OperationSchedule"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'OperationSchedule') AS "data"
        WHERE NEW."data" -> 'OperationSchedule' != 'null')
    SELECT "Id" AS "gastronomies_Id", CAST("data"->>'Stop' As varchar) AS "Stop",
CAST("data"->>'Type' As varchar) AS "Type",
CAST("data"->>'Start' As varchar) AS "Start",
CAST("data"->'OperationscheduleName'->>'de' As varchar) AS "OperationscheduleName-de"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomies_OperationSchedule
    BEFORE INSERT
    ON gastronomies
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomies_OperationSchedule_fn();

ALTER TABLE gastronomies
    ENABLE ALWAYS TRIGGER t_v_gastronomies_OperationSchedule;



DROP TABLE IF EXISTS "v_gastronomies_OperationSchedule_OperationScheduleTime";

CREATE TABLE "v_gastronomies_OperationSchedule_OperationScheduleTime" (
"gastronomies_Id" varchar,
"End" varchar,
"Start" varchar,
"State" integer,
"Friday" bool,
"Monday" bool,
"Sunday" bool,
"Tuesday" bool,
"Saturday" bool,
"Thursday" bool,
"Timecode" integer,
"Thuresday" bool,
"Wednesday" bool
);

DROP FUNCTION IF EXISTS v_gastronomies_OperationSchedule_OperationScheduleTime_fn CASCADE;

CREATE FUNCTION v_gastronomies_OperationSchedule_OperationScheduleTime_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_gastronomies_OperationSchedule_OperationScheduleTime"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'OperationSchedule_OperationScheduleTime') AS "data"
        WHERE NEW."data" -> 'OperationSchedule_OperationScheduleTime' != 'null')
    SELECT "Id" AS "gastronomies_Id", CAST("data"->>'End' As varchar) AS "End",
CAST("data"->>'Start' As varchar) AS "Start",
CAST("data"->>'State' As integer) AS "State",
CAST("data"->>'Friday' As bool) AS "Friday",
CAST("data"->>'Monday' As bool) AS "Monday",
CAST("data"->>'Sunday' As bool) AS "Sunday",
CAST("data"->>'Tuesday' As bool) AS "Tuesday",
CAST("data"->>'Saturday' As bool) AS "Saturday",
CAST("data"->>'Thursday' As bool) AS "Thursday",
CAST("data"->>'Timecode' As integer) AS "Timecode",
CAST("data"->>'Thuresday' As bool) AS "Thuresday",
CAST("data"->>'Wednesday' As bool) AS "Wednesday"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomies_OperationSchedule_OperationScheduleTime
    BEFORE INSERT
    ON gastronomies
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomies_OperationSchedule_OperationScheduleTime_fn();

ALTER TABLE gastronomies
    ENABLE ALWAYS TRIGGER t_v_gastronomies_OperationSchedule_OperationScheduleTime;



DROP TABLE IF EXISTS "v_gastronomiesopen";

CREATE TABLE "v_gastronomiesopen" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"Latitude" float,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"FirstImport" varchar,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-de-Title" varchar,
"Detail-de-Language" varchar,
"Detail-en-Title" varchar,
"Detail-en-Language" varchar,
"Detail-it-Title" varchar,
"Detail-it-Language" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"LocationInfo-DistrictInfo-Id" varchar,
"LocationInfo-DistrictInfo-Self" varchar,
"LocationInfo-DistrictInfo-Name-cs" varchar,
"LocationInfo-DistrictInfo-Name-de" varchar,
"LocationInfo-DistrictInfo-Name-en" varchar,
"LocationInfo-DistrictInfo-Name-fr" varchar,
"LocationInfo-DistrictInfo-Name-it" varchar,
"LocationInfo-DistrictInfo-Name-nl" varchar,
"LocationInfo-DistrictInfo-Name-pl" varchar,
"LocationInfo-DistrictInfo-Name-ru" varchar,
"LocationInfo-MunicipalityInfo-Id" varchar,
"LocationInfo-MunicipalityInfo-Self" varchar,
"LocationInfo-MunicipalityInfo-Name-cs" varchar,
"LocationInfo-MunicipalityInfo-Name-de" varchar,
"LocationInfo-MunicipalityInfo-Name-en" varchar,
"LocationInfo-MunicipalityInfo-Name-fr" varchar,
"LocationInfo-MunicipalityInfo-Name-it" varchar,
"LocationInfo-MunicipalityInfo-Name-nl" varchar,
"LocationInfo-MunicipalityInfo-Name-pl" varchar,
"LocationInfo-MunicipalityInfo-Name-ru" varchar
);

ALTER TABLE "v_gastronomiesopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_gastronomiesopen_fn CASCADE;

CREATE FUNCTION v_gastronomiesopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_gastronomiesopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Id' As varchar) AS "LocationInfo-DistrictInfo-Id",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Self' As varchar) AS "LocationInfo-DistrictInfo-Self",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-DistrictInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'de' As varchar) AS "LocationInfo-DistrictInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'en' As varchar) AS "LocationInfo-DistrictInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-DistrictInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'it' As varchar) AS "LocationInfo-DistrictInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-DistrictInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-DistrictInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-DistrictInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Id' As varchar) AS "LocationInfo-MunicipalityInfo-Id",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Self' As varchar) AS "LocationInfo-MunicipalityInfo-Self",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-MunicipalityInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'de' As varchar) AS "LocationInfo-MunicipalityInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'en' As varchar) AS "LocationInfo-MunicipalityInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-MunicipalityInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'it' As varchar) AS "LocationInfo-MunicipalityInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-MunicipalityInfo-Name-ru";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomiesopen
    BEFORE INSERT
    ON gastronomiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomiesopen_fn();

ALTER TABLE gastronomiesopen
    ENABLE ALWAYS TRIGGER t_v_gastronomiesopen;



DROP TABLE IF EXISTS "v_gastronomiesopen_HasLanguage";

CREATE TABLE  "v_gastronomiesopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_gastronomiesopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_gastronomiesopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_gastronomiesopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomiesopen_HasLanguage
    BEFORE INSERT
    ON gastronomiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomiesopen_HasLanguage_fn();

ALTER TABLE gastronomiesopen
    ENABLE ALWAYS TRIGGER t_v_gastronomiesopen_HasLanguage;



DROP TABLE IF EXISTS "v_gastronomiesopen_CategoryCodes";

CREATE TABLE "v_gastronomiesopen_CategoryCodes" (
"gastronomiesopen_Id" varchar,
"Id" varchar,
"Self" varchar,
"Shortname" varchar
);

DROP FUNCTION IF EXISTS v_gastronomiesopen_CategoryCodes_fn CASCADE;

CREATE FUNCTION v_gastronomiesopen_CategoryCodes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_gastronomiesopen_CategoryCodes"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'CategoryCodes') AS "data"
        WHERE NEW."data" -> 'CategoryCodes' != 'null')
    SELECT "Id" AS "gastronomiesopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Shortname' As varchar) AS "Shortname"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomiesopen_CategoryCodes
    BEFORE INSERT
    ON gastronomiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomiesopen_CategoryCodes_fn();

ALTER TABLE gastronomiesopen
    ENABLE ALWAYS TRIGGER t_v_gastronomiesopen_CategoryCodes;



DROP TABLE IF EXISTS "v_gastronomytypes";

CREATE TABLE "v_gastronomytypes" (
"Id" varchar,
"Key" varchar,
"Type" varchar,
"Bitmask" integer,
"TypeDesc-de" varchar,
"TypeDesc-en" varchar,
"TypeDesc-it" varchar
);

ALTER TABLE "v_gastronomytypes" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_gastronomytypes_fn CASCADE;

CREATE FUNCTION v_gastronomytypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_gastronomytypes
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Key' As varchar) AS "Key",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Bitmask' As integer) AS "Bitmask",
CAST(NEW."data"->'TypeDesc'->>'de' As varchar) AS "TypeDesc-de",
CAST(NEW."data"->'TypeDesc'->>'en' As varchar) AS "TypeDesc-en",
CAST(NEW."data"->'TypeDesc'->>'it' As varchar) AS "TypeDesc-it";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_gastronomytypes
    BEFORE INSERT
    ON gastronomytypes
    FOR EACH ROW
    EXECUTE PROCEDURE v_gastronomytypes_fn();

ALTER TABLE gastronomytypes
    ENABLE ALWAYS TRIGGER t_v_gastronomytypes;



DROP TABLE IF EXISTS "v_ltstaggingtypes";

CREATE TABLE "v_ltstaggingtypes" (
"Id" varchar,
"Key" varchar,
"Level" integer,
"Entity" varchar,
"TypeParent" varchar,
"TypeNames-de" varchar,
"TypeNames-en" varchar,
"TypeNames-it" varchar,
"TypeDescriptions-de" varchar,
"TypeDescriptions-en" varchar,
"TypeDescriptions-it" varchar
);

ALTER TABLE "v_ltstaggingtypes" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_ltstaggingtypes_fn CASCADE;

CREATE FUNCTION v_ltstaggingtypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_ltstaggingtypes
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Key' As varchar) AS "Key",
CAST(NEW."data"->>'Level' As integer) AS "Level",
CAST(NEW."data"->>'Entity' As varchar) AS "Entity",
CAST(NEW."data"->>'TypeParent' As varchar) AS "TypeParent",
CAST(NEW."data"->'TypeNames'->>'de' As varchar) AS "TypeNames-de",
CAST(NEW."data"->'TypeNames'->>'en' As varchar) AS "TypeNames-en",
CAST(NEW."data"->'TypeNames'->>'it' As varchar) AS "TypeNames-it",
CAST(NEW."data"->'TypeDescriptions'->>'de' As varchar) AS "TypeDescriptions-de",
CAST(NEW."data"->'TypeDescriptions'->>'en' As varchar) AS "TypeDescriptions-en",
CAST(NEW."data"->'TypeDescriptions'->>'it' As varchar) AS "TypeDescriptions-it";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_ltstaggingtypes
    BEFORE INSERT
    ON ltstaggingtypes
    FOR EACH ROW
    EXECUTE PROCEDURE v_ltstaggingtypes_fn();

ALTER TABLE ltstaggingtypes
    ENABLE ALWAYS TRIGGER t_v_ltstaggingtypes;



DROP TABLE IF EXISTS "v_measuringpoints";

CREATE TABLE "v_measuringpoints" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"Latitude" float,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"LastUpdate" varchar,
"SnowHeight" varchar,
"FirstImport" varchar,
"Temperature" varchar,
"LastSnowDate" varchar,
"newSnowHeight" varchar,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"OwnerId" varchar,
"LocationInfo-AreaInfo-Id" varchar,
"LocationInfo-AreaInfo-Self" varchar,
"LocationInfo-AreaInfo-Name-cs" varchar,
"LocationInfo-AreaInfo-Name-de" varchar,
"LocationInfo-AreaInfo-Name-en" varchar,
"LocationInfo-AreaInfo-Name-fr" varchar,
"LocationInfo-AreaInfo-Name-it" varchar,
"LocationInfo-AreaInfo-Name-nl" varchar,
"LocationInfo-AreaInfo-Name-pl" varchar,
"LocationInfo-AreaInfo-Name-ru" varchar
);

ALTER TABLE "v_measuringpoints" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_measuringpoints_fn CASCADE;

CREATE FUNCTION v_measuringpoints_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_measuringpoints
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'LastUpdate' As varchar) AS "LastUpdate",
CAST(NEW."data"->>'SnowHeight' As varchar) AS "SnowHeight",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'Temperature' As varchar) AS "Temperature",
CAST(NEW."data"->>'LastSnowDate' As varchar) AS "LastSnowDate",
CAST(NEW."data"->>'newSnowHeight' As varchar) AS "newSnowHeight",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->>'OwnerId' As varchar) AS "OwnerId",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->>'Id' As varchar) AS "LocationInfo-AreaInfo-Id",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->>'Self' As varchar) AS "LocationInfo-AreaInfo-Self",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-AreaInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'de' As varchar) AS "LocationInfo-AreaInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'en' As varchar) AS "LocationInfo-AreaInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-AreaInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'it' As varchar) AS "LocationInfo-AreaInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-AreaInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-AreaInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-AreaInfo-Name-ru";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_measuringpoints
    BEFORE INSERT
    ON measuringpoints
    FOR EACH ROW
    EXECUTE PROCEDURE v_measuringpoints_fn();

ALTER TABLE measuringpoints
    ENABLE ALWAYS TRIGGER t_v_measuringpoints;



DROP TABLE IF EXISTS "v_measuringpoints_PublishedOn";

CREATE TABLE  "v_measuringpoints_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_measuringpoints_PublishedOn_fn CASCADE;

CREATE FUNCTION v_measuringpoints_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_measuringpoints_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_measuringpoints_PublishedOn
    BEFORE INSERT
    ON measuringpoints
    FOR EACH ROW
    EXECUTE PROCEDURE v_measuringpoints_PublishedOn_fn();

ALTER TABLE measuringpoints
    ENABLE ALWAYS TRIGGER t_v_measuringpoints_PublishedOn;



DROP TABLE IF EXISTS "v_measuringpoints_AreaIds";

CREATE TABLE  "v_measuringpoints_AreaIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_measuringpoints_AreaIds_fn CASCADE;

CREATE FUNCTION v_measuringpoints_AreaIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_measuringpoints_AreaIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'AreaIds') AS "data"
        WHERE NEW."data" -> 'AreaIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_measuringpoints_AreaIds
    BEFORE INSERT
    ON measuringpoints
    FOR EACH ROW
    EXECUTE PROCEDURE v_measuringpoints_AreaIds_fn();

ALTER TABLE measuringpoints
    ENABLE ALWAYS TRIGGER t_v_measuringpoints_AreaIds;



DROP TABLE IF EXISTS "v_measuringpoints_Areas";

CREATE TABLE "v_measuringpoints_Areas" (
"measuringpoints_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_measuringpoints_Areas_fn CASCADE;

CREATE FUNCTION v_measuringpoints_Areas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_measuringpoints_Areas"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Areas') AS "data"
        WHERE NEW."data" -> 'Areas' != 'null')
    SELECT "Id" AS "measuringpoints_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_measuringpoints_Areas
    BEFORE INSERT
    ON measuringpoints
    FOR EACH ROW
    EXECUTE PROCEDURE v_measuringpoints_Areas_fn();

ALTER TABLE measuringpoints
    ENABLE ALWAYS TRIGGER t_v_measuringpoints_Areas;



DROP TABLE IF EXISTS "v_measuringpoints_WeatherObservation";

CREATE TABLE "v_measuringpoints_WeatherObservation" (
"measuringpoints_Id" varchar,
"Date" varchar,
"Level" varchar,
"IconID" varchar,
"LevelId" varchar,
"WeatherStatus-de" varchar
);

DROP FUNCTION IF EXISTS v_measuringpoints_WeatherObservation_fn CASCADE;

CREATE FUNCTION v_measuringpoints_WeatherObservation_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_measuringpoints_WeatherObservation"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'WeatherObservation') AS "data"
        WHERE NEW."data" -> 'WeatherObservation' != 'null')
    SELECT "Id" AS "measuringpoints_Id", CAST("data"->>'Date' As varchar) AS "Date",
CAST("data"->>'Level' As varchar) AS "Level",
CAST("data"->>'IconID' As varchar) AS "IconID",
CAST("data"->>'LevelId' As varchar) AS "LevelId",
CAST("data"->'WeatherStatus'->>'de' As varchar) AS "WeatherStatus-de"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_measuringpoints_WeatherObservation
    BEFORE INSERT
    ON measuringpoints
    FOR EACH ROW
    EXECUTE PROCEDURE v_measuringpoints_WeatherObservation_fn();

ALTER TABLE measuringpoints
    ENABLE ALWAYS TRIGGER t_v_measuringpoints_WeatherObservation;



DROP TABLE IF EXISTS "v_metaregions";

CREATE TABLE "v_metaregions" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Latitude" float,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"VisibleInSearch" bool,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-Header" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-MetaDesc" varchar,
"Detail-cs-IntroText" varchar,
"Detail-cs-MetaTitle" varchar,
"Detail-cs-SubHeader" varchar,
"Detail-cs-GetThereText" varchar,
"Detail-cs-AdditionalText" varchar,
"Detail-de-Title" varchar,
"Detail-de-Header" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-de-SubHeader" varchar,
"Detail-en-Title" varchar,
"Detail-en-Header" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-MetaDesc" varchar,
"Detail-en-IntroText" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-en-SubHeader" varchar,
"Detail-en-GetThereText" varchar,
"Detail-en-AdditionalText" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Header" varchar,
"Detail-fr-BaseText" varchar,
"Detail-fr-MetaDesc" varchar,
"Detail-fr-IntroText" varchar,
"Detail-fr-MetaTitle" varchar,
"Detail-fr-SubHeader" varchar,
"Detail-fr-GetThereText" varchar,
"Detail-fr-AdditionalText" varchar,
"Detail-it-Title" varchar,
"Detail-it-Header" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-MetaTitle" varchar,
"Detail-it-SubHeader" varchar,
"Detail-it-GetThereText" varchar,
"Detail-it-AdditionalText" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-Header" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-MetaDesc" varchar,
"Detail-nl-IntroText" varchar,
"Detail-nl-MetaTitle" varchar,
"Detail-nl-SubHeader" varchar,
"Detail-nl-GetThereText" varchar,
"Detail-nl-AdditionalText" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-Header" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-MetaDesc" varchar,
"Detail-pl-IntroText" varchar,
"Detail-pl-MetaTitle" varchar,
"Detail-pl-SubHeader" varchar,
"Detail-pl-GetThereText" varchar,
"Detail-pl-AdditionalText" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Header" varchar,
"Detail-ru-BaseText" varchar,
"Detail-ru-MetaDesc" varchar,
"Detail-ru-IntroText" varchar,
"Detail-ru-MetaTitle" varchar,
"Detail-ru-SubHeader" varchar,
"Detail-ru-GetThereText" varchar,
"Detail-ru-AdditionalText" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"DetailThemed-cs-Language" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Winter-Title" varchar,
"DetailThemed-cs-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-cs-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-cs-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-de-Language" varchar,
"DetailThemed-de-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-de-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-de-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-de-DetailsThemed-Winter-Title" varchar,
"DetailThemed-de-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-de-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-de-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-de-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-en-Language" varchar,
"DetailThemed-en-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-en-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-en-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-en-DetailsThemed-Winter-Title" varchar,
"DetailThemed-en-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-en-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-en-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-en-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-fr-Language" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Winter-Title" varchar,
"DetailThemed-fr-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-fr-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-fr-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-it-Language" varchar,
"DetailThemed-it-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-it-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-it-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-it-DetailsThemed-Winter-Title" varchar,
"DetailThemed-it-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-it-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-it-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-it-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-nl-Language" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Winter-Title" varchar,
"DetailThemed-nl-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-nl-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-nl-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-pl-Language" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Winter-Title" varchar,
"DetailThemed-pl-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-pl-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-pl-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-ru-Language" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Winter-Title" varchar,
"DetailThemed-ru-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-ru-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-ru-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar
);

ALTER TABLE "v_metaregions" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_metaregions_fn CASCADE;

CREATE FUNCTION v_metaregions_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_metaregions
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'VisibleInSearch' As bool) AS "VisibleInSearch",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'Header' As varchar) AS "Detail-cs-Header",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'MetaDesc' As varchar) AS "Detail-cs-MetaDesc",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'cs'->>'MetaTitle' As varchar) AS "Detail-cs-MetaTitle",
CAST(NEW."data"->'Detail'->'cs'->>'SubHeader' As varchar) AS "Detail-cs-SubHeader",
CAST(NEW."data"->'Detail'->'cs'->>'GetThereText' As varchar) AS "Detail-cs-GetThereText",
CAST(NEW."data"->'Detail'->'cs'->>'AdditionalText' As varchar) AS "Detail-cs-AdditionalText",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'MetaDesc' As varchar) AS "Detail-en-MetaDesc",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'AdditionalText' As varchar) AS "Detail-en-AdditionalText",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Header' As varchar) AS "Detail-fr-Header",
CAST(NEW."data"->'Detail'->'fr'->>'BaseText' As varchar) AS "Detail-fr-BaseText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaDesc' As varchar) AS "Detail-fr-MetaDesc",
CAST(NEW."data"->'Detail'->'fr'->>'IntroText' As varchar) AS "Detail-fr-IntroText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaTitle' As varchar) AS "Detail-fr-MetaTitle",
CAST(NEW."data"->'Detail'->'fr'->>'SubHeader' As varchar) AS "Detail-fr-SubHeader",
CAST(NEW."data"->'Detail'->'fr'->>'GetThereText' As varchar) AS "Detail-fr-GetThereText",
CAST(NEW."data"->'Detail'->'fr'->>'AdditionalText' As varchar) AS "Detail-fr-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'AdditionalText' As varchar) AS "Detail-it-AdditionalText",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Header' As varchar) AS "Detail-nl-Header",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'MetaDesc' As varchar) AS "Detail-nl-MetaDesc",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'MetaTitle' As varchar) AS "Detail-nl-MetaTitle",
CAST(NEW."data"->'Detail'->'nl'->>'SubHeader' As varchar) AS "Detail-nl-SubHeader",
CAST(NEW."data"->'Detail'->'nl'->>'GetThereText' As varchar) AS "Detail-nl-GetThereText",
CAST(NEW."data"->'Detail'->'nl'->>'AdditionalText' As varchar) AS "Detail-nl-AdditionalText",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Header' As varchar) AS "Detail-pl-Header",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'MetaDesc' As varchar) AS "Detail-pl-MetaDesc",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'MetaTitle' As varchar) AS "Detail-pl-MetaTitle",
CAST(NEW."data"->'Detail'->'pl'->>'SubHeader' As varchar) AS "Detail-pl-SubHeader",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'pl'->>'AdditionalText' As varchar) AS "Detail-pl-AdditionalText",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Header' As varchar) AS "Detail-ru-Header",
CAST(NEW."data"->'Detail'->'ru'->>'BaseText' As varchar) AS "Detail-ru-BaseText",
CAST(NEW."data"->'Detail'->'ru'->>'MetaDesc' As varchar) AS "Detail-ru-MetaDesc",
CAST(NEW."data"->'Detail'->'ru'->>'IntroText' As varchar) AS "Detail-ru-IntroText",
CAST(NEW."data"->'Detail'->'ru'->>'MetaTitle' As varchar) AS "Detail-ru-MetaTitle",
CAST(NEW."data"->'Detail'->'ru'->>'SubHeader' As varchar) AS "Detail-ru-SubHeader",
CAST(NEW."data"->'Detail'->'ru'->>'GetThereText' As varchar) AS "Detail-ru-GetThereText",
CAST(NEW."data"->'Detail'->'ru'->>'AdditionalText' As varchar) AS "Detail-ru-AdditionalText",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'DetailThemed'->'cs'->>'Language' As varchar) AS "DetailThemed-cs-Language",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-cs-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->>'Language' As varchar) AS "DetailThemed-de-Language",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-de-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->>'Language' As varchar) AS "DetailThemed-en-Language",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-en-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->>'Language' As varchar) AS "DetailThemed-fr-Language",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-fr-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->>'Language' As varchar) AS "DetailThemed-it-Language",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-it-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->>'Language' As varchar) AS "DetailThemed-nl-Language",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-nl-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->>'Language' As varchar) AS "DetailThemed-pl-Language",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-pl-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->>'Language' As varchar) AS "DetailThemed-ru-Language",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-ru-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregions
    BEFORE INSERT
    ON metaregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregions_fn();

ALTER TABLE metaregions
    ENABLE ALWAYS TRIGGER t_v_metaregions;



DROP TABLE IF EXISTS "v_metaregions_RegionIds";

CREATE TABLE  "v_metaregions_RegionIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_metaregions_RegionIds_fn CASCADE;

CREATE FUNCTION v_metaregions_RegionIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregions_RegionIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'RegionIds') AS "data"
        WHERE NEW."data" -> 'RegionIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregions_RegionIds
    BEFORE INSERT
    ON metaregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregions_RegionIds_fn();

ALTER TABLE metaregions
    ENABLE ALWAYS TRIGGER t_v_metaregions_RegionIds;



DROP TABLE IF EXISTS "v_metaregions_DistrictIds";

CREATE TABLE  "v_metaregions_DistrictIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_metaregions_DistrictIds_fn CASCADE;

CREATE FUNCTION v_metaregions_DistrictIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregions_DistrictIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'DistrictIds') AS "data"
        WHERE NEW."data" -> 'DistrictIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregions_DistrictIds
    BEFORE INSERT
    ON metaregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregions_DistrictIds_fn();

ALTER TABLE metaregions
    ENABLE ALWAYS TRIGGER t_v_metaregions_DistrictIds;



DROP TABLE IF EXISTS "v_metaregions_HasLanguage";

CREATE TABLE  "v_metaregions_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_metaregions_HasLanguage_fn CASCADE;

CREATE FUNCTION v_metaregions_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregions_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregions_HasLanguage
    BEFORE INSERT
    ON metaregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregions_HasLanguage_fn();

ALTER TABLE metaregions
    ENABLE ALWAYS TRIGGER t_v_metaregions_HasLanguage;



DROP TABLE IF EXISTS "v_metaregions_PublishedOn";

CREATE TABLE  "v_metaregions_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_metaregions_PublishedOn_fn CASCADE;

CREATE FUNCTION v_metaregions_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregions_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregions_PublishedOn
    BEFORE INSERT
    ON metaregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregions_PublishedOn_fn();

ALTER TABLE metaregions
    ENABLE ALWAYS TRIGGER t_v_metaregions_PublishedOn;



DROP TABLE IF EXISTS "v_metaregions_TourismvereinIds";

CREATE TABLE  "v_metaregions_TourismvereinIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_metaregions_TourismvereinIds_fn CASCADE;

CREATE FUNCTION v_metaregions_TourismvereinIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregions_TourismvereinIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'TourismvereinIds') AS "data"
        WHERE NEW."data" -> 'TourismvereinIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregions_TourismvereinIds
    BEFORE INSERT
    ON metaregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregions_TourismvereinIds_fn();

ALTER TABLE metaregions
    ENABLE ALWAYS TRIGGER t_v_metaregions_TourismvereinIds;



DROP TABLE IF EXISTS "v_metaregions_Regions";

CREATE TABLE "v_metaregions_Regions" (
"metaregions_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_metaregions_Regions_fn CASCADE;

CREATE FUNCTION v_metaregions_Regions_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregions_Regions"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Regions') AS "data"
        WHERE NEW."data" -> 'Regions' != 'null')
    SELECT "Id" AS "metaregions_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregions_Regions
    BEFORE INSERT
    ON metaregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregions_Regions_fn();

ALTER TABLE metaregions
    ENABLE ALWAYS TRIGGER t_v_metaregions_Regions;



DROP TABLE IF EXISTS "v_metaregions_Districts";

CREATE TABLE "v_metaregions_Districts" (
"metaregions_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_metaregions_Districts_fn CASCADE;

CREATE FUNCTION v_metaregions_Districts_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregions_Districts"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Districts') AS "data"
        WHERE NEW."data" -> 'Districts' != 'null')
    SELECT "Id" AS "metaregions_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregions_Districts
    BEFORE INSERT
    ON metaregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregions_Districts_fn();

ALTER TABLE metaregions
    ENABLE ALWAYS TRIGGER t_v_metaregions_Districts;



DROP TABLE IF EXISTS "v_metaregions_ImageGallery";

CREATE TABLE "v_metaregions_ImageGallery" (
"metaregions_Id" varchar,
"Width" integer,
"Height" integer,
"ValidTo" varchar,
"ImageUrl" varchar,
"ImageName" varchar,
"ValidFrom" varchar,
"ImageSource" varchar,
"IsInGallery" bool,
"ListPosition" integer,
"ImageDesc-cs" varchar,
"ImageDesc-de" varchar,
"ImageDesc-en" varchar,
"ImageDesc-fr" varchar,
"ImageDesc-it" varchar,
"ImageDesc-nl" varchar,
"ImageDesc-pl" varchar,
"ImageDesc-ru" varchar,
"ImageTitle-cs" varchar,
"ImageTitle-de" varchar,
"ImageTitle-en" varchar,
"ImageTitle-fr" varchar,
"ImageTitle-it" varchar,
"ImageTitle-nl" varchar,
"ImageTitle-pl" varchar,
"ImageTitle-ru" varchar
);

DROP FUNCTION IF EXISTS v_metaregions_ImageGallery_fn CASCADE;

CREATE FUNCTION v_metaregions_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregions_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "metaregions_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ValidTo' As varchar) AS "ValidTo",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'ImageName' As varchar) AS "ImageName",
CAST("data"->>'ValidFrom' As varchar) AS "ValidFrom",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'ImageDesc'->>'cs' As varchar) AS "ImageDesc-cs",
CAST("data"->'ImageDesc'->>'de' As varchar) AS "ImageDesc-de",
CAST("data"->'ImageDesc'->>'en' As varchar) AS "ImageDesc-en",
CAST("data"->'ImageDesc'->>'fr' As varchar) AS "ImageDesc-fr",
CAST("data"->'ImageDesc'->>'it' As varchar) AS "ImageDesc-it",
CAST("data"->'ImageDesc'->>'nl' As varchar) AS "ImageDesc-nl",
CAST("data"->'ImageDesc'->>'pl' As varchar) AS "ImageDesc-pl",
CAST("data"->'ImageDesc'->>'ru' As varchar) AS "ImageDesc-ru",
CAST("data"->'ImageTitle'->>'cs' As varchar) AS "ImageTitle-cs",
CAST("data"->'ImageTitle'->>'de' As varchar) AS "ImageTitle-de",
CAST("data"->'ImageTitle'->>'en' As varchar) AS "ImageTitle-en",
CAST("data"->'ImageTitle'->>'fr' As varchar) AS "ImageTitle-fr",
CAST("data"->'ImageTitle'->>'it' As varchar) AS "ImageTitle-it",
CAST("data"->'ImageTitle'->>'nl' As varchar) AS "ImageTitle-nl",
CAST("data"->'ImageTitle'->>'pl' As varchar) AS "ImageTitle-pl",
CAST("data"->'ImageTitle'->>'ru' As varchar) AS "ImageTitle-ru"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregions_ImageGallery
    BEFORE INSERT
    ON metaregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregions_ImageGallery_fn();

ALTER TABLE metaregions
    ENABLE ALWAYS TRIGGER t_v_metaregions_ImageGallery;



DROP TABLE IF EXISTS "v_metaregions_TourismAssociations";

CREATE TABLE "v_metaregions_TourismAssociations" (
"metaregions_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_metaregions_TourismAssociations_fn CASCADE;

CREATE FUNCTION v_metaregions_TourismAssociations_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregions_TourismAssociations"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'TourismAssociations') AS "data"
        WHERE NEW."data" -> 'TourismAssociations' != 'null')
    SELECT "Id" AS "metaregions_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregions_TourismAssociations
    BEFORE INSERT
    ON metaregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregions_TourismAssociations_fn();

ALTER TABLE metaregions
    ENABLE ALWAYS TRIGGER t_v_metaregions_TourismAssociations;



DROP TABLE IF EXISTS "v_metaregionsopen";

CREATE TABLE "v_metaregionsopen" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Latitude" float,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"VisibleInSearch" bool,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-Header" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-MetaDesc" varchar,
"Detail-cs-IntroText" varchar,
"Detail-cs-MetaTitle" varchar,
"Detail-cs-SubHeader" varchar,
"Detail-cs-GetThereText" varchar,
"Detail-cs-AdditionalText" varchar,
"Detail-de-Title" varchar,
"Detail-de-Header" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-de-SubHeader" varchar,
"Detail-en-Title" varchar,
"Detail-en-Header" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-MetaDesc" varchar,
"Detail-en-IntroText" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-en-SubHeader" varchar,
"Detail-en-GetThereText" varchar,
"Detail-en-AdditionalText" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Header" varchar,
"Detail-fr-BaseText" varchar,
"Detail-fr-MetaDesc" varchar,
"Detail-fr-IntroText" varchar,
"Detail-fr-MetaTitle" varchar,
"Detail-fr-SubHeader" varchar,
"Detail-fr-GetThereText" varchar,
"Detail-fr-AdditionalText" varchar,
"Detail-it-Title" varchar,
"Detail-it-Header" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-MetaTitle" varchar,
"Detail-it-SubHeader" varchar,
"Detail-it-GetThereText" varchar,
"Detail-it-AdditionalText" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-Header" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-MetaDesc" varchar,
"Detail-nl-IntroText" varchar,
"Detail-nl-MetaTitle" varchar,
"Detail-nl-SubHeader" varchar,
"Detail-nl-GetThereText" varchar,
"Detail-nl-AdditionalText" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-Header" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-MetaDesc" varchar,
"Detail-pl-IntroText" varchar,
"Detail-pl-MetaTitle" varchar,
"Detail-pl-SubHeader" varchar,
"Detail-pl-GetThereText" varchar,
"Detail-pl-AdditionalText" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Header" varchar,
"Detail-ru-BaseText" varchar,
"Detail-ru-MetaDesc" varchar,
"Detail-ru-IntroText" varchar,
"Detail-ru-MetaTitle" varchar,
"Detail-ru-SubHeader" varchar,
"Detail-ru-GetThereText" varchar,
"Detail-ru-AdditionalText" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"DetailThemed-cs-Language" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Winter-Title" varchar,
"DetailThemed-cs-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-cs-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-cs-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-de-Language" varchar,
"DetailThemed-de-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-de-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-de-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-de-DetailsThemed-Winter-Title" varchar,
"DetailThemed-de-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-de-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-de-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-de-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-en-Language" varchar,
"DetailThemed-en-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-en-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-en-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-en-DetailsThemed-Winter-Title" varchar,
"DetailThemed-en-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-en-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-en-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-en-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-fr-Language" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Winter-Title" varchar,
"DetailThemed-fr-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-fr-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-fr-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-it-Language" varchar,
"DetailThemed-it-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-it-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-it-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-it-DetailsThemed-Winter-Title" varchar,
"DetailThemed-it-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-it-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-it-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-it-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-nl-Language" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Winter-Title" varchar,
"DetailThemed-nl-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-nl-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-nl-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-pl-Language" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Winter-Title" varchar,
"DetailThemed-pl-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-pl-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-pl-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-ru-Language" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Winter-Title" varchar,
"DetailThemed-ru-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-ru-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-ru-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar
);

ALTER TABLE "v_metaregionsopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_metaregionsopen_fn CASCADE;

CREATE FUNCTION v_metaregionsopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_metaregionsopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'VisibleInSearch' As bool) AS "VisibleInSearch",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'Header' As varchar) AS "Detail-cs-Header",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'MetaDesc' As varchar) AS "Detail-cs-MetaDesc",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'cs'->>'MetaTitle' As varchar) AS "Detail-cs-MetaTitle",
CAST(NEW."data"->'Detail'->'cs'->>'SubHeader' As varchar) AS "Detail-cs-SubHeader",
CAST(NEW."data"->'Detail'->'cs'->>'GetThereText' As varchar) AS "Detail-cs-GetThereText",
CAST(NEW."data"->'Detail'->'cs'->>'AdditionalText' As varchar) AS "Detail-cs-AdditionalText",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'MetaDesc' As varchar) AS "Detail-en-MetaDesc",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'AdditionalText' As varchar) AS "Detail-en-AdditionalText",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Header' As varchar) AS "Detail-fr-Header",
CAST(NEW."data"->'Detail'->'fr'->>'BaseText' As varchar) AS "Detail-fr-BaseText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaDesc' As varchar) AS "Detail-fr-MetaDesc",
CAST(NEW."data"->'Detail'->'fr'->>'IntroText' As varchar) AS "Detail-fr-IntroText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaTitle' As varchar) AS "Detail-fr-MetaTitle",
CAST(NEW."data"->'Detail'->'fr'->>'SubHeader' As varchar) AS "Detail-fr-SubHeader",
CAST(NEW."data"->'Detail'->'fr'->>'GetThereText' As varchar) AS "Detail-fr-GetThereText",
CAST(NEW."data"->'Detail'->'fr'->>'AdditionalText' As varchar) AS "Detail-fr-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'AdditionalText' As varchar) AS "Detail-it-AdditionalText",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Header' As varchar) AS "Detail-nl-Header",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'MetaDesc' As varchar) AS "Detail-nl-MetaDesc",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'MetaTitle' As varchar) AS "Detail-nl-MetaTitle",
CAST(NEW."data"->'Detail'->'nl'->>'SubHeader' As varchar) AS "Detail-nl-SubHeader",
CAST(NEW."data"->'Detail'->'nl'->>'GetThereText' As varchar) AS "Detail-nl-GetThereText",
CAST(NEW."data"->'Detail'->'nl'->>'AdditionalText' As varchar) AS "Detail-nl-AdditionalText",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Header' As varchar) AS "Detail-pl-Header",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'MetaDesc' As varchar) AS "Detail-pl-MetaDesc",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'MetaTitle' As varchar) AS "Detail-pl-MetaTitle",
CAST(NEW."data"->'Detail'->'pl'->>'SubHeader' As varchar) AS "Detail-pl-SubHeader",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'pl'->>'AdditionalText' As varchar) AS "Detail-pl-AdditionalText",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Header' As varchar) AS "Detail-ru-Header",
CAST(NEW."data"->'Detail'->'ru'->>'BaseText' As varchar) AS "Detail-ru-BaseText",
CAST(NEW."data"->'Detail'->'ru'->>'MetaDesc' As varchar) AS "Detail-ru-MetaDesc",
CAST(NEW."data"->'Detail'->'ru'->>'IntroText' As varchar) AS "Detail-ru-IntroText",
CAST(NEW."data"->'Detail'->'ru'->>'MetaTitle' As varchar) AS "Detail-ru-MetaTitle",
CAST(NEW."data"->'Detail'->'ru'->>'SubHeader' As varchar) AS "Detail-ru-SubHeader",
CAST(NEW."data"->'Detail'->'ru'->>'GetThereText' As varchar) AS "Detail-ru-GetThereText",
CAST(NEW."data"->'Detail'->'ru'->>'AdditionalText' As varchar) AS "Detail-ru-AdditionalText",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'DetailThemed'->'cs'->>'Language' As varchar) AS "DetailThemed-cs-Language",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-cs-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->>'Language' As varchar) AS "DetailThemed-de-Language",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-de-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->>'Language' As varchar) AS "DetailThemed-en-Language",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-en-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->>'Language' As varchar) AS "DetailThemed-fr-Language",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-fr-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->>'Language' As varchar) AS "DetailThemed-it-Language",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-it-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->>'Language' As varchar) AS "DetailThemed-nl-Language",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-nl-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->>'Language' As varchar) AS "DetailThemed-pl-Language",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-pl-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->>'Language' As varchar) AS "DetailThemed-ru-Language",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-ru-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregionsopen
    BEFORE INSERT
    ON metaregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregionsopen_fn();

ALTER TABLE metaregionsopen
    ENABLE ALWAYS TRIGGER t_v_metaregionsopen;



DROP TABLE IF EXISTS "v_metaregionsopen_RegionIds";

CREATE TABLE  "v_metaregionsopen_RegionIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_metaregionsopen_RegionIds_fn CASCADE;

CREATE FUNCTION v_metaregionsopen_RegionIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregionsopen_RegionIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'RegionIds') AS "data"
        WHERE NEW."data" -> 'RegionIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregionsopen_RegionIds
    BEFORE INSERT
    ON metaregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregionsopen_RegionIds_fn();

ALTER TABLE metaregionsopen
    ENABLE ALWAYS TRIGGER t_v_metaregionsopen_RegionIds;



DROP TABLE IF EXISTS "v_metaregionsopen_DistrictIds";

CREATE TABLE  "v_metaregionsopen_DistrictIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_metaregionsopen_DistrictIds_fn CASCADE;

CREATE FUNCTION v_metaregionsopen_DistrictIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregionsopen_DistrictIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'DistrictIds') AS "data"
        WHERE NEW."data" -> 'DistrictIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregionsopen_DistrictIds
    BEFORE INSERT
    ON metaregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregionsopen_DistrictIds_fn();

ALTER TABLE metaregionsopen
    ENABLE ALWAYS TRIGGER t_v_metaregionsopen_DistrictIds;



DROP TABLE IF EXISTS "v_metaregionsopen_HasLanguage";

CREATE TABLE  "v_metaregionsopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_metaregionsopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_metaregionsopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregionsopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregionsopen_HasLanguage
    BEFORE INSERT
    ON metaregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregionsopen_HasLanguage_fn();

ALTER TABLE metaregionsopen
    ENABLE ALWAYS TRIGGER t_v_metaregionsopen_HasLanguage;



DROP TABLE IF EXISTS "v_metaregionsopen_PublishedOn";

CREATE TABLE  "v_metaregionsopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_metaregionsopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_metaregionsopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregionsopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregionsopen_PublishedOn
    BEFORE INSERT
    ON metaregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregionsopen_PublishedOn_fn();

ALTER TABLE metaregionsopen
    ENABLE ALWAYS TRIGGER t_v_metaregionsopen_PublishedOn;



DROP TABLE IF EXISTS "v_metaregionsopen_TourismvereinIds";

CREATE TABLE  "v_metaregionsopen_TourismvereinIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_metaregionsopen_TourismvereinIds_fn CASCADE;

CREATE FUNCTION v_metaregionsopen_TourismvereinIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregionsopen_TourismvereinIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'TourismvereinIds') AS "data"
        WHERE NEW."data" -> 'TourismvereinIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregionsopen_TourismvereinIds
    BEFORE INSERT
    ON metaregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregionsopen_TourismvereinIds_fn();

ALTER TABLE metaregionsopen
    ENABLE ALWAYS TRIGGER t_v_metaregionsopen_TourismvereinIds;



DROP TABLE IF EXISTS "v_metaregionsopen_Regions";

CREATE TABLE "v_metaregionsopen_Regions" (
"metaregionsopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_metaregionsopen_Regions_fn CASCADE;

CREATE FUNCTION v_metaregionsopen_Regions_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregionsopen_Regions"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Regions') AS "data"
        WHERE NEW."data" -> 'Regions' != 'null')
    SELECT "Id" AS "metaregionsopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregionsopen_Regions
    BEFORE INSERT
    ON metaregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregionsopen_Regions_fn();

ALTER TABLE metaregionsopen
    ENABLE ALWAYS TRIGGER t_v_metaregionsopen_Regions;



DROP TABLE IF EXISTS "v_metaregionsopen_Districts";

CREATE TABLE "v_metaregionsopen_Districts" (
"metaregionsopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_metaregionsopen_Districts_fn CASCADE;

CREATE FUNCTION v_metaregionsopen_Districts_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregionsopen_Districts"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Districts') AS "data"
        WHERE NEW."data" -> 'Districts' != 'null')
    SELECT "Id" AS "metaregionsopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregionsopen_Districts
    BEFORE INSERT
    ON metaregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregionsopen_Districts_fn();

ALTER TABLE metaregionsopen
    ENABLE ALWAYS TRIGGER t_v_metaregionsopen_Districts;



DROP TABLE IF EXISTS "v_metaregionsopen_TourismAssociations";

CREATE TABLE "v_metaregionsopen_TourismAssociations" (
"metaregionsopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_metaregionsopen_TourismAssociations_fn CASCADE;

CREATE FUNCTION v_metaregionsopen_TourismAssociations_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_metaregionsopen_TourismAssociations"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'TourismAssociations') AS "data"
        WHERE NEW."data" -> 'TourismAssociations' != 'null')
    SELECT "Id" AS "metaregionsopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_metaregionsopen_TourismAssociations
    BEFORE INSERT
    ON metaregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_metaregionsopen_TourismAssociations_fn();

ALTER TABLE metaregionsopen
    ENABLE ALWAYS TRIGGER t_v_metaregionsopen_TourismAssociations;



DROP TABLE IF EXISTS "v_municipalities";

CREATE TABLE "v_municipalities" (
"Id" varchar,
"Plz" varchar,
"Self" varchar,
"Active" bool,
"SiagId" varchar,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"CustomId" varchar,
"Latitude" float,
"RegionId" varchar,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"Inhabitants" integer,
"IstatNumber" varchar,
"TourismvereinId" varchar,
"VisibleInSearch" bool,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-Language" varchar,
"Detail-de-Title" varchar,
"Detail-de-Language" varchar,
"Detail-en-Title" varchar,
"Detail-en-Language" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Language" varchar,
"Detail-it-Title" varchar,
"Detail-it-Language" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-Language" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-Language" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Language" varchar,
"Region-Id" varchar,
"Region-Self" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"Tourismassociation-Id" varchar,
"Tourismassociation-Self" varchar,
"Detail-pl-AdditionalText" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-IntroText" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-IntroText" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-IntroText" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-IntroText" varchar
);

ALTER TABLE "v_municipalities" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_municipalities_fn CASCADE;

CREATE FUNCTION v_municipalities_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_municipalities
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Plz' As varchar) AS "Plz",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'SiagId' As varchar) AS "SiagId",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'CustomId' As varchar) AS "CustomId",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'RegionId' As varchar) AS "RegionId",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'Inhabitants' As integer) AS "Inhabitants",
CAST(NEW."data"->>'IstatNumber' As varchar) AS "IstatNumber",
CAST(NEW."data"->>'TourismvereinId' As varchar) AS "TourismvereinId",
CAST(NEW."data"->>'VisibleInSearch' As bool) AS "VisibleInSearch",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Language' As varchar) AS "Detail-fr-Language",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Language' As varchar) AS "Detail-ru-Language",
CAST(NEW."data"->'Region'->>'Id' As varchar) AS "Region-Id",
CAST(NEW."data"->'Region'->>'Self' As varchar) AS "Region-Self",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'Tourismassociation'->>'Id' As varchar) AS "Tourismassociation-Id",
CAST(NEW."data"->'Tourismassociation'->>'Self' As varchar) AS "Tourismassociation-Self",
CAST(NEW."data"->'Detail'->'pl'->>'AdditionalText' As varchar) AS "Detail-pl-AdditionalText",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_municipalities
    BEFORE INSERT
    ON municipalities
    FOR EACH ROW
    EXECUTE PROCEDURE v_municipalities_fn();

ALTER TABLE municipalities
    ENABLE ALWAYS TRIGGER t_v_municipalities;



DROP TABLE IF EXISTS "v_municipalities_HasLanguage";

CREATE TABLE  "v_municipalities_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_municipalities_HasLanguage_fn CASCADE;

CREATE FUNCTION v_municipalities_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_municipalities_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_municipalities_HasLanguage
    BEFORE INSERT
    ON municipalities
    FOR EACH ROW
    EXECUTE PROCEDURE v_municipalities_HasLanguage_fn();

ALTER TABLE municipalities
    ENABLE ALWAYS TRIGGER t_v_municipalities_HasLanguage;



DROP TABLE IF EXISTS "v_municipalities_PublishedOn";

CREATE TABLE  "v_municipalities_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_municipalities_PublishedOn_fn CASCADE;

CREATE FUNCTION v_municipalities_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_municipalities_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_municipalities_PublishedOn
    BEFORE INSERT
    ON municipalities
    FOR EACH ROW
    EXECUTE PROCEDURE v_municipalities_PublishedOn_fn();

ALTER TABLE municipalities
    ENABLE ALWAYS TRIGGER t_v_municipalities_PublishedOn;



DROP TABLE IF EXISTS "v_municipalities_Webcam";

CREATE TABLE "v_municipalities_Webcam" (
"municipalities_Id" varchar,
"Source" varchar,
"WebcamId" varchar,
"Webcamurl" varchar,
"GpsInfo-Gpstype" varchar,
"GpsInfo-Latitude" float,
"GpsInfo-Longitude" float,
"GpsInfo-AltitudeUnitofMeasure" varchar,
"Webcamname-cs" varchar,
"Webcamname-de" varchar,
"Webcamname-en" varchar,
"Webcamname-fr" varchar,
"Webcamname-it" varchar,
"Webcamname-nl" varchar,
"Webcamname-pl" varchar,
"Webcamname-ru" varchar,
"Streamurl" varchar,
"ListPosition" integer,
"GpsInfo-Altitude" float
);

DROP FUNCTION IF EXISTS v_municipalities_Webcam_fn CASCADE;

CREATE FUNCTION v_municipalities_Webcam_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_municipalities_Webcam"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Webcam') AS "data"
        WHERE NEW."data" -> 'Webcam' != 'null')
    SELECT "Id" AS "municipalities_Id", CAST("data"->>'Source' As varchar) AS "Source",
CAST("data"->>'WebcamId' As varchar) AS "WebcamId",
CAST("data"->>'Webcamurl' As varchar) AS "Webcamurl",
CAST("data"->'GpsInfo'->>'Gpstype' As varchar) AS "GpsInfo-Gpstype",
CAST("data"->'GpsInfo'->>'Latitude' As float) AS "GpsInfo-Latitude",
CAST("data"->'GpsInfo'->>'Longitude' As float) AS "GpsInfo-Longitude",
CAST("data"->'GpsInfo'->>'AltitudeUnitofMeasure' As varchar) AS "GpsInfo-AltitudeUnitofMeasure",
CAST("data"->'Webcamname'->>'cs' As varchar) AS "Webcamname-cs",
CAST("data"->'Webcamname'->>'de' As varchar) AS "Webcamname-de",
CAST("data"->'Webcamname'->>'en' As varchar) AS "Webcamname-en",
CAST("data"->'Webcamname'->>'fr' As varchar) AS "Webcamname-fr",
CAST("data"->'Webcamname'->>'it' As varchar) AS "Webcamname-it",
CAST("data"->'Webcamname'->>'nl' As varchar) AS "Webcamname-nl",
CAST("data"->'Webcamname'->>'pl' As varchar) AS "Webcamname-pl",
CAST("data"->'Webcamname'->>'ru' As varchar) AS "Webcamname-ru",
CAST("data"->>'Streamurl' As varchar) AS "Streamurl",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'GpsInfo'->>'Altitude' As float) AS "GpsInfo-Altitude"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_municipalities_Webcam
    BEFORE INSERT
    ON municipalities
    FOR EACH ROW
    EXECUTE PROCEDURE v_municipalities_Webcam_fn();

ALTER TABLE municipalities
    ENABLE ALWAYS TRIGGER t_v_municipalities_Webcam;



DROP TABLE IF EXISTS "v_municipalitiesopen";

CREATE TABLE "v_municipalitiesopen" (
"Id" varchar,
"Plz" varchar,
"Self" varchar,
"Active" bool,
"SiagId" varchar,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"CustomId" varchar,
"Latitude" float,
"RegionId" varchar,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"Inhabitants" integer,
"IstatNumber" varchar,
"TourismvereinId" varchar,
"VisibleInSearch" bool,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-Language" varchar,
"Detail-de-Title" varchar,
"Detail-de-Language" varchar,
"Detail-en-Title" varchar,
"Detail-en-Language" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Language" varchar,
"Detail-it-Title" varchar,
"Detail-it-Language" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-Language" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-Language" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Language" varchar,
"Region-Id" varchar,
"Region-Self" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"Tourismassociation-Id" varchar,
"Tourismassociation-Self" varchar,
"Detail-pl-AdditionalText" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-IntroText" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-IntroText" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-IntroText" varchar
);

ALTER TABLE "v_municipalitiesopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_municipalitiesopen_fn CASCADE;

CREATE FUNCTION v_municipalitiesopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_municipalitiesopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Plz' As varchar) AS "Plz",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'SiagId' As varchar) AS "SiagId",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'CustomId' As varchar) AS "CustomId",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'RegionId' As varchar) AS "RegionId",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'Inhabitants' As integer) AS "Inhabitants",
CAST(NEW."data"->>'IstatNumber' As varchar) AS "IstatNumber",
CAST(NEW."data"->>'TourismvereinId' As varchar) AS "TourismvereinId",
CAST(NEW."data"->>'VisibleInSearch' As bool) AS "VisibleInSearch",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Language' As varchar) AS "Detail-fr-Language",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Language' As varchar) AS "Detail-ru-Language",
CAST(NEW."data"->'Region'->>'Id' As varchar) AS "Region-Id",
CAST(NEW."data"->'Region'->>'Self' As varchar) AS "Region-Self",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'Tourismassociation'->>'Id' As varchar) AS "Tourismassociation-Id",
CAST(NEW."data"->'Tourismassociation'->>'Self' As varchar) AS "Tourismassociation-Self",
CAST(NEW."data"->'Detail'->'pl'->>'AdditionalText' As varchar) AS "Detail-pl-AdditionalText",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_municipalitiesopen
    BEFORE INSERT
    ON municipalitiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_municipalitiesopen_fn();

ALTER TABLE municipalitiesopen
    ENABLE ALWAYS TRIGGER t_v_municipalitiesopen;



DROP TABLE IF EXISTS "v_municipalitiesopen_HasLanguage";

CREATE TABLE  "v_municipalitiesopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_municipalitiesopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_municipalitiesopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_municipalitiesopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_municipalitiesopen_HasLanguage
    BEFORE INSERT
    ON municipalitiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_municipalitiesopen_HasLanguage_fn();

ALTER TABLE municipalitiesopen
    ENABLE ALWAYS TRIGGER t_v_municipalitiesopen_HasLanguage;



DROP TABLE IF EXISTS "v_municipalitiesopen_PublishedOn";

CREATE TABLE  "v_municipalitiesopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_municipalitiesopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_municipalitiesopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_municipalitiesopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_municipalitiesopen_PublishedOn
    BEFORE INSERT
    ON municipalitiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_municipalitiesopen_PublishedOn_fn();

ALTER TABLE municipalitiesopen
    ENABLE ALWAYS TRIGGER t_v_municipalitiesopen_PublishedOn;



DROP TABLE IF EXISTS "v_municipalitiesopen_Webcam";

CREATE TABLE "v_municipalitiesopen_Webcam" (
"municipalitiesopen_Id" varchar,
"Source" varchar,
"WebcamId" varchar,
"Webcamurl" varchar,
"GpsInfo-Gpstype" varchar,
"GpsInfo-Latitude" float,
"GpsInfo-Longitude" float,
"GpsInfo-AltitudeUnitofMeasure" varchar,
"Webcamname-cs" varchar,
"Webcamname-de" varchar,
"Webcamname-en" varchar,
"Webcamname-fr" varchar,
"Webcamname-it" varchar,
"Webcamname-nl" varchar,
"Webcamname-pl" varchar,
"Webcamname-ru" varchar,
"Streamurl" varchar,
"ListPosition" integer
);

DROP FUNCTION IF EXISTS v_municipalitiesopen_Webcam_fn CASCADE;

CREATE FUNCTION v_municipalitiesopen_Webcam_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_municipalitiesopen_Webcam"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Webcam') AS "data"
        WHERE NEW."data" -> 'Webcam' != 'null')
    SELECT "Id" AS "municipalitiesopen_Id", CAST("data"->>'Source' As varchar) AS "Source",
CAST("data"->>'WebcamId' As varchar) AS "WebcamId",
CAST("data"->>'Webcamurl' As varchar) AS "Webcamurl",
CAST("data"->'GpsInfo'->>'Gpstype' As varchar) AS "GpsInfo-Gpstype",
CAST("data"->'GpsInfo'->>'Latitude' As float) AS "GpsInfo-Latitude",
CAST("data"->'GpsInfo'->>'Longitude' As float) AS "GpsInfo-Longitude",
CAST("data"->'GpsInfo'->>'AltitudeUnitofMeasure' As varchar) AS "GpsInfo-AltitudeUnitofMeasure",
CAST("data"->'Webcamname'->>'cs' As varchar) AS "Webcamname-cs",
CAST("data"->'Webcamname'->>'de' As varchar) AS "Webcamname-de",
CAST("data"->'Webcamname'->>'en' As varchar) AS "Webcamname-en",
CAST("data"->'Webcamname'->>'fr' As varchar) AS "Webcamname-fr",
CAST("data"->'Webcamname'->>'it' As varchar) AS "Webcamname-it",
CAST("data"->'Webcamname'->>'nl' As varchar) AS "Webcamname-nl",
CAST("data"->'Webcamname'->>'pl' As varchar) AS "Webcamname-pl",
CAST("data"->'Webcamname'->>'ru' As varchar) AS "Webcamname-ru",
CAST("data"->>'Streamurl' As varchar) AS "Streamurl",
CAST("data"->>'ListPosition' As integer) AS "ListPosition"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_municipalitiesopen_Webcam
    BEFORE INSERT
    ON municipalitiesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_municipalitiesopen_Webcam_fn();

ALTER TABLE municipalitiesopen
    ENABLE ALWAYS TRIGGER t_v_municipalitiesopen_Webcam;



DROP TABLE IF EXISTS "v_pois";

CREATE TABLE "v_pois" (
"Id" varchar,
"Self" varchar,
"Type" varchar,
"Active" bool,
"IsOpen" bool,
"Source" varchar,
"PoiType" varchar,
"SubType" varchar,
"FeetClimb" bool,
"Highlight" bool,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"HasRentals" bool,
"IsPrepared" bool,
"LastChange" varchar,
"FirstImport" varchar,
"IsWithLigth" bool,
"RunToValley" bool,
"AltitudeSumUp" float,
"LiftAvailable" bool,
"DistanceLength" float,
"AltitudeSumDown" float,
"HasFreeEntrance" bool,
"DistanceDuration" float,
"AltitudeDifference" float,
"AltitudeLowestPoint" float,
"AltitudeHighestPoint" float,
"TourismorganizationId" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-de-Title" varchar,
"Detail-de-Header" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-AdditionalText" varchar,
"Detail-en-Title" varchar,
"Detail-en-Header" varchar,
"Detail-en-Language" varchar,
"Detail-en-IntroText" varchar,
"Detail-en-AdditionalText" varchar,
"Detail-it-Title" varchar,
"Detail-it-Header" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-Language" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-AdditionalText" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-Surname" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-Faxnumber" varchar,
"ContactInfos-de-Givenname" varchar,
"ContactInfos-de-NamePrefix" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-Surname" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-Faxnumber" varchar,
"ContactInfos-en-Givenname" varchar,
"ContactInfos-en-NamePrefix" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-Surname" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-Faxnumber" varchar,
"ContactInfos-it-Givenname" varchar,
"ContactInfos-it-NamePrefix" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-AreaInfo-Id" varchar,
"LocationInfo-AreaInfo-Self" varchar,
"LocationInfo-AreaInfo-Name-cs" varchar,
"LocationInfo-AreaInfo-Name-de" varchar,
"LocationInfo-AreaInfo-Name-en" varchar,
"LocationInfo-AreaInfo-Name-fr" varchar,
"LocationInfo-AreaInfo-Name-it" varchar,
"LocationInfo-AreaInfo-Name-nl" varchar,
"LocationInfo-AreaInfo-Name-pl" varchar,
"LocationInfo-AreaInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"LocationInfo-DistrictInfo-Id" varchar,
"LocationInfo-DistrictInfo-Self" varchar,
"LocationInfo-DistrictInfo-Name-cs" varchar,
"LocationInfo-DistrictInfo-Name-de" varchar,
"LocationInfo-DistrictInfo-Name-en" varchar,
"LocationInfo-DistrictInfo-Name-fr" varchar,
"LocationInfo-DistrictInfo-Name-it" varchar,
"LocationInfo-DistrictInfo-Name-nl" varchar,
"LocationInfo-DistrictInfo-Name-pl" varchar,
"LocationInfo-DistrictInfo-Name-ru" varchar,
"LocationInfo-MunicipalityInfo-Id" varchar,
"LocationInfo-MunicipalityInfo-Self" varchar,
"LocationInfo-MunicipalityInfo-Name-cs" varchar,
"LocationInfo-MunicipalityInfo-Name-de" varchar,
"LocationInfo-MunicipalityInfo-Name-en" varchar,
"LocationInfo-MunicipalityInfo-Name-fr" varchar,
"LocationInfo-MunicipalityInfo-Name-it" varchar,
"LocationInfo-MunicipalityInfo-Name-nl" varchar,
"LocationInfo-MunicipalityInfo-Name-pl" varchar,
"LocationInfo-MunicipalityInfo-Name-ru" varchar,
"AdditionalPoiInfos-de-PoiType" varchar,
"AdditionalPoiInfos-de-SubType" varchar,
"AdditionalPoiInfos-de-Language" varchar,
"AdditionalPoiInfos-de-MainType" varchar,
"AdditionalPoiInfos-en-PoiType" varchar,
"AdditionalPoiInfos-en-SubType" varchar,
"AdditionalPoiInfos-en-Language" varchar,
"AdditionalPoiInfos-en-MainType" varchar,
"AdditionalPoiInfos-it-PoiType" varchar,
"AdditionalPoiInfos-it-SubType" varchar,
"AdditionalPoiInfos-it-Language" varchar,
"AdditionalPoiInfos-it-MainType" varchar,
"Detail-en-BaseText" varchar,
"Detail-de-GetThereText" varchar,
"Detail-en-GetThereText" varchar,
"Detail-it-GetThereText" varchar,
"AdditionalPoiInfos-de-Novelty" varchar,
"AdditionalPoiInfos-en-Novelty" varchar,
"AdditionalPoiInfos-it-Novelty" varchar,
"SmgId" varchar
);

ALTER TABLE "v_pois" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_pois_fn CASCADE;

CREATE FUNCTION v_pois_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_pois
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'IsOpen' As bool) AS "IsOpen",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'PoiType' As varchar) AS "PoiType",
CAST(NEW."data"->>'SubType' As varchar) AS "SubType",
CAST(NEW."data"->>'FeetClimb' As bool) AS "FeetClimb",
CAST(NEW."data"->>'Highlight' As bool) AS "Highlight",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'HasRentals' As bool) AS "HasRentals",
CAST(NEW."data"->>'IsPrepared' As bool) AS "IsPrepared",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'IsWithLigth' As bool) AS "IsWithLigth",
CAST(NEW."data"->>'RunToValley' As bool) AS "RunToValley",
CAST(NEW."data"->>'AltitudeSumUp' As float) AS "AltitudeSumUp",
CAST(NEW."data"->>'LiftAvailable' As bool) AS "LiftAvailable",
CAST(NEW."data"->>'DistanceLength' As float) AS "DistanceLength",
CAST(NEW."data"->>'AltitudeSumDown' As float) AS "AltitudeSumDown",
CAST(NEW."data"->>'HasFreeEntrance' As bool) AS "HasFreeEntrance",
CAST(NEW."data"->>'DistanceDuration' As float) AS "DistanceDuration",
CAST(NEW."data"->>'AltitudeDifference' As float) AS "AltitudeDifference",
CAST(NEW."data"->>'AltitudeLowestPoint' As float) AS "AltitudeLowestPoint",
CAST(NEW."data"->>'AltitudeHighestPoint' As float) AS "AltitudeHighestPoint",
CAST(NEW."data"->>'TourismorganizationId' As varchar) AS "TourismorganizationId",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'AdditionalText' As varchar) AS "Detail-de-AdditionalText",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'AdditionalText' As varchar) AS "Detail-en-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'AdditionalText' As varchar) AS "Detail-it-AdditionalText",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'Surname' As varchar) AS "ContactInfos-de-Surname",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'Faxnumber' As varchar) AS "ContactInfos-de-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'Givenname' As varchar) AS "ContactInfos-de-Givenname",
CAST(NEW."data"->'ContactInfos'->'de'->>'NamePrefix' As varchar) AS "ContactInfos-de-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'Surname' As varchar) AS "ContactInfos-en-Surname",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Faxnumber' As varchar) AS "ContactInfos-en-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Givenname' As varchar) AS "ContactInfos-en-Givenname",
CAST(NEW."data"->'ContactInfos'->'en'->>'NamePrefix' As varchar) AS "ContactInfos-en-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'Surname' As varchar) AS "ContactInfos-it-Surname",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'Faxnumber' As varchar) AS "ContactInfos-it-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Givenname' As varchar) AS "ContactInfos-it-Givenname",
CAST(NEW."data"->'ContactInfos'->'it'->>'NamePrefix' As varchar) AS "ContactInfos-it-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->>'Id' As varchar) AS "LocationInfo-AreaInfo-Id",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->>'Self' As varchar) AS "LocationInfo-AreaInfo-Self",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-AreaInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'de' As varchar) AS "LocationInfo-AreaInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'en' As varchar) AS "LocationInfo-AreaInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-AreaInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'it' As varchar) AS "LocationInfo-AreaInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-AreaInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-AreaInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-AreaInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Id' As varchar) AS "LocationInfo-DistrictInfo-Id",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Self' As varchar) AS "LocationInfo-DistrictInfo-Self",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-DistrictInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'de' As varchar) AS "LocationInfo-DistrictInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'en' As varchar) AS "LocationInfo-DistrictInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-DistrictInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'it' As varchar) AS "LocationInfo-DistrictInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-DistrictInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-DistrictInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-DistrictInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Id' As varchar) AS "LocationInfo-MunicipalityInfo-Id",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Self' As varchar) AS "LocationInfo-MunicipalityInfo-Self",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-MunicipalityInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'de' As varchar) AS "LocationInfo-MunicipalityInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'en' As varchar) AS "LocationInfo-MunicipalityInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-MunicipalityInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'it' As varchar) AS "LocationInfo-MunicipalityInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-MunicipalityInfo-Name-ru",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'PoiType' As varchar) AS "AdditionalPoiInfos-de-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'SubType' As varchar) AS "AdditionalPoiInfos-de-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'Language' As varchar) AS "AdditionalPoiInfos-de-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'MainType' As varchar) AS "AdditionalPoiInfos-de-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'PoiType' As varchar) AS "AdditionalPoiInfos-en-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'SubType' As varchar) AS "AdditionalPoiInfos-en-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'Language' As varchar) AS "AdditionalPoiInfos-en-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'MainType' As varchar) AS "AdditionalPoiInfos-en-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'PoiType' As varchar) AS "AdditionalPoiInfos-it-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'SubType' As varchar) AS "AdditionalPoiInfos-it-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'Language' As varchar) AS "AdditionalPoiInfos-it-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'MainType' As varchar) AS "AdditionalPoiInfos-it-MainType",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'Novelty' As varchar) AS "AdditionalPoiInfos-de-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'Novelty' As varchar) AS "AdditionalPoiInfos-en-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'Novelty' As varchar) AS "AdditionalPoiInfos-it-Novelty",
CAST(NEW."data"->>'SmgId' As varchar) AS "SmgId";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois;



DROP TABLE IF EXISTS "v_pois_AreaId";

CREATE TABLE  "v_pois_AreaId" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_pois_AreaId_fn CASCADE;

CREATE FUNCTION v_pois_AreaId_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_pois_AreaId"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'AreaId') AS "data"
        WHERE NEW."data" -> 'AreaId' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois_AreaId
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_AreaId_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois_AreaId;



DROP TABLE IF EXISTS "v_pois_AreaIds";

CREATE TABLE  "v_pois_AreaIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_pois_AreaIds_fn CASCADE;

CREATE FUNCTION v_pois_AreaIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_pois_AreaIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'AreaIds') AS "data"
        WHERE NEW."data" -> 'AreaIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois_AreaIds
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_AreaIds_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois_AreaIds;



DROP TABLE IF EXISTS "v_pois_SmgTags";

CREATE TABLE  "v_pois_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_pois_SmgTags_fn CASCADE;

CREATE FUNCTION v_pois_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_pois_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois_SmgTags
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_SmgTags_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois_SmgTags;



DROP TABLE IF EXISTS "v_pois_HasLanguage";

CREATE TABLE  "v_pois_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_pois_HasLanguage_fn CASCADE;

CREATE FUNCTION v_pois_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_pois_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois_HasLanguage
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_HasLanguage_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois_HasLanguage;



DROP TABLE IF EXISTS "v_pois_Areas";

CREATE TABLE "v_pois_Areas" (
"pois_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_pois_Areas_fn CASCADE;

CREATE FUNCTION v_pois_Areas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_pois_Areas"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Areas') AS "data"
        WHERE NEW."data" -> 'Areas' != 'null')
    SELECT "Id" AS "pois_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois_Areas
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_Areas_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois_Areas;



DROP TABLE IF EXISTS "v_pois_GpsInfo";

CREATE TABLE "v_pois_GpsInfo" (
"pois_Id" varchar,
"Gpstype" varchar,
"Altitude" float,
"Latitude" float,
"Longitude" float,
"AltitudeUnitofMeasure" varchar
);

DROP FUNCTION IF EXISTS v_pois_GpsInfo_fn CASCADE;

CREATE FUNCTION v_pois_GpsInfo_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_pois_GpsInfo"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'GpsInfo') AS "data"
        WHERE NEW."data" -> 'GpsInfo' != 'null')
    SELECT "Id" AS "pois_Id", CAST("data"->>'Gpstype' As varchar) AS "Gpstype",
CAST("data"->>'Altitude' As float) AS "Altitude",
CAST("data"->>'Latitude' As float) AS "Latitude",
CAST("data"->>'Longitude' As float) AS "Longitude",
CAST("data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois_GpsInfo
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_GpsInfo_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois_GpsInfo;



DROP TABLE IF EXISTS "v_pois_LTSTags";

CREATE TABLE "v_pois_LTSTags" (
"pois_Id" varchar,
"Id" varchar,
"Self" varchar,
"Level" integer,
"TagName-de" varchar,
"TagName-en" varchar,
"TagName-it" varchar
);

DROP FUNCTION IF EXISTS v_pois_LTSTags_fn CASCADE;

CREATE FUNCTION v_pois_LTSTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_pois_LTSTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'LTSTags') AS "data"
        WHERE NEW."data" -> 'LTSTags' != 'null')
    SELECT "Id" AS "pois_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Level' As integer) AS "Level",
CAST("data"->'TagName'->>'de' As varchar) AS "TagName-de",
CAST("data"->'TagName'->>'en' As varchar) AS "TagName-en",
CAST("data"->'TagName'->>'it' As varchar) AS "TagName-it"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois_LTSTags
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_LTSTags_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois_LTSTags;



DROP TABLE IF EXISTS "v_pois_ODHTags";

CREATE TABLE "v_pois_ODHTags" (
"pois_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_pois_ODHTags_fn CASCADE;

CREATE FUNCTION v_pois_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_pois_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "pois_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois_ODHTags
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_ODHTags_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois_ODHTags;



DROP TABLE IF EXISTS "v_pois_PoiTypes";

CREATE TABLE "v_pois_PoiTypes" (
"pois_Id" varchar,
"Id" varchar,
"Self" varchar,
"Type" varchar
);

DROP FUNCTION IF EXISTS v_pois_PoiTypes_fn CASCADE;

CREATE FUNCTION v_pois_PoiTypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_pois_PoiTypes"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'PoiTypes') AS "data"
        WHERE NEW."data" -> 'PoiTypes' != 'null')
    SELECT "Id" AS "pois_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Type' As varchar) AS "Type"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois_PoiTypes
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_PoiTypes_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois_PoiTypes;



DROP TABLE IF EXISTS "v_pois_ImageGallery";

CREATE TABLE "v_pois_ImageGallery" (
"pois_Id" varchar,
"Width" integer,
"Height" integer,
"ImageUrl" varchar,
"ImageName" varchar,
"ImageSource" varchar,
"IsInGallery" bool,
"ListPosition" integer,
"ImageDesc-de" varchar,
"ImageDesc-en" varchar,
"ImageDesc-it" varchar,
"CopyRight" varchar
);

DROP FUNCTION IF EXISTS v_pois_ImageGallery_fn CASCADE;

CREATE FUNCTION v_pois_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_pois_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "pois_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'ImageName' As varchar) AS "ImageName",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'ImageDesc'->>'de' As varchar) AS "ImageDesc-de",
CAST("data"->'ImageDesc'->>'en' As varchar) AS "ImageDesc-en",
CAST("data"->'ImageDesc'->>'it' As varchar) AS "ImageDesc-it",
CAST("data"->>'CopyRight' As varchar) AS "CopyRight"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois_ImageGallery
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_ImageGallery_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois_ImageGallery;



DROP TABLE IF EXISTS "v_pois_OperationSchedule";

CREATE TABLE "v_pois_OperationSchedule" (
"pois_Id" varchar,
"Stop" varchar,
"Type" varchar,
"Start" varchar,
"OperationscheduleName-de" varchar
);

DROP FUNCTION IF EXISTS v_pois_OperationSchedule_fn CASCADE;

CREATE FUNCTION v_pois_OperationSchedule_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_pois_OperationSchedule"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'OperationSchedule') AS "data"
        WHERE NEW."data" -> 'OperationSchedule' != 'null')
    SELECT "Id" AS "pois_Id", CAST("data"->>'Stop' As varchar) AS "Stop",
CAST("data"->>'Type' As varchar) AS "Type",
CAST("data"->>'Start' As varchar) AS "Start",
CAST("data"->'OperationscheduleName'->>'de' As varchar) AS "OperationscheduleName-de"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois_OperationSchedule
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_OperationSchedule_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois_OperationSchedule;



DROP TABLE IF EXISTS "v_pois_OperationSchedule_OperationScheduleTime";

CREATE TABLE "v_pois_OperationSchedule_OperationScheduleTime" (
"pois_Id" varchar,
"End" varchar,
"Start" varchar,
"State" integer,
"Friday" bool,
"Monday" bool,
"Sunday" bool,
"Tuesday" bool,
"Saturday" bool,
"Thursday" bool,
"Timecode" integer,
"Thuresday" bool,
"Wednesday" bool
);

DROP FUNCTION IF EXISTS v_pois_OperationSchedule_OperationScheduleTime_fn CASCADE;

CREATE FUNCTION v_pois_OperationSchedule_OperationScheduleTime_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_pois_OperationSchedule_OperationScheduleTime"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'OperationSchedule_OperationScheduleTime') AS "data"
        WHERE NEW."data" -> 'OperationSchedule_OperationScheduleTime' != 'null')
    SELECT "Id" AS "pois_Id", CAST("data"->>'End' As varchar) AS "End",
CAST("data"->>'Start' As varchar) AS "Start",
CAST("data"->>'State' As integer) AS "State",
CAST("data"->>'Friday' As bool) AS "Friday",
CAST("data"->>'Monday' As bool) AS "Monday",
CAST("data"->>'Sunday' As bool) AS "Sunday",
CAST("data"->>'Tuesday' As bool) AS "Tuesday",
CAST("data"->>'Saturday' As bool) AS "Saturday",
CAST("data"->>'Thursday' As bool) AS "Thursday",
CAST("data"->>'Timecode' As integer) AS "Timecode",
CAST("data"->>'Thuresday' As bool) AS "Thuresday",
CAST("data"->>'Wednesday' As bool) AS "Wednesday"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_pois_OperationSchedule_OperationScheduleTime
    BEFORE INSERT
    ON pois
    FOR EACH ROW
    EXECUTE PROCEDURE v_pois_OperationSchedule_OperationScheduleTime_fn();

ALTER TABLE pois
    ENABLE ALWAYS TRIGGER t_v_pois_OperationSchedule_OperationScheduleTime;



DROP TABLE IF EXISTS "v_poisopen";

CREATE TABLE "v_poisopen" (
"Id" varchar,
"Self" varchar,
"Type" varchar,
"Active" bool,
"PoiType" varchar,
"SubType" varchar,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"FirstImport" varchar,
"HasFreeEntrance" bool,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-de-Title" varchar,
"Detail-de-Language" varchar,
"Detail-en-Title" varchar,
"Detail-en-Language" varchar,
"Detail-it-Title" varchar,
"Detail-it-Language" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-Language" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"AdditionalPoiInfos-de-PoiType" varchar,
"AdditionalPoiInfos-de-SubType" varchar,
"AdditionalPoiInfos-de-Language" varchar,
"AdditionalPoiInfos-de-MainType" varchar,
"AdditionalPoiInfos-en-PoiType" varchar,
"AdditionalPoiInfos-en-SubType" varchar,
"AdditionalPoiInfos-en-Language" varchar,
"AdditionalPoiInfos-en-MainType" varchar,
"AdditionalPoiInfos-it-PoiType" varchar,
"AdditionalPoiInfos-it-SubType" varchar,
"AdditionalPoiInfos-it-Language" varchar,
"AdditionalPoiInfos-it-MainType" varchar,
"AdditionalPoiInfos-de-Novelty" varchar,
"AdditionalPoiInfos-en-Novelty" varchar,
"AdditionalPoiInfos-it-Novelty" varchar
);

ALTER TABLE "v_poisopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_poisopen_fn CASCADE;

CREATE FUNCTION v_poisopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_poisopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'PoiType' As varchar) AS "PoiType",
CAST(NEW."data"->>'SubType' As varchar) AS "SubType",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'HasFreeEntrance' As bool) AS "HasFreeEntrance",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'PoiType' As varchar) AS "AdditionalPoiInfos-de-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'SubType' As varchar) AS "AdditionalPoiInfos-de-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'Language' As varchar) AS "AdditionalPoiInfos-de-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'MainType' As varchar) AS "AdditionalPoiInfos-de-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'PoiType' As varchar) AS "AdditionalPoiInfos-en-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'SubType' As varchar) AS "AdditionalPoiInfos-en-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'Language' As varchar) AS "AdditionalPoiInfos-en-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'MainType' As varchar) AS "AdditionalPoiInfos-en-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'PoiType' As varchar) AS "AdditionalPoiInfos-it-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'SubType' As varchar) AS "AdditionalPoiInfos-it-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'Language' As varchar) AS "AdditionalPoiInfos-it-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'MainType' As varchar) AS "AdditionalPoiInfos-it-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'Novelty' As varchar) AS "AdditionalPoiInfos-de-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'Novelty' As varchar) AS "AdditionalPoiInfos-en-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'Novelty' As varchar) AS "AdditionalPoiInfos-it-Novelty";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_poisopen
    BEFORE INSERT
    ON poisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_poisopen_fn();

ALTER TABLE poisopen
    ENABLE ALWAYS TRIGGER t_v_poisopen;



DROP TABLE IF EXISTS "v_poisopen_SmgTags";

CREATE TABLE  "v_poisopen_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_poisopen_SmgTags_fn CASCADE;

CREATE FUNCTION v_poisopen_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_poisopen_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_poisopen_SmgTags
    BEFORE INSERT
    ON poisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_poisopen_SmgTags_fn();

ALTER TABLE poisopen
    ENABLE ALWAYS TRIGGER t_v_poisopen_SmgTags;



DROP TABLE IF EXISTS "v_poisopen_HasLanguage";

CREATE TABLE  "v_poisopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_poisopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_poisopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_poisopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_poisopen_HasLanguage
    BEFORE INSERT
    ON poisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_poisopen_HasLanguage_fn();

ALTER TABLE poisopen
    ENABLE ALWAYS TRIGGER t_v_poisopen_HasLanguage;



DROP TABLE IF EXISTS "v_poisopen_GpsInfo";

CREATE TABLE "v_poisopen_GpsInfo" (
"poisopen_Id" varchar,
"Gpstype" varchar,
"Altitude" float,
"Latitude" float,
"Longitude" float,
"AltitudeUnitofMeasure" varchar
);

DROP FUNCTION IF EXISTS v_poisopen_GpsInfo_fn CASCADE;

CREATE FUNCTION v_poisopen_GpsInfo_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_poisopen_GpsInfo"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'GpsInfo') AS "data"
        WHERE NEW."data" -> 'GpsInfo' != 'null')
    SELECT "Id" AS "poisopen_Id", CAST("data"->>'Gpstype' As varchar) AS "Gpstype",
CAST("data"->>'Altitude' As float) AS "Altitude",
CAST("data"->>'Latitude' As float) AS "Latitude",
CAST("data"->>'Longitude' As float) AS "Longitude",
CAST("data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_poisopen_GpsInfo
    BEFORE INSERT
    ON poisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_poisopen_GpsInfo_fn();

ALTER TABLE poisopen
    ENABLE ALWAYS TRIGGER t_v_poisopen_GpsInfo;



DROP TABLE IF EXISTS "v_poisopen_LTSTags";

CREATE TABLE "v_poisopen_LTSTags" (
"poisopen_Id" varchar,
"Id" varchar,
"Self" varchar,
"Level" integer,
"LTSRID" varchar,
"TagName-de" varchar,
"TagName-en" varchar,
"TagName-it" varchar
);

DROP FUNCTION IF EXISTS v_poisopen_LTSTags_fn CASCADE;

CREATE FUNCTION v_poisopen_LTSTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_poisopen_LTSTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'LTSTags') AS "data"
        WHERE NEW."data" -> 'LTSTags' != 'null')
    SELECT "Id" AS "poisopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Level' As integer) AS "Level",
CAST("data"->>'LTSRID' As varchar) AS "LTSRID",
CAST("data"->'TagName'->>'de' As varchar) AS "TagName-de",
CAST("data"->'TagName'->>'en' As varchar) AS "TagName-en",
CAST("data"->'TagName'->>'it' As varchar) AS "TagName-it"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_poisopen_LTSTags
    BEFORE INSERT
    ON poisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_poisopen_LTSTags_fn();

ALTER TABLE poisopen
    ENABLE ALWAYS TRIGGER t_v_poisopen_LTSTags;



DROP TABLE IF EXISTS "v_poisopen_ODHTags";

CREATE TABLE "v_poisopen_ODHTags" (
"poisopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_poisopen_ODHTags_fn CASCADE;

CREATE FUNCTION v_poisopen_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_poisopen_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "poisopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_poisopen_ODHTags
    BEFORE INSERT
    ON poisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_poisopen_ODHTags_fn();

ALTER TABLE poisopen
    ENABLE ALWAYS TRIGGER t_v_poisopen_ODHTags;



DROP TABLE IF EXISTS "v_poisopen_PoiTypes";

CREATE TABLE "v_poisopen_PoiTypes" (
"poisopen_Id" varchar,
"Id" varchar,
"Self" varchar,
"Type" varchar
);

DROP FUNCTION IF EXISTS v_poisopen_PoiTypes_fn CASCADE;

CREATE FUNCTION v_poisopen_PoiTypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_poisopen_PoiTypes"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'PoiTypes') AS "data"
        WHERE NEW."data" -> 'PoiTypes' != 'null')
    SELECT "Id" AS "poisopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Type' As varchar) AS "Type"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_poisopen_PoiTypes
    BEFORE INSERT
    ON poisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_poisopen_PoiTypes_fn();

ALTER TABLE poisopen
    ENABLE ALWAYS TRIGGER t_v_poisopen_PoiTypes;



DROP TABLE IF EXISTS "v_poitypes";

CREATE TABLE "v_poitypes" (
"Id" varchar,
"Key" varchar,
"Type" varchar,
"Parent" varchar,
"Bitmask" integer,
"TypeDesc-de" varchar,
"TypeDesc-en" varchar,
"TypeDesc-it" varchar
);

ALTER TABLE "v_poitypes" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_poitypes_fn CASCADE;

CREATE FUNCTION v_poitypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_poitypes
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Key' As varchar) AS "Key",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Parent' As varchar) AS "Parent",
CAST(NEW."data"->>'Bitmask' As integer) AS "Bitmask",
CAST(NEW."data"->'TypeDesc'->>'de' As varchar) AS "TypeDesc-de",
CAST(NEW."data"->'TypeDesc'->>'en' As varchar) AS "TypeDesc-en",
CAST(NEW."data"->'TypeDesc'->>'it' As varchar) AS "TypeDesc-it";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_poitypes
    BEFORE INSERT
    ON poitypes
    FOR EACH ROW
    EXECUTE PROCEDURE v_poitypes_fn();

ALTER TABLE poitypes
    ENABLE ALWAYS TRIGGER t_v_poitypes;



DROP TABLE IF EXISTS "v_regions";

CREATE TABLE "v_regions" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"CustomId" varchar,
"Latitude" float,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"VisibleInSearch" bool,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-Header" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-MetaDesc" varchar,
"Detail-cs-IntroText" varchar,
"Detail-cs-MetaTitle" varchar,
"Detail-cs-SubHeader" varchar,
"Detail-de-Title" varchar,
"Detail-de-Header" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-de-SubHeader" varchar,
"Detail-en-Title" varchar,
"Detail-en-Header" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-MetaDesc" varchar,
"Detail-en-IntroText" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-en-SubHeader" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Header" varchar,
"Detail-fr-BaseText" varchar,
"Detail-fr-MetaDesc" varchar,
"Detail-fr-IntroText" varchar,
"Detail-fr-MetaTitle" varchar,
"Detail-fr-SubHeader" varchar,
"Detail-it-Title" varchar,
"Detail-it-Header" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-MetaTitle" varchar,
"Detail-it-SubHeader" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-Header" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-MetaDesc" varchar,
"Detail-nl-IntroText" varchar,
"Detail-nl-MetaTitle" varchar,
"Detail-nl-SubHeader" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-Header" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-MetaDesc" varchar,
"Detail-pl-IntroText" varchar,
"Detail-pl-MetaTitle" varchar,
"Detail-pl-SubHeader" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Header" varchar,
"Detail-ru-BaseText" varchar,
"Detail-ru-MetaDesc" varchar,
"Detail-ru-IntroText" varchar,
"Detail-ru-MetaTitle" varchar,
"Detail-ru-SubHeader" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-cs-Url" varchar,
"ContactInfos-cs-Vat" varchar,
"ContactInfos-cs-City" varchar,
"ContactInfos-cs-Email" varchar,
"ContactInfos-cs-Address" varchar,
"ContactInfos-cs-Surname" varchar,
"ContactInfos-cs-ZipCode" varchar,
"ContactInfos-cs-Language" varchar,
"ContactInfos-cs-Faxnumber" varchar,
"ContactInfos-cs-Givenname" varchar,
"ContactInfos-cs-NamePrefix" varchar,
"ContactInfos-cs-CompanyName" varchar,
"ContactInfos-cs-CountryCode" varchar,
"ContactInfos-cs-CountryName" varchar,
"ContactInfos-cs-Phonenumber" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-Vat" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-Surname" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-Faxnumber" varchar,
"ContactInfos-en-Givenname" varchar,
"ContactInfos-en-NamePrefix" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-fr-Url" varchar,
"ContactInfos-fr-Vat" varchar,
"ContactInfos-fr-City" varchar,
"ContactInfos-fr-Email" varchar,
"ContactInfos-fr-Address" varchar,
"ContactInfos-fr-Surname" varchar,
"ContactInfos-fr-ZipCode" varchar,
"ContactInfos-fr-Language" varchar,
"ContactInfos-fr-Faxnumber" varchar,
"ContactInfos-fr-Givenname" varchar,
"ContactInfos-fr-NamePrefix" varchar,
"ContactInfos-fr-CompanyName" varchar,
"ContactInfos-fr-CountryCode" varchar,
"ContactInfos-fr-CountryName" varchar,
"ContactInfos-fr-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-Vat" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-Surname" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-Faxnumber" varchar,
"ContactInfos-it-Givenname" varchar,
"ContactInfos-it-NamePrefix" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"ContactInfos-nl-Url" varchar,
"ContactInfos-nl-Vat" varchar,
"ContactInfos-nl-City" varchar,
"ContactInfos-nl-Email" varchar,
"ContactInfos-nl-Address" varchar,
"ContactInfos-nl-Surname" varchar,
"ContactInfos-nl-ZipCode" varchar,
"ContactInfos-nl-Language" varchar,
"ContactInfos-nl-Faxnumber" varchar,
"ContactInfos-nl-Givenname" varchar,
"ContactInfos-nl-NamePrefix" varchar,
"ContactInfos-nl-CompanyName" varchar,
"ContactInfos-nl-CountryCode" varchar,
"ContactInfos-nl-CountryName" varchar,
"ContactInfos-nl-Phonenumber" varchar,
"ContactInfos-pl-Url" varchar,
"ContactInfos-pl-Vat" varchar,
"ContactInfos-pl-City" varchar,
"ContactInfos-pl-Email" varchar,
"ContactInfos-pl-Address" varchar,
"ContactInfos-pl-Surname" varchar,
"ContactInfos-pl-ZipCode" varchar,
"ContactInfos-pl-Language" varchar,
"ContactInfos-pl-Faxnumber" varchar,
"ContactInfos-pl-Givenname" varchar,
"ContactInfos-pl-NamePrefix" varchar,
"ContactInfos-pl-CompanyName" varchar,
"ContactInfos-pl-CountryCode" varchar,
"ContactInfos-pl-CountryName" varchar,
"ContactInfos-pl-Phonenumber" varchar,
"ContactInfos-ru-Url" varchar,
"ContactInfos-ru-Vat" varchar,
"ContactInfos-ru-City" varchar,
"ContactInfos-ru-Email" varchar,
"ContactInfos-ru-Address" varchar,
"ContactInfos-ru-Surname" varchar,
"ContactInfos-ru-ZipCode" varchar,
"ContactInfos-ru-Language" varchar,
"ContactInfos-ru-Faxnumber" varchar,
"ContactInfos-ru-Givenname" varchar,
"ContactInfos-ru-NamePrefix" varchar,
"ContactInfos-ru-CompanyName" varchar,
"ContactInfos-ru-CountryCode" varchar,
"ContactInfos-ru-CountryName" varchar,
"ContactInfos-ru-Phonenumber" varchar,
"DetailThemed-cs-Language" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Winter-Title" varchar,
"DetailThemed-cs-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-de-Language" varchar,
"DetailThemed-de-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-de-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-de-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-de-DetailsThemed-Winter-Title" varchar,
"DetailThemed-de-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-en-Language" varchar,
"DetailThemed-en-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-en-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-en-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-en-DetailsThemed-Winter-Title" varchar,
"DetailThemed-en-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-fr-Language" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Winter-Title" varchar,
"DetailThemed-fr-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-it-Language" varchar,
"DetailThemed-it-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-it-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-it-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-it-DetailsThemed-Winter-Title" varchar,
"DetailThemed-it-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-nl-Language" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Winter-Title" varchar,
"DetailThemed-nl-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-pl-Language" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Winter-Title" varchar,
"DetailThemed-pl-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-ru-Language" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Winter-Title" varchar,
"DetailThemed-ru-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"ContactInfos-cs-LogoUrl" varchar,
"ContactInfos-de-LogoUrl" varchar,
"ContactInfos-en-LogoUrl" varchar,
"ContactInfos-fr-LogoUrl" varchar,
"ContactInfos-it-LogoUrl" varchar,
"ContactInfos-nl-LogoUrl" varchar,
"ContactInfos-pl-LogoUrl" varchar,
"ContactInfos-ru-LogoUrl" varchar,
"DetailThemed-cs-DetailsThemed-Kultur Sehenswürdigkeiten-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Kultur Sehenswürdigkeiten-Title" varchar,
"D-cs-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc" varchar,
"D-c-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Kultur Sehenswürdigkeiten-Intro" varchar,
"DetailThemed-de-DetailsThemed-Kultur Sehenswürdigkeiten-Title" varchar,
"D-de-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc" varchar,
"D-d-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Kultur Sehenswürdigkeiten-Intro" varchar,
"DetailThemed-en-DetailsThemed-Kultur Sehenswürdigkeiten-Title" varchar,
"D-en-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc" varchar,
"D-e-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Kultur Sehenswürdigkeiten-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Kultur Sehenswürdigkeiten-Title" varchar,
"D-fr-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc" varchar,
"D-f-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Kultur Sehenswürdigkeiten-Intro" varchar,
"DetailThemed-it-DetailsThemed-Kultur Sehenswürdigkeiten-Title" varchar,
"D-it-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc" varchar,
"D-i-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Kultur Sehenswürdigkeiten-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Kultur Sehenswürdigkeiten-Title" varchar,
"D-nl-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc" varchar,
"D-n-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Kultur Sehenswürdigkeiten-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Kultur Sehenswürdigkeiten-Title" varchar,
"D-pl-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc" varchar,
"D-p-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Kultur Sehenswürdigkeiten-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Kultur Sehenswürdigkeiten-Title" varchar,
"D-ru-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc" varchar,
"D-r-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle" varchar,
"Detail-cs-Language" varchar,
"Detail-cs-GetThereText" varchar,
"Detail-cs-AdditionalText" varchar,
"Detail-de-Language" varchar,
"Detail-en-Language" varchar,
"Detail-en-GetThereText" varchar,
"Detail-en-AdditionalText" varchar,
"Detail-fr-Language" varchar,
"Detail-fr-GetThereText" varchar,
"Detail-fr-AdditionalText" varchar,
"Detail-it-Language" varchar,
"Detail-it-GetThereText" varchar,
"Detail-it-AdditionalText" varchar,
"Detail-nl-Language" varchar,
"Detail-nl-GetThereText" varchar,
"Detail-nl-AdditionalText" varchar,
"Detail-pl-Language" varchar,
"Detail-pl-GetThereText" varchar,
"Detail-pl-AdditionalText" varchar,
"Detail-ru-Language" varchar,
"Detail-ru-GetThereText" varchar,
"Detail-ru-AdditionalText" varchar,
"ContactInfos-de-Faxnumber" varchar,
"DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-cs-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-cs-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-de-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-de-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-de-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-en-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-en-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-en-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-fr-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-fr-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-it-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-it-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-it-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-nl-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-nl-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-pl-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-pl-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-ru-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-ru-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar
);

ALTER TABLE "v_regions" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_regions_fn CASCADE;

CREATE FUNCTION v_regions_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_regions
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'CustomId' As varchar) AS "CustomId",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'VisibleInSearch' As bool) AS "VisibleInSearch",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'Header' As varchar) AS "Detail-cs-Header",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'MetaDesc' As varchar) AS "Detail-cs-MetaDesc",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'cs'->>'MetaTitle' As varchar) AS "Detail-cs-MetaTitle",
CAST(NEW."data"->'Detail'->'cs'->>'SubHeader' As varchar) AS "Detail-cs-SubHeader",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'MetaDesc' As varchar) AS "Detail-en-MetaDesc",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Header' As varchar) AS "Detail-fr-Header",
CAST(NEW."data"->'Detail'->'fr'->>'BaseText' As varchar) AS "Detail-fr-BaseText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaDesc' As varchar) AS "Detail-fr-MetaDesc",
CAST(NEW."data"->'Detail'->'fr'->>'IntroText' As varchar) AS "Detail-fr-IntroText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaTitle' As varchar) AS "Detail-fr-MetaTitle",
CAST(NEW."data"->'Detail'->'fr'->>'SubHeader' As varchar) AS "Detail-fr-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Header' As varchar) AS "Detail-nl-Header",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'MetaDesc' As varchar) AS "Detail-nl-MetaDesc",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'MetaTitle' As varchar) AS "Detail-nl-MetaTitle",
CAST(NEW."data"->'Detail'->'nl'->>'SubHeader' As varchar) AS "Detail-nl-SubHeader",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Header' As varchar) AS "Detail-pl-Header",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'MetaDesc' As varchar) AS "Detail-pl-MetaDesc",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'MetaTitle' As varchar) AS "Detail-pl-MetaTitle",
CAST(NEW."data"->'Detail'->'pl'->>'SubHeader' As varchar) AS "Detail-pl-SubHeader",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Header' As varchar) AS "Detail-ru-Header",
CAST(NEW."data"->'Detail'->'ru'->>'BaseText' As varchar) AS "Detail-ru-BaseText",
CAST(NEW."data"->'Detail'->'ru'->>'MetaDesc' As varchar) AS "Detail-ru-MetaDesc",
CAST(NEW."data"->'Detail'->'ru'->>'IntroText' As varchar) AS "Detail-ru-IntroText",
CAST(NEW."data"->'Detail'->'ru'->>'MetaTitle' As varchar) AS "Detail-ru-MetaTitle",
CAST(NEW."data"->'Detail'->'ru'->>'SubHeader' As varchar) AS "Detail-ru-SubHeader",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Url' As varchar) AS "ContactInfos-cs-Url",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Vat' As varchar) AS "ContactInfos-cs-Vat",
CAST(NEW."data"->'ContactInfos'->'cs'->>'City' As varchar) AS "ContactInfos-cs-City",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Email' As varchar) AS "ContactInfos-cs-Email",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Address' As varchar) AS "ContactInfos-cs-Address",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Surname' As varchar) AS "ContactInfos-cs-Surname",
CAST(NEW."data"->'ContactInfos'->'cs'->>'ZipCode' As varchar) AS "ContactInfos-cs-ZipCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Language' As varchar) AS "ContactInfos-cs-Language",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Faxnumber' As varchar) AS "ContactInfos-cs-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Givenname' As varchar) AS "ContactInfos-cs-Givenname",
CAST(NEW."data"->'ContactInfos'->'cs'->>'NamePrefix' As varchar) AS "ContactInfos-cs-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CompanyName' As varchar) AS "ContactInfos-cs-CompanyName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryCode' As varchar) AS "ContactInfos-cs-CountryCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryName' As varchar) AS "ContactInfos-cs-CountryName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Phonenumber' As varchar) AS "ContactInfos-cs-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'Vat' As varchar) AS "ContactInfos-en-Vat",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'Surname' As varchar) AS "ContactInfos-en-Surname",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Faxnumber' As varchar) AS "ContactInfos-en-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Givenname' As varchar) AS "ContactInfos-en-Givenname",
CAST(NEW."data"->'ContactInfos'->'en'->>'NamePrefix' As varchar) AS "ContactInfos-en-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Url' As varchar) AS "ContactInfos-fr-Url",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Vat' As varchar) AS "ContactInfos-fr-Vat",
CAST(NEW."data"->'ContactInfos'->'fr'->>'City' As varchar) AS "ContactInfos-fr-City",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Email' As varchar) AS "ContactInfos-fr-Email",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Address' As varchar) AS "ContactInfos-fr-Address",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Surname' As varchar) AS "ContactInfos-fr-Surname",
CAST(NEW."data"->'ContactInfos'->'fr'->>'ZipCode' As varchar) AS "ContactInfos-fr-ZipCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Language' As varchar) AS "ContactInfos-fr-Language",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Faxnumber' As varchar) AS "ContactInfos-fr-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Givenname' As varchar) AS "ContactInfos-fr-Givenname",
CAST(NEW."data"->'ContactInfos'->'fr'->>'NamePrefix' As varchar) AS "ContactInfos-fr-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CompanyName' As varchar) AS "ContactInfos-fr-CompanyName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryCode' As varchar) AS "ContactInfos-fr-CountryCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryName' As varchar) AS "ContactInfos-fr-CountryName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Phonenumber' As varchar) AS "ContactInfos-fr-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'Vat' As varchar) AS "ContactInfos-it-Vat",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'Surname' As varchar) AS "ContactInfos-it-Surname",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'Faxnumber' As varchar) AS "ContactInfos-it-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Givenname' As varchar) AS "ContactInfos-it-Givenname",
CAST(NEW."data"->'ContactInfos'->'it'->>'NamePrefix' As varchar) AS "ContactInfos-it-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Url' As varchar) AS "ContactInfos-nl-Url",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Vat' As varchar) AS "ContactInfos-nl-Vat",
CAST(NEW."data"->'ContactInfos'->'nl'->>'City' As varchar) AS "ContactInfos-nl-City",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Email' As varchar) AS "ContactInfos-nl-Email",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Address' As varchar) AS "ContactInfos-nl-Address",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Surname' As varchar) AS "ContactInfos-nl-Surname",
CAST(NEW."data"->'ContactInfos'->'nl'->>'ZipCode' As varchar) AS "ContactInfos-nl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Language' As varchar) AS "ContactInfos-nl-Language",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Faxnumber' As varchar) AS "ContactInfos-nl-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Givenname' As varchar) AS "ContactInfos-nl-Givenname",
CAST(NEW."data"->'ContactInfos'->'nl'->>'NamePrefix' As varchar) AS "ContactInfos-nl-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CompanyName' As varchar) AS "ContactInfos-nl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryCode' As varchar) AS "ContactInfos-nl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryName' As varchar) AS "ContactInfos-nl-CountryName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Phonenumber' As varchar) AS "ContactInfos-nl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Url' As varchar) AS "ContactInfos-pl-Url",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Vat' As varchar) AS "ContactInfos-pl-Vat",
CAST(NEW."data"->'ContactInfos'->'pl'->>'City' As varchar) AS "ContactInfos-pl-City",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Email' As varchar) AS "ContactInfos-pl-Email",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Address' As varchar) AS "ContactInfos-pl-Address",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Surname' As varchar) AS "ContactInfos-pl-Surname",
CAST(NEW."data"->'ContactInfos'->'pl'->>'ZipCode' As varchar) AS "ContactInfos-pl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Language' As varchar) AS "ContactInfos-pl-Language",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Faxnumber' As varchar) AS "ContactInfos-pl-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Givenname' As varchar) AS "ContactInfos-pl-Givenname",
CAST(NEW."data"->'ContactInfos'->'pl'->>'NamePrefix' As varchar) AS "ContactInfos-pl-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CompanyName' As varchar) AS "ContactInfos-pl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryCode' As varchar) AS "ContactInfos-pl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryName' As varchar) AS "ContactInfos-pl-CountryName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Phonenumber' As varchar) AS "ContactInfos-pl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Url' As varchar) AS "ContactInfos-ru-Url",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Vat' As varchar) AS "ContactInfos-ru-Vat",
CAST(NEW."data"->'ContactInfos'->'ru'->>'City' As varchar) AS "ContactInfos-ru-City",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Email' As varchar) AS "ContactInfos-ru-Email",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Address' As varchar) AS "ContactInfos-ru-Address",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Surname' As varchar) AS "ContactInfos-ru-Surname",
CAST(NEW."data"->'ContactInfos'->'ru'->>'ZipCode' As varchar) AS "ContactInfos-ru-ZipCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Language' As varchar) AS "ContactInfos-ru-Language",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Faxnumber' As varchar) AS "ContactInfos-ru-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Givenname' As varchar) AS "ContactInfos-ru-Givenname",
CAST(NEW."data"->'ContactInfos'->'ru'->>'NamePrefix' As varchar) AS "ContactInfos-ru-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CompanyName' As varchar) AS "ContactInfos-ru-CompanyName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryCode' As varchar) AS "ContactInfos-ru-CountryCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryName' As varchar) AS "ContactInfos-ru-CountryName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Phonenumber' As varchar) AS "ContactInfos-ru-Phonenumber",
CAST(NEW."data"->'DetailThemed'->'cs'->>'Language' As varchar) AS "DetailThemed-cs-Language",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->>'Language' As varchar) AS "DetailThemed-de-Language",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->>'Language' As varchar) AS "DetailThemed-en-Language",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->>'Language' As varchar) AS "DetailThemed-fr-Language",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->>'Language' As varchar) AS "DetailThemed-it-Language",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->>'Language' As varchar) AS "DetailThemed-nl-Language",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->>'Language' As varchar) AS "DetailThemed-pl-Language",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->>'Language' As varchar) AS "DetailThemed-ru-Language",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'ContactInfos'->'cs'->>'LogoUrl' As varchar) AS "ContactInfos-cs-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'de'->>'LogoUrl' As varchar) AS "ContactInfos-de-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'en'->>'LogoUrl' As varchar) AS "ContactInfos-en-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'fr'->>'LogoUrl' As varchar) AS "ContactInfos-fr-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'it'->>'LogoUrl' As varchar) AS "ContactInfos-it-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'nl'->>'LogoUrl' As varchar) AS "ContactInfos-nl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'pl'->>'LogoUrl' As varchar) AS "ContactInfos-pl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'ru'->>'LogoUrl' As varchar) AS "ContactInfos-ru-LogoUrl",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Kultur Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Kultur Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-cs-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-c-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Kultur Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Kultur Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-de-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-d-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Kultur Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Kultur Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-en-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-e-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Kultur Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Kultur Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-fr-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-f-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Kultur Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Kultur Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-it-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-i-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Kultur Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Kultur Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-nl-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-n-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Kultur Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Kultur Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-pl-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-p-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Kultur Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Kultur Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-ru-DetailsThemed-Kultur Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-r-DetailsThemed-Kultur Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'cs'->>'GetThereText' As varchar) AS "Detail-cs-GetThereText",
CAST(NEW."data"->'Detail'->'cs'->>'AdditionalText' As varchar) AS "Detail-cs-AdditionalText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'AdditionalText' As varchar) AS "Detail-en-AdditionalText",
CAST(NEW."data"->'Detail'->'fr'->>'Language' As varchar) AS "Detail-fr-Language",
CAST(NEW."data"->'Detail'->'fr'->>'GetThereText' As varchar) AS "Detail-fr-GetThereText",
CAST(NEW."data"->'Detail'->'fr'->>'AdditionalText' As varchar) AS "Detail-fr-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'AdditionalText' As varchar) AS "Detail-it-AdditionalText",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'nl'->>'GetThereText' As varchar) AS "Detail-nl-GetThereText",
CAST(NEW."data"->'Detail'->'nl'->>'AdditionalText' As varchar) AS "Detail-nl-AdditionalText",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'pl'->>'AdditionalText' As varchar) AS "Detail-pl-AdditionalText",
CAST(NEW."data"->'Detail'->'ru'->>'Language' As varchar) AS "Detail-ru-Language",
CAST(NEW."data"->'Detail'->'ru'->>'GetThereText' As varchar) AS "Detail-ru-GetThereText",
CAST(NEW."data"->'Detail'->'ru'->>'AdditionalText' As varchar) AS "Detail-ru-AdditionalText",
CAST(NEW."data"->'ContactInfos'->'de'->>'Faxnumber' As varchar) AS "ContactInfos-de-Faxnumber",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-cs-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-de-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-en-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-fr-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-it-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-nl-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-pl-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-ru-DetailsThemed-Wellness und Entspannung-MetaTitle";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regions
    BEFORE INSERT
    ON regions
    FOR EACH ROW
    EXECUTE PROCEDURE v_regions_fn();

ALTER TABLE regions
    ENABLE ALWAYS TRIGGER t_v_regions;



DROP TABLE IF EXISTS "v_regions_SmgTags";

CREATE TABLE  "v_regions_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_regions_SmgTags_fn CASCADE;

CREATE FUNCTION v_regions_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regions_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regions_SmgTags
    BEFORE INSERT
    ON regions
    FOR EACH ROW
    EXECUTE PROCEDURE v_regions_SmgTags_fn();

ALTER TABLE regions
    ENABLE ALWAYS TRIGGER t_v_regions_SmgTags;



DROP TABLE IF EXISTS "v_regions_SkiareaIds";

CREATE TABLE  "v_regions_SkiareaIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_regions_SkiareaIds_fn CASCADE;

CREATE FUNCTION v_regions_SkiareaIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regions_SkiareaIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SkiareaIds') AS "data"
        WHERE NEW."data" -> 'SkiareaIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regions_SkiareaIds
    BEFORE INSERT
    ON regions
    FOR EACH ROW
    EXECUTE PROCEDURE v_regions_SkiareaIds_fn();

ALTER TABLE regions
    ENABLE ALWAYS TRIGGER t_v_regions_SkiareaIds;



DROP TABLE IF EXISTS "v_regions_HasLanguage";

CREATE TABLE  "v_regions_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_regions_HasLanguage_fn CASCADE;

CREATE FUNCTION v_regions_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regions_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regions_HasLanguage
    BEFORE INSERT
    ON regions
    FOR EACH ROW
    EXECUTE PROCEDURE v_regions_HasLanguage_fn();

ALTER TABLE regions
    ENABLE ALWAYS TRIGGER t_v_regions_HasLanguage;



DROP TABLE IF EXISTS "v_regions_PublishedOn";

CREATE TABLE  "v_regions_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_regions_PublishedOn_fn CASCADE;

CREATE FUNCTION v_regions_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regions_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regions_PublishedOn
    BEFORE INSERT
    ON regions
    FOR EACH ROW
    EXECUTE PROCEDURE v_regions_PublishedOn_fn();

ALTER TABLE regions
    ENABLE ALWAYS TRIGGER t_v_regions_PublishedOn;



DROP TABLE IF EXISTS "v_regions_ODHTags";

CREATE TABLE "v_regions_ODHTags" (
"regions_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_regions_ODHTags_fn CASCADE;

CREATE FUNCTION v_regions_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regions_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "regions_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regions_ODHTags
    BEFORE INSERT
    ON regions
    FOR EACH ROW
    EXECUTE PROCEDURE v_regions_ODHTags_fn();

ALTER TABLE regions
    ENABLE ALWAYS TRIGGER t_v_regions_ODHTags;



DROP TABLE IF EXISTS "v_regions_SkiAreas";

CREATE TABLE "v_regions_SkiAreas" (
"regions_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_regions_SkiAreas_fn CASCADE;

CREATE FUNCTION v_regions_SkiAreas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regions_SkiAreas"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'SkiAreas') AS "data"
        WHERE NEW."data" -> 'SkiAreas' != 'null')
    SELECT "Id" AS "regions_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regions_SkiAreas
    BEFORE INSERT
    ON regions
    FOR EACH ROW
    EXECUTE PROCEDURE v_regions_SkiAreas_fn();

ALTER TABLE regions
    ENABLE ALWAYS TRIGGER t_v_regions_SkiAreas;



DROP TABLE IF EXISTS "v_regions_ImageGallery";

CREATE TABLE "v_regions_ImageGallery" (
"regions_Id" varchar,
"Width" integer,
"Height" integer,
"ValidTo" varchar,
"ImageUrl" varchar,
"ImageName" varchar,
"ValidFrom" varchar,
"ImageSource" varchar,
"IsInGallery" bool,
"ListPosition" integer,
"ImageDesc-cs" varchar,
"ImageDesc-de" varchar,
"ImageDesc-en" varchar,
"ImageDesc-fr" varchar,
"ImageDesc-it" varchar,
"ImageDesc-nl" varchar,
"ImageDesc-pl" varchar,
"ImageDesc-ru" varchar,
"ImageTitle-cs" varchar,
"ImageTitle-de" varchar,
"ImageTitle-en" varchar,
"ImageTitle-fr" varchar,
"ImageTitle-it" varchar,
"ImageTitle-nl" varchar,
"ImageTitle-pl" varchar,
"ImageTitle-ru" varchar,
"CopyRight" varchar
);

DROP FUNCTION IF EXISTS v_regions_ImageGallery_fn CASCADE;

CREATE FUNCTION v_regions_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regions_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "regions_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ValidTo' As varchar) AS "ValidTo",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'ImageName' As varchar) AS "ImageName",
CAST("data"->>'ValidFrom' As varchar) AS "ValidFrom",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'ImageDesc'->>'cs' As varchar) AS "ImageDesc-cs",
CAST("data"->'ImageDesc'->>'de' As varchar) AS "ImageDesc-de",
CAST("data"->'ImageDesc'->>'en' As varchar) AS "ImageDesc-en",
CAST("data"->'ImageDesc'->>'fr' As varchar) AS "ImageDesc-fr",
CAST("data"->'ImageDesc'->>'it' As varchar) AS "ImageDesc-it",
CAST("data"->'ImageDesc'->>'nl' As varchar) AS "ImageDesc-nl",
CAST("data"->'ImageDesc'->>'pl' As varchar) AS "ImageDesc-pl",
CAST("data"->'ImageDesc'->>'ru' As varchar) AS "ImageDesc-ru",
CAST("data"->'ImageTitle'->>'cs' As varchar) AS "ImageTitle-cs",
CAST("data"->'ImageTitle'->>'de' As varchar) AS "ImageTitle-de",
CAST("data"->'ImageTitle'->>'en' As varchar) AS "ImageTitle-en",
CAST("data"->'ImageTitle'->>'fr' As varchar) AS "ImageTitle-fr",
CAST("data"->'ImageTitle'->>'it' As varchar) AS "ImageTitle-it",
CAST("data"->'ImageTitle'->>'nl' As varchar) AS "ImageTitle-nl",
CAST("data"->'ImageTitle'->>'pl' As varchar) AS "ImageTitle-pl",
CAST("data"->'ImageTitle'->>'ru' As varchar) AS "ImageTitle-ru",
CAST("data"->>'CopyRight' As varchar) AS "CopyRight"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regions_ImageGallery
    BEFORE INSERT
    ON regions
    FOR EACH ROW
    EXECUTE PROCEDURE v_regions_ImageGallery_fn();

ALTER TABLE regions
    ENABLE ALWAYS TRIGGER t_v_regions_ImageGallery;



DROP TABLE IF EXISTS "v_regions_Webcam";

CREATE TABLE "v_regions_Webcam" (
"regions_Id" varchar,
"Source" varchar,
"WebcamId" varchar,
"Webcamurl" varchar,
"GpsInfo-Gpstype" varchar,
"GpsInfo-Latitude" float,
"GpsInfo-Longitude" float,
"GpsInfo-AltitudeUnitofMeasure" varchar,
"Webcamname-de" varchar,
"Webcamname-it" varchar
);

DROP FUNCTION IF EXISTS v_regions_Webcam_fn CASCADE;

CREATE FUNCTION v_regions_Webcam_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regions_Webcam"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Webcam') AS "data"
        WHERE NEW."data" -> 'Webcam' != 'null')
    SELECT "Id" AS "regions_Id", CAST("data"->>'Source' As varchar) AS "Source",
CAST("data"->>'WebcamId' As varchar) AS "WebcamId",
CAST("data"->>'Webcamurl' As varchar) AS "Webcamurl",
CAST("data"->'GpsInfo'->>'Gpstype' As varchar) AS "GpsInfo-Gpstype",
CAST("data"->'GpsInfo'->>'Latitude' As float) AS "GpsInfo-Latitude",
CAST("data"->'GpsInfo'->>'Longitude' As float) AS "GpsInfo-Longitude",
CAST("data"->'GpsInfo'->>'AltitudeUnitofMeasure' As varchar) AS "GpsInfo-AltitudeUnitofMeasure",
CAST("data"->'Webcamname'->>'de' As varchar) AS "Webcamname-de",
CAST("data"->'Webcamname'->>'it' As varchar) AS "Webcamname-it"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regions_Webcam
    BEFORE INSERT
    ON regions
    FOR EACH ROW
    EXECUTE PROCEDURE v_regions_Webcam_fn();

ALTER TABLE regions
    ENABLE ALWAYS TRIGGER t_v_regions_Webcam;



DROP TABLE IF EXISTS "v_regionsopen";

CREATE TABLE "v_regionsopen" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"CustomId" varchar,
"Latitude" float,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"VisibleInSearch" bool,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-Header" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-MetaDesc" varchar,
"Detail-cs-IntroText" varchar,
"Detail-cs-MetaTitle" varchar,
"Detail-cs-SubHeader" varchar,
"Detail-de-Title" varchar,
"Detail-de-Header" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-de-SubHeader" varchar,
"Detail-en-Title" varchar,
"Detail-en-Header" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-MetaDesc" varchar,
"Detail-en-IntroText" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-en-SubHeader" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Header" varchar,
"Detail-fr-BaseText" varchar,
"Detail-fr-MetaDesc" varchar,
"Detail-fr-IntroText" varchar,
"Detail-fr-MetaTitle" varchar,
"Detail-fr-SubHeader" varchar,
"Detail-it-Title" varchar,
"Detail-it-Header" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-MetaTitle" varchar,
"Detail-it-SubHeader" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-Header" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-MetaDesc" varchar,
"Detail-nl-IntroText" varchar,
"Detail-nl-MetaTitle" varchar,
"Detail-nl-SubHeader" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-Header" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-MetaDesc" varchar,
"Detail-pl-IntroText" varchar,
"Detail-pl-MetaTitle" varchar,
"Detail-pl-SubHeader" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Header" varchar,
"Detail-ru-BaseText" varchar,
"Detail-ru-MetaDesc" varchar,
"Detail-ru-IntroText" varchar,
"Detail-ru-MetaTitle" varchar,
"Detail-ru-SubHeader" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-cs-Url" varchar,
"ContactInfos-cs-Vat" varchar,
"ContactInfos-cs-City" varchar,
"ContactInfos-cs-Email" varchar,
"ContactInfos-cs-Address" varchar,
"ContactInfos-cs-Surname" varchar,
"ContactInfos-cs-ZipCode" varchar,
"ContactInfos-cs-Language" varchar,
"ContactInfos-cs-Faxnumber" varchar,
"ContactInfos-cs-Givenname" varchar,
"ContactInfos-cs-NamePrefix" varchar,
"ContactInfos-cs-CompanyName" varchar,
"ContactInfos-cs-CountryCode" varchar,
"ContactInfos-cs-CountryName" varchar,
"ContactInfos-cs-Phonenumber" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-Vat" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-Surname" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-Faxnumber" varchar,
"ContactInfos-en-Givenname" varchar,
"ContactInfos-en-NamePrefix" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-fr-Url" varchar,
"ContactInfos-fr-Vat" varchar,
"ContactInfos-fr-City" varchar,
"ContactInfos-fr-Email" varchar,
"ContactInfos-fr-Address" varchar,
"ContactInfos-fr-Surname" varchar,
"ContactInfos-fr-ZipCode" varchar,
"ContactInfos-fr-Language" varchar,
"ContactInfos-fr-Faxnumber" varchar,
"ContactInfos-fr-Givenname" varchar,
"ContactInfos-fr-NamePrefix" varchar,
"ContactInfos-fr-CompanyName" varchar,
"ContactInfos-fr-CountryCode" varchar,
"ContactInfos-fr-CountryName" varchar,
"ContactInfos-fr-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-Vat" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-Surname" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-Faxnumber" varchar,
"ContactInfos-it-Givenname" varchar,
"ContactInfos-it-NamePrefix" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"ContactInfos-nl-Url" varchar,
"ContactInfos-nl-Vat" varchar,
"ContactInfos-nl-City" varchar,
"ContactInfos-nl-Email" varchar,
"ContactInfos-nl-Address" varchar,
"ContactInfos-nl-Surname" varchar,
"ContactInfos-nl-ZipCode" varchar,
"ContactInfos-nl-Language" varchar,
"ContactInfos-nl-Faxnumber" varchar,
"ContactInfos-nl-Givenname" varchar,
"ContactInfos-nl-NamePrefix" varchar,
"ContactInfos-nl-CompanyName" varchar,
"ContactInfos-nl-CountryCode" varchar,
"ContactInfos-nl-CountryName" varchar,
"ContactInfos-nl-Phonenumber" varchar,
"ContactInfos-pl-Url" varchar,
"ContactInfos-pl-Vat" varchar,
"ContactInfos-pl-City" varchar,
"ContactInfos-pl-Email" varchar,
"ContactInfos-pl-Address" varchar,
"ContactInfos-pl-Surname" varchar,
"ContactInfos-pl-ZipCode" varchar,
"ContactInfos-pl-Language" varchar,
"ContactInfos-pl-Faxnumber" varchar,
"ContactInfos-pl-Givenname" varchar,
"ContactInfos-pl-NamePrefix" varchar,
"ContactInfos-pl-CompanyName" varchar,
"ContactInfos-pl-CountryCode" varchar,
"ContactInfos-pl-CountryName" varchar,
"ContactInfos-pl-Phonenumber" varchar,
"ContactInfos-ru-Url" varchar,
"ContactInfos-ru-Vat" varchar,
"ContactInfos-ru-City" varchar,
"ContactInfos-ru-Email" varchar,
"ContactInfos-ru-Address" varchar,
"ContactInfos-ru-Surname" varchar,
"ContactInfos-ru-ZipCode" varchar,
"ContactInfos-ru-Language" varchar,
"ContactInfos-ru-Faxnumber" varchar,
"ContactInfos-ru-Givenname" varchar,
"ContactInfos-ru-NamePrefix" varchar,
"ContactInfos-ru-CompanyName" varchar,
"ContactInfos-ru-CountryCode" varchar,
"ContactInfos-ru-CountryName" varchar,
"ContactInfos-ru-Phonenumber" varchar,
"DetailThemed-cs-Language" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Winter-Title" varchar,
"DetailThemed-cs-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-de-Language" varchar,
"DetailThemed-de-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-de-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-de-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-de-DetailsThemed-Winter-Title" varchar,
"DetailThemed-de-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-de-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-en-Language" varchar,
"DetailThemed-en-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-en-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-en-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-en-DetailsThemed-Winter-Title" varchar,
"DetailThemed-en-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-en-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-fr-Language" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Winter-Title" varchar,
"DetailThemed-fr-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-it-Language" varchar,
"DetailThemed-it-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-it-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-it-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-it-DetailsThemed-Winter-Title" varchar,
"DetailThemed-it-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-it-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-nl-Language" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Winter-Title" varchar,
"DetailThemed-nl-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-pl-Language" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Winter-Title" varchar,
"DetailThemed-pl-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"DetailThemed-ru-Language" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-Title" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Sommer-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Winter-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Winter-Title" varchar,
"DetailThemed-ru-DetailsThemed-Winter-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Winter-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-Title" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Familienurlaub-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-Title" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaDesc" varchar,
"DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaTitle" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Title" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc" varchar,
"D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle" varchar,
"Detail-cs-Language" varchar,
"Detail-cs-GetThereText" varchar,
"Detail-cs-AdditionalText" varchar,
"Detail-de-Language" varchar,
"Detail-en-Language" varchar,
"Detail-en-GetThereText" varchar,
"Detail-en-AdditionalText" varchar,
"Detail-fr-Language" varchar,
"Detail-fr-GetThereText" varchar,
"Detail-fr-AdditionalText" varchar,
"Detail-it-Language" varchar,
"Detail-it-GetThereText" varchar,
"Detail-it-AdditionalText" varchar,
"Detail-nl-Language" varchar,
"Detail-nl-GetThereText" varchar,
"Detail-nl-AdditionalText" varchar,
"Detail-pl-Language" varchar,
"Detail-pl-GetThereText" varchar,
"Detail-pl-AdditionalText" varchar,
"Detail-ru-Language" varchar,
"Detail-ru-GetThereText" varchar,
"Detail-ru-AdditionalText" varchar,
"ContactInfos-cs-LogoUrl" varchar,
"ContactInfos-de-LogoUrl" varchar,
"ContactInfos-de-Faxnumber" varchar,
"ContactInfos-en-LogoUrl" varchar,
"ContactInfos-fr-LogoUrl" varchar,
"ContactInfos-it-LogoUrl" varchar,
"ContactInfos-nl-LogoUrl" varchar,
"ContactInfos-pl-LogoUrl" varchar,
"ContactInfos-ru-LogoUrl" varchar,
"DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-cs-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-cs-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-de-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-de-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-de-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-de-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-en-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-en-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-en-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-en-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-fr-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-fr-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-it-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-it-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-it-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-it-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-nl-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-nl-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-pl-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-pl-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Intro" varchar,
"DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Title" varchar,
"DetailThemed-ru-DetailsThemed-Wellness und Entspannung-MetaDesc" varchar,
"D-ru-DetailsThemed-Wellness und Entspannung-MetaTitle" varchar,
"Detail-de-GetThereText" varchar,
"ContactInfos-de-Givenname" varchar
);

ALTER TABLE "v_regionsopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_regionsopen_fn CASCADE;

CREATE FUNCTION v_regionsopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_regionsopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'CustomId' As varchar) AS "CustomId",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'VisibleInSearch' As bool) AS "VisibleInSearch",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'Header' As varchar) AS "Detail-cs-Header",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'MetaDesc' As varchar) AS "Detail-cs-MetaDesc",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'cs'->>'MetaTitle' As varchar) AS "Detail-cs-MetaTitle",
CAST(NEW."data"->'Detail'->'cs'->>'SubHeader' As varchar) AS "Detail-cs-SubHeader",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'MetaDesc' As varchar) AS "Detail-en-MetaDesc",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Header' As varchar) AS "Detail-fr-Header",
CAST(NEW."data"->'Detail'->'fr'->>'BaseText' As varchar) AS "Detail-fr-BaseText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaDesc' As varchar) AS "Detail-fr-MetaDesc",
CAST(NEW."data"->'Detail'->'fr'->>'IntroText' As varchar) AS "Detail-fr-IntroText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaTitle' As varchar) AS "Detail-fr-MetaTitle",
CAST(NEW."data"->'Detail'->'fr'->>'SubHeader' As varchar) AS "Detail-fr-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Header' As varchar) AS "Detail-nl-Header",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'MetaDesc' As varchar) AS "Detail-nl-MetaDesc",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'MetaTitle' As varchar) AS "Detail-nl-MetaTitle",
CAST(NEW."data"->'Detail'->'nl'->>'SubHeader' As varchar) AS "Detail-nl-SubHeader",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Header' As varchar) AS "Detail-pl-Header",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'MetaDesc' As varchar) AS "Detail-pl-MetaDesc",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'MetaTitle' As varchar) AS "Detail-pl-MetaTitle",
CAST(NEW."data"->'Detail'->'pl'->>'SubHeader' As varchar) AS "Detail-pl-SubHeader",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Header' As varchar) AS "Detail-ru-Header",
CAST(NEW."data"->'Detail'->'ru'->>'BaseText' As varchar) AS "Detail-ru-BaseText",
CAST(NEW."data"->'Detail'->'ru'->>'MetaDesc' As varchar) AS "Detail-ru-MetaDesc",
CAST(NEW."data"->'Detail'->'ru'->>'IntroText' As varchar) AS "Detail-ru-IntroText",
CAST(NEW."data"->'Detail'->'ru'->>'MetaTitle' As varchar) AS "Detail-ru-MetaTitle",
CAST(NEW."data"->'Detail'->'ru'->>'SubHeader' As varchar) AS "Detail-ru-SubHeader",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Url' As varchar) AS "ContactInfos-cs-Url",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Vat' As varchar) AS "ContactInfos-cs-Vat",
CAST(NEW."data"->'ContactInfos'->'cs'->>'City' As varchar) AS "ContactInfos-cs-City",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Email' As varchar) AS "ContactInfos-cs-Email",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Address' As varchar) AS "ContactInfos-cs-Address",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Surname' As varchar) AS "ContactInfos-cs-Surname",
CAST(NEW."data"->'ContactInfos'->'cs'->>'ZipCode' As varchar) AS "ContactInfos-cs-ZipCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Language' As varchar) AS "ContactInfos-cs-Language",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Faxnumber' As varchar) AS "ContactInfos-cs-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Givenname' As varchar) AS "ContactInfos-cs-Givenname",
CAST(NEW."data"->'ContactInfos'->'cs'->>'NamePrefix' As varchar) AS "ContactInfos-cs-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CompanyName' As varchar) AS "ContactInfos-cs-CompanyName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryCode' As varchar) AS "ContactInfos-cs-CountryCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryName' As varchar) AS "ContactInfos-cs-CountryName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Phonenumber' As varchar) AS "ContactInfos-cs-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'Vat' As varchar) AS "ContactInfos-en-Vat",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'Surname' As varchar) AS "ContactInfos-en-Surname",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Faxnumber' As varchar) AS "ContactInfos-en-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Givenname' As varchar) AS "ContactInfos-en-Givenname",
CAST(NEW."data"->'ContactInfos'->'en'->>'NamePrefix' As varchar) AS "ContactInfos-en-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Url' As varchar) AS "ContactInfos-fr-Url",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Vat' As varchar) AS "ContactInfos-fr-Vat",
CAST(NEW."data"->'ContactInfos'->'fr'->>'City' As varchar) AS "ContactInfos-fr-City",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Email' As varchar) AS "ContactInfos-fr-Email",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Address' As varchar) AS "ContactInfos-fr-Address",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Surname' As varchar) AS "ContactInfos-fr-Surname",
CAST(NEW."data"->'ContactInfos'->'fr'->>'ZipCode' As varchar) AS "ContactInfos-fr-ZipCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Language' As varchar) AS "ContactInfos-fr-Language",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Faxnumber' As varchar) AS "ContactInfos-fr-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Givenname' As varchar) AS "ContactInfos-fr-Givenname",
CAST(NEW."data"->'ContactInfos'->'fr'->>'NamePrefix' As varchar) AS "ContactInfos-fr-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CompanyName' As varchar) AS "ContactInfos-fr-CompanyName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryCode' As varchar) AS "ContactInfos-fr-CountryCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryName' As varchar) AS "ContactInfos-fr-CountryName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Phonenumber' As varchar) AS "ContactInfos-fr-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'Vat' As varchar) AS "ContactInfos-it-Vat",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'Surname' As varchar) AS "ContactInfos-it-Surname",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'Faxnumber' As varchar) AS "ContactInfos-it-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Givenname' As varchar) AS "ContactInfos-it-Givenname",
CAST(NEW."data"->'ContactInfos'->'it'->>'NamePrefix' As varchar) AS "ContactInfos-it-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Url' As varchar) AS "ContactInfos-nl-Url",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Vat' As varchar) AS "ContactInfos-nl-Vat",
CAST(NEW."data"->'ContactInfos'->'nl'->>'City' As varchar) AS "ContactInfos-nl-City",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Email' As varchar) AS "ContactInfos-nl-Email",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Address' As varchar) AS "ContactInfos-nl-Address",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Surname' As varchar) AS "ContactInfos-nl-Surname",
CAST(NEW."data"->'ContactInfos'->'nl'->>'ZipCode' As varchar) AS "ContactInfos-nl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Language' As varchar) AS "ContactInfos-nl-Language",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Faxnumber' As varchar) AS "ContactInfos-nl-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Givenname' As varchar) AS "ContactInfos-nl-Givenname",
CAST(NEW."data"->'ContactInfos'->'nl'->>'NamePrefix' As varchar) AS "ContactInfos-nl-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CompanyName' As varchar) AS "ContactInfos-nl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryCode' As varchar) AS "ContactInfos-nl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryName' As varchar) AS "ContactInfos-nl-CountryName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Phonenumber' As varchar) AS "ContactInfos-nl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Url' As varchar) AS "ContactInfos-pl-Url",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Vat' As varchar) AS "ContactInfos-pl-Vat",
CAST(NEW."data"->'ContactInfos'->'pl'->>'City' As varchar) AS "ContactInfos-pl-City",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Email' As varchar) AS "ContactInfos-pl-Email",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Address' As varchar) AS "ContactInfos-pl-Address",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Surname' As varchar) AS "ContactInfos-pl-Surname",
CAST(NEW."data"->'ContactInfos'->'pl'->>'ZipCode' As varchar) AS "ContactInfos-pl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Language' As varchar) AS "ContactInfos-pl-Language",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Faxnumber' As varchar) AS "ContactInfos-pl-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Givenname' As varchar) AS "ContactInfos-pl-Givenname",
CAST(NEW."data"->'ContactInfos'->'pl'->>'NamePrefix' As varchar) AS "ContactInfos-pl-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CompanyName' As varchar) AS "ContactInfos-pl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryCode' As varchar) AS "ContactInfos-pl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryName' As varchar) AS "ContactInfos-pl-CountryName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Phonenumber' As varchar) AS "ContactInfos-pl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Url' As varchar) AS "ContactInfos-ru-Url",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Vat' As varchar) AS "ContactInfos-ru-Vat",
CAST(NEW."data"->'ContactInfos'->'ru'->>'City' As varchar) AS "ContactInfos-ru-City",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Email' As varchar) AS "ContactInfos-ru-Email",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Address' As varchar) AS "ContactInfos-ru-Address",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Surname' As varchar) AS "ContactInfos-ru-Surname",
CAST(NEW."data"->'ContactInfos'->'ru'->>'ZipCode' As varchar) AS "ContactInfos-ru-ZipCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Language' As varchar) AS "ContactInfos-ru-Language",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Faxnumber' As varchar) AS "ContactInfos-ru-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Givenname' As varchar) AS "ContactInfos-ru-Givenname",
CAST(NEW."data"->'ContactInfos'->'ru'->>'NamePrefix' As varchar) AS "ContactInfos-ru-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CompanyName' As varchar) AS "ContactInfos-ru-CompanyName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryCode' As varchar) AS "ContactInfos-ru-CountryCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryName' As varchar) AS "ContactInfos-ru-CountryName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Phonenumber' As varchar) AS "ContactInfos-ru-Phonenumber",
CAST(NEW."data"->'DetailThemed'->'cs'->>'Language' As varchar) AS "DetailThemed-cs-Language",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-cs-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-c-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->>'Language' As varchar) AS "DetailThemed-de-Language",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-de-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-d-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->>'Language' As varchar) AS "DetailThemed-en-Language",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-en-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-e-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->>'Language' As varchar) AS "DetailThemed-fr-Language",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-fr-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-f-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->>'Language' As varchar) AS "DetailThemed-it-Language",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-it-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-i-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->>'Language' As varchar) AS "DetailThemed-nl-Language",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-nl-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-n-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->>'Language' As varchar) AS "DetailThemed-pl-Language",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-pl-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-p-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->>'Language' As varchar) AS "DetailThemed-ru-Language",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Sommer'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Sommer-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Winter'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Winter-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Familienurlaub'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Familienurlaub-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Essen und Trinken'->>'MetaTitle' As varchar) AS "DetailThemed-ru-DetailsThemed-Essen und Trinken-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Intro' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'Title' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaDesc' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Kultur und Sehenswürdigkeiten'->>'MetaTitle' As varchar) AS "D-r-DetailsThemed-Kultur und Sehenswürdigkeiten-MetaTitle",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'cs'->>'GetThereText' As varchar) AS "Detail-cs-GetThereText",
CAST(NEW."data"->'Detail'->'cs'->>'AdditionalText' As varchar) AS "Detail-cs-AdditionalText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'AdditionalText' As varchar) AS "Detail-en-AdditionalText",
CAST(NEW."data"->'Detail'->'fr'->>'Language' As varchar) AS "Detail-fr-Language",
CAST(NEW."data"->'Detail'->'fr'->>'GetThereText' As varchar) AS "Detail-fr-GetThereText",
CAST(NEW."data"->'Detail'->'fr'->>'AdditionalText' As varchar) AS "Detail-fr-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'AdditionalText' As varchar) AS "Detail-it-AdditionalText",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'nl'->>'GetThereText' As varchar) AS "Detail-nl-GetThereText",
CAST(NEW."data"->'Detail'->'nl'->>'AdditionalText' As varchar) AS "Detail-nl-AdditionalText",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'pl'->>'AdditionalText' As varchar) AS "Detail-pl-AdditionalText",
CAST(NEW."data"->'Detail'->'ru'->>'Language' As varchar) AS "Detail-ru-Language",
CAST(NEW."data"->'Detail'->'ru'->>'GetThereText' As varchar) AS "Detail-ru-GetThereText",
CAST(NEW."data"->'Detail'->'ru'->>'AdditionalText' As varchar) AS "Detail-ru-AdditionalText",
CAST(NEW."data"->'ContactInfos'->'cs'->>'LogoUrl' As varchar) AS "ContactInfos-cs-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'de'->>'LogoUrl' As varchar) AS "ContactInfos-de-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'de'->>'Faxnumber' As varchar) AS "ContactInfos-de-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'LogoUrl' As varchar) AS "ContactInfos-en-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'fr'->>'LogoUrl' As varchar) AS "ContactInfos-fr-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'it'->>'LogoUrl' As varchar) AS "ContactInfos-it-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'nl'->>'LogoUrl' As varchar) AS "ContactInfos-nl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'pl'->>'LogoUrl' As varchar) AS "ContactInfos-pl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'ru'->>'LogoUrl' As varchar) AS "ContactInfos-ru-LogoUrl",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-cs-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-cs-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'cs'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-cs-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-de-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-de-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-de-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'de'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-de-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-en-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-en-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-en-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'en'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-en-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-fr-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-fr-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'fr'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-fr-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-it-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-it-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-it-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'it'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-it-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-nl-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-nl-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'nl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-nl-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-pl-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-pl-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'pl'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-pl-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'Intro' As varchar) AS "DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Intro",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'Title' As varchar) AS "DetailThemed-ru-DetailsThemed-Wellness und Entspannung-Title",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaDesc' As varchar) AS "DetailThemed-ru-DetailsThemed-Wellness und Entspannung-MetaDesc",
CAST(NEW."data"->'DetailThemed'->'ru'->'DetailsThemed'->'Wellness und Entspannung'->>'MetaTitle' As varchar) AS "D-ru-DetailsThemed-Wellness und Entspannung-MetaTitle",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'ContactInfos'->'de'->>'Givenname' As varchar) AS "ContactInfos-de-Givenname";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regionsopen
    BEFORE INSERT
    ON regionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_regionsopen_fn();

ALTER TABLE regionsopen
    ENABLE ALWAYS TRIGGER t_v_regionsopen;



DROP TABLE IF EXISTS "v_regionsopen_SmgTags";

CREATE TABLE  "v_regionsopen_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_regionsopen_SmgTags_fn CASCADE;

CREATE FUNCTION v_regionsopen_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regionsopen_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regionsopen_SmgTags
    BEFORE INSERT
    ON regionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_regionsopen_SmgTags_fn();

ALTER TABLE regionsopen
    ENABLE ALWAYS TRIGGER t_v_regionsopen_SmgTags;



DROP TABLE IF EXISTS "v_regionsopen_SkiareaIds";

CREATE TABLE  "v_regionsopen_SkiareaIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_regionsopen_SkiareaIds_fn CASCADE;

CREATE FUNCTION v_regionsopen_SkiareaIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regionsopen_SkiareaIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SkiareaIds') AS "data"
        WHERE NEW."data" -> 'SkiareaIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regionsopen_SkiareaIds
    BEFORE INSERT
    ON regionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_regionsopen_SkiareaIds_fn();

ALTER TABLE regionsopen
    ENABLE ALWAYS TRIGGER t_v_regionsopen_SkiareaIds;



DROP TABLE IF EXISTS "v_regionsopen_HasLanguage";

CREATE TABLE  "v_regionsopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_regionsopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_regionsopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regionsopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regionsopen_HasLanguage
    BEFORE INSERT
    ON regionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_regionsopen_HasLanguage_fn();

ALTER TABLE regionsopen
    ENABLE ALWAYS TRIGGER t_v_regionsopen_HasLanguage;



DROP TABLE IF EXISTS "v_regionsopen_PublishedOn";

CREATE TABLE  "v_regionsopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_regionsopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_regionsopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regionsopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regionsopen_PublishedOn
    BEFORE INSERT
    ON regionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_regionsopen_PublishedOn_fn();

ALTER TABLE regionsopen
    ENABLE ALWAYS TRIGGER t_v_regionsopen_PublishedOn;



DROP TABLE IF EXISTS "v_regionsopen_ODHTags";

CREATE TABLE "v_regionsopen_ODHTags" (
"regionsopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_regionsopen_ODHTags_fn CASCADE;

CREATE FUNCTION v_regionsopen_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regionsopen_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "regionsopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regionsopen_ODHTags
    BEFORE INSERT
    ON regionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_regionsopen_ODHTags_fn();

ALTER TABLE regionsopen
    ENABLE ALWAYS TRIGGER t_v_regionsopen_ODHTags;



DROP TABLE IF EXISTS "v_regionsopen_SkiAreas";

CREATE TABLE "v_regionsopen_SkiAreas" (
"regionsopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_regionsopen_SkiAreas_fn CASCADE;

CREATE FUNCTION v_regionsopen_SkiAreas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regionsopen_SkiAreas"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'SkiAreas') AS "data"
        WHERE NEW."data" -> 'SkiAreas' != 'null')
    SELECT "Id" AS "regionsopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regionsopen_SkiAreas
    BEFORE INSERT
    ON regionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_regionsopen_SkiAreas_fn();

ALTER TABLE regionsopen
    ENABLE ALWAYS TRIGGER t_v_regionsopen_SkiAreas;



DROP TABLE IF EXISTS "v_regionsopen_Webcam";

CREATE TABLE "v_regionsopen_Webcam" (
"regionsopen_Id" varchar,
"Source" varchar,
"WebcamId" varchar,
"Webcamurl" varchar,
"GpsInfo-Gpstype" varchar,
"GpsInfo-Latitude" float,
"GpsInfo-Longitude" float,
"GpsInfo-AltitudeUnitofMeasure" varchar,
"Webcamname-de" varchar,
"Webcamname-it" varchar
);

DROP FUNCTION IF EXISTS v_regionsopen_Webcam_fn CASCADE;

CREATE FUNCTION v_regionsopen_Webcam_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_regionsopen_Webcam"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Webcam') AS "data"
        WHERE NEW."data" -> 'Webcam' != 'null')
    SELECT "Id" AS "regionsopen_Id", CAST("data"->>'Source' As varchar) AS "Source",
CAST("data"->>'WebcamId' As varchar) AS "WebcamId",
CAST("data"->>'Webcamurl' As varchar) AS "Webcamurl",
CAST("data"->'GpsInfo'->>'Gpstype' As varchar) AS "GpsInfo-Gpstype",
CAST("data"->'GpsInfo'->>'Latitude' As float) AS "GpsInfo-Latitude",
CAST("data"->'GpsInfo'->>'Longitude' As float) AS "GpsInfo-Longitude",
CAST("data"->'GpsInfo'->>'AltitudeUnitofMeasure' As varchar) AS "GpsInfo-AltitudeUnitofMeasure",
CAST("data"->'Webcamname'->>'de' As varchar) AS "Webcamname-de",
CAST("data"->'Webcamname'->>'it' As varchar) AS "Webcamname-it"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_regionsopen_Webcam
    BEFORE INSERT
    ON regionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_regionsopen_Webcam_fn();

ALTER TABLE regionsopen
    ENABLE ALWAYS TRIGGER t_v_regionsopen_Webcam;



DROP TABLE IF EXISTS "v_skiareas";

CREATE TABLE "v_skiareas" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Latitude" float,
"LiftCount" varchar,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"AltitudeTo" integer,
"LastChange" varchar,
"SlopeKmRed" varchar,
"SkiRegionId" varchar,
"SlopeKmBlue" varchar,
"AltitudeFrom" integer,
"SlopeKmBlack" varchar,
"TotalSlopeKm" varchar,
"SkiAreaMapURL" varchar,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-Header" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-Language" varchar,
"Detail-cs-MetaDesc" varchar,
"Detail-cs-IntroText" varchar,
"Detail-cs-MetaTitle" varchar,
"Detail-cs-SubHeader" varchar,
"Detail-de-Title" varchar,
"Detail-de-Header" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-de-SubHeader" varchar,
"Detail-en-Title" varchar,
"Detail-en-Header" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-Language" varchar,
"Detail-en-MetaDesc" varchar,
"Detail-en-IntroText" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-en-SubHeader" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Header" varchar,
"Detail-fr-BaseText" varchar,
"Detail-fr-Language" varchar,
"Detail-fr-MetaDesc" varchar,
"Detail-fr-IntroText" varchar,
"Detail-fr-MetaTitle" varchar,
"Detail-fr-SubHeader" varchar,
"Detail-it-Title" varchar,
"Detail-it-Header" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-Language" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-MetaTitle" varchar,
"Detail-it-SubHeader" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-Header" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-Language" varchar,
"Detail-nl-MetaDesc" varchar,
"Detail-nl-IntroText" varchar,
"Detail-nl-MetaTitle" varchar,
"Detail-nl-SubHeader" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-Header" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-Language" varchar,
"Detail-pl-MetaDesc" varchar,
"Detail-pl-IntroText" varchar,
"Detail-pl-MetaTitle" varchar,
"Detail-pl-SubHeader" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Header" varchar,
"Detail-ru-BaseText" varchar,
"Detail-ru-Language" varchar,
"Detail-ru-MetaDesc" varchar,
"Detail-ru-IntroText" varchar,
"Detail-ru-MetaTitle" varchar,
"Detail-ru-SubHeader" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"SkiRegion-Id" varchar,
"SkiRegion-Self" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-cs-Url" varchar,
"ContactInfos-cs-City" varchar,
"ContactInfos-cs-Email" varchar,
"ContactInfos-cs-Address" varchar,
"ContactInfos-cs-LogoUrl" varchar,
"ContactInfos-cs-ZipCode" varchar,
"ContactInfos-cs-Language" varchar,
"ContactInfos-cs-CompanyName" varchar,
"ContactInfos-cs-CountryCode" varchar,
"ContactInfos-cs-CountryName" varchar,
"ContactInfos-cs-Phonenumber" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-LogoUrl" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-LogoUrl" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-fr-Url" varchar,
"ContactInfos-fr-City" varchar,
"ContactInfos-fr-Email" varchar,
"ContactInfos-fr-Address" varchar,
"ContactInfos-fr-LogoUrl" varchar,
"ContactInfos-fr-ZipCode" varchar,
"ContactInfos-fr-Language" varchar,
"ContactInfos-fr-CompanyName" varchar,
"ContactInfos-fr-CountryCode" varchar,
"ContactInfos-fr-CountryName" varchar,
"ContactInfos-fr-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-LogoUrl" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"ContactInfos-nl-Url" varchar,
"ContactInfos-nl-City" varchar,
"ContactInfos-nl-Email" varchar,
"ContactInfos-nl-Address" varchar,
"ContactInfos-nl-LogoUrl" varchar,
"ContactInfos-nl-ZipCode" varchar,
"ContactInfos-nl-Language" varchar,
"ContactInfos-nl-CompanyName" varchar,
"ContactInfos-nl-CountryCode" varchar,
"ContactInfos-nl-CountryName" varchar,
"ContactInfos-nl-Phonenumber" varchar,
"ContactInfos-pl-Url" varchar,
"ContactInfos-pl-City" varchar,
"ContactInfos-pl-Email" varchar,
"ContactInfos-pl-Address" varchar,
"ContactInfos-pl-LogoUrl" varchar,
"ContactInfos-pl-ZipCode" varchar,
"ContactInfos-pl-Language" varchar,
"ContactInfos-pl-CompanyName" varchar,
"ContactInfos-pl-CountryCode" varchar,
"ContactInfos-pl-CountryName" varchar,
"ContactInfos-pl-Phonenumber" varchar,
"ContactInfos-ru-Url" varchar,
"ContactInfos-ru-City" varchar,
"ContactInfos-ru-Email" varchar,
"ContactInfos-ru-Address" varchar,
"ContactInfos-ru-LogoUrl" varchar,
"ContactInfos-ru-ZipCode" varchar,
"ContactInfos-ru-Language" varchar,
"ContactInfos-ru-CompanyName" varchar,
"ContactInfos-ru-CountryCode" varchar,
"ContactInfos-ru-CountryName" varchar,
"ContactInfos-ru-Phonenumber" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"SkiRegionName-cs" varchar,
"SkiRegionName-de" varchar,
"SkiRegionName-en" varchar,
"SkiRegionName-fr" varchar,
"SkiRegionName-it" varchar,
"SkiRegionName-nl" varchar,
"SkiRegionName-pl" varchar,
"SkiRegionName-ru" varchar,
"Detail-en-GetThereText" varchar,
"Detail-fr-GetThereText" varchar,
"Detail-pl-GetThereText" varchar,
"Detail-ru-GetThereText" varchar,
"Detail-it-GetThereText" varchar,
"Altitude" float,
"GpsPoints-position-Altitude" float
);

ALTER TABLE "v_skiareas" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_skiareas_fn CASCADE;

CREATE FUNCTION v_skiareas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_skiareas
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'LiftCount' As varchar) AS "LiftCount",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'AltitudeTo' As integer) AS "AltitudeTo",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'SlopeKmRed' As varchar) AS "SlopeKmRed",
CAST(NEW."data"->>'SkiRegionId' As varchar) AS "SkiRegionId",
CAST(NEW."data"->>'SlopeKmBlue' As varchar) AS "SlopeKmBlue",
CAST(NEW."data"->>'AltitudeFrom' As integer) AS "AltitudeFrom",
CAST(NEW."data"->>'SlopeKmBlack' As varchar) AS "SlopeKmBlack",
CAST(NEW."data"->>'TotalSlopeKm' As varchar) AS "TotalSlopeKm",
CAST(NEW."data"->>'SkiAreaMapURL' As varchar) AS "SkiAreaMapURL",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'Header' As varchar) AS "Detail-cs-Header",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'cs'->>'MetaDesc' As varchar) AS "Detail-cs-MetaDesc",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'cs'->>'MetaTitle' As varchar) AS "Detail-cs-MetaTitle",
CAST(NEW."data"->'Detail'->'cs'->>'SubHeader' As varchar) AS "Detail-cs-SubHeader",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'MetaDesc' As varchar) AS "Detail-en-MetaDesc",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Header' As varchar) AS "Detail-fr-Header",
CAST(NEW."data"->'Detail'->'fr'->>'BaseText' As varchar) AS "Detail-fr-BaseText",
CAST(NEW."data"->'Detail'->'fr'->>'Language' As varchar) AS "Detail-fr-Language",
CAST(NEW."data"->'Detail'->'fr'->>'MetaDesc' As varchar) AS "Detail-fr-MetaDesc",
CAST(NEW."data"->'Detail'->'fr'->>'IntroText' As varchar) AS "Detail-fr-IntroText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaTitle' As varchar) AS "Detail-fr-MetaTitle",
CAST(NEW."data"->'Detail'->'fr'->>'SubHeader' As varchar) AS "Detail-fr-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Header' As varchar) AS "Detail-nl-Header",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'nl'->>'MetaDesc' As varchar) AS "Detail-nl-MetaDesc",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'MetaTitle' As varchar) AS "Detail-nl-MetaTitle",
CAST(NEW."data"->'Detail'->'nl'->>'SubHeader' As varchar) AS "Detail-nl-SubHeader",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Header' As varchar) AS "Detail-pl-Header",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'MetaDesc' As varchar) AS "Detail-pl-MetaDesc",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'MetaTitle' As varchar) AS "Detail-pl-MetaTitle",
CAST(NEW."data"->'Detail'->'pl'->>'SubHeader' As varchar) AS "Detail-pl-SubHeader",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Header' As varchar) AS "Detail-ru-Header",
CAST(NEW."data"->'Detail'->'ru'->>'BaseText' As varchar) AS "Detail-ru-BaseText",
CAST(NEW."data"->'Detail'->'ru'->>'Language' As varchar) AS "Detail-ru-Language",
CAST(NEW."data"->'Detail'->'ru'->>'MetaDesc' As varchar) AS "Detail-ru-MetaDesc",
CAST(NEW."data"->'Detail'->'ru'->>'IntroText' As varchar) AS "Detail-ru-IntroText",
CAST(NEW."data"->'Detail'->'ru'->>'MetaTitle' As varchar) AS "Detail-ru-MetaTitle",
CAST(NEW."data"->'Detail'->'ru'->>'SubHeader' As varchar) AS "Detail-ru-SubHeader",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'SkiRegion'->>'Id' As varchar) AS "SkiRegion-Id",
CAST(NEW."data"->'SkiRegion'->>'Self' As varchar) AS "SkiRegion-Self",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Url' As varchar) AS "ContactInfos-cs-Url",
CAST(NEW."data"->'ContactInfos'->'cs'->>'City' As varchar) AS "ContactInfos-cs-City",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Email' As varchar) AS "ContactInfos-cs-Email",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Address' As varchar) AS "ContactInfos-cs-Address",
CAST(NEW."data"->'ContactInfos'->'cs'->>'LogoUrl' As varchar) AS "ContactInfos-cs-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'cs'->>'ZipCode' As varchar) AS "ContactInfos-cs-ZipCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Language' As varchar) AS "ContactInfos-cs-Language",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CompanyName' As varchar) AS "ContactInfos-cs-CompanyName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryCode' As varchar) AS "ContactInfos-cs-CountryCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryName' As varchar) AS "ContactInfos-cs-CountryName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Phonenumber' As varchar) AS "ContactInfos-cs-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'LogoUrl' As varchar) AS "ContactInfos-de-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'LogoUrl' As varchar) AS "ContactInfos-en-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Url' As varchar) AS "ContactInfos-fr-Url",
CAST(NEW."data"->'ContactInfos'->'fr'->>'City' As varchar) AS "ContactInfos-fr-City",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Email' As varchar) AS "ContactInfos-fr-Email",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Address' As varchar) AS "ContactInfos-fr-Address",
CAST(NEW."data"->'ContactInfos'->'fr'->>'LogoUrl' As varchar) AS "ContactInfos-fr-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'fr'->>'ZipCode' As varchar) AS "ContactInfos-fr-ZipCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Language' As varchar) AS "ContactInfos-fr-Language",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CompanyName' As varchar) AS "ContactInfos-fr-CompanyName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryCode' As varchar) AS "ContactInfos-fr-CountryCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryName' As varchar) AS "ContactInfos-fr-CountryName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Phonenumber' As varchar) AS "ContactInfos-fr-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'LogoUrl' As varchar) AS "ContactInfos-it-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Url' As varchar) AS "ContactInfos-nl-Url",
CAST(NEW."data"->'ContactInfos'->'nl'->>'City' As varchar) AS "ContactInfos-nl-City",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Email' As varchar) AS "ContactInfos-nl-Email",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Address' As varchar) AS "ContactInfos-nl-Address",
CAST(NEW."data"->'ContactInfos'->'nl'->>'LogoUrl' As varchar) AS "ContactInfos-nl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'nl'->>'ZipCode' As varchar) AS "ContactInfos-nl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Language' As varchar) AS "ContactInfos-nl-Language",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CompanyName' As varchar) AS "ContactInfos-nl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryCode' As varchar) AS "ContactInfos-nl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryName' As varchar) AS "ContactInfos-nl-CountryName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Phonenumber' As varchar) AS "ContactInfos-nl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Url' As varchar) AS "ContactInfos-pl-Url",
CAST(NEW."data"->'ContactInfos'->'pl'->>'City' As varchar) AS "ContactInfos-pl-City",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Email' As varchar) AS "ContactInfos-pl-Email",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Address' As varchar) AS "ContactInfos-pl-Address",
CAST(NEW."data"->'ContactInfos'->'pl'->>'LogoUrl' As varchar) AS "ContactInfos-pl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'pl'->>'ZipCode' As varchar) AS "ContactInfos-pl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Language' As varchar) AS "ContactInfos-pl-Language",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CompanyName' As varchar) AS "ContactInfos-pl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryCode' As varchar) AS "ContactInfos-pl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryName' As varchar) AS "ContactInfos-pl-CountryName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Phonenumber' As varchar) AS "ContactInfos-pl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Url' As varchar) AS "ContactInfos-ru-Url",
CAST(NEW."data"->'ContactInfos'->'ru'->>'City' As varchar) AS "ContactInfos-ru-City",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Email' As varchar) AS "ContactInfos-ru-Email",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Address' As varchar) AS "ContactInfos-ru-Address",
CAST(NEW."data"->'ContactInfos'->'ru'->>'LogoUrl' As varchar) AS "ContactInfos-ru-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'ru'->>'ZipCode' As varchar) AS "ContactInfos-ru-ZipCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Language' As varchar) AS "ContactInfos-ru-Language",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CompanyName' As varchar) AS "ContactInfos-ru-CompanyName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryCode' As varchar) AS "ContactInfos-ru-CountryCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryName' As varchar) AS "ContactInfos-ru-CountryName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Phonenumber' As varchar) AS "ContactInfos-ru-Phonenumber",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'SkiRegionName'->>'cs' As varchar) AS "SkiRegionName-cs",
CAST(NEW."data"->'SkiRegionName'->>'de' As varchar) AS "SkiRegionName-de",
CAST(NEW."data"->'SkiRegionName'->>'en' As varchar) AS "SkiRegionName-en",
CAST(NEW."data"->'SkiRegionName'->>'fr' As varchar) AS "SkiRegionName-fr",
CAST(NEW."data"->'SkiRegionName'->>'it' As varchar) AS "SkiRegionName-it",
CAST(NEW."data"->'SkiRegionName'->>'nl' As varchar) AS "SkiRegionName-nl",
CAST(NEW."data"->'SkiRegionName'->>'pl' As varchar) AS "SkiRegionName-pl",
CAST(NEW."data"->'SkiRegionName'->>'ru' As varchar) AS "SkiRegionName-ru",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'fr'->>'GetThereText' As varchar) AS "Detail-fr-GetThereText",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'ru'->>'GetThereText' As varchar) AS "Detail-ru-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas;



DROP TABLE IF EXISTS "v_skiareas_AreaId";

CREATE TABLE  "v_skiareas_AreaId" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_AreaId_fn CASCADE;

CREATE FUNCTION v_skiareas_AreaId_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_AreaId"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'AreaId') AS "data"
        WHERE NEW."data" -> 'AreaId' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_AreaId
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_AreaId_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_AreaId;



DROP TABLE IF EXISTS "v_skiareas_AreaIds";

CREATE TABLE  "v_skiareas_AreaIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_AreaIds_fn CASCADE;

CREATE FUNCTION v_skiareas_AreaIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_AreaIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'AreaIds') AS "data"
        WHERE NEW."data" -> 'AreaIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_AreaIds
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_AreaIds_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_AreaIds;



DROP TABLE IF EXISTS "v_skiareas_SmgTags";

CREATE TABLE  "v_skiareas_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_SmgTags_fn CASCADE;

CREATE FUNCTION v_skiareas_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_SmgTags
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_SmgTags_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_SmgTags;



DROP TABLE IF EXISTS "v_skiareas_RegionIds";

CREATE TABLE  "v_skiareas_RegionIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_RegionIds_fn CASCADE;

CREATE FUNCTION v_skiareas_RegionIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_RegionIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'RegionIds') AS "data"
        WHERE NEW."data" -> 'RegionIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_RegionIds
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_RegionIds_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_RegionIds;



DROP TABLE IF EXISTS "v_skiareas_HasLanguage";

CREATE TABLE  "v_skiareas_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_HasLanguage_fn CASCADE;

CREATE FUNCTION v_skiareas_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_HasLanguage
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_HasLanguage_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_HasLanguage;



DROP TABLE IF EXISTS "v_skiareas_PublishedOn";

CREATE TABLE  "v_skiareas_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_PublishedOn_fn CASCADE;

CREATE FUNCTION v_skiareas_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_PublishedOn
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_PublishedOn_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_PublishedOn;



DROP TABLE IF EXISTS "v_skiareas_TourismvereinIds";

CREATE TABLE  "v_skiareas_TourismvereinIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_TourismvereinIds_fn CASCADE;

CREATE FUNCTION v_skiareas_TourismvereinIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_TourismvereinIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'TourismvereinIds') AS "data"
        WHERE NEW."data" -> 'TourismvereinIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_TourismvereinIds
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_TourismvereinIds_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_TourismvereinIds;



DROP TABLE IF EXISTS "v_skiareas_Areas";

CREATE TABLE "v_skiareas_Areas" (
"skiareas_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_Areas_fn CASCADE;

CREATE FUNCTION v_skiareas_Areas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_Areas"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Areas') AS "data"
        WHERE NEW."data" -> 'Areas' != 'null')
    SELECT "Id" AS "skiareas_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_Areas
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_Areas_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_Areas;



DROP TABLE IF EXISTS "v_skiareas_ODHTags";

CREATE TABLE "v_skiareas_ODHTags" (
"skiareas_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_ODHTags_fn CASCADE;

CREATE FUNCTION v_skiareas_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "skiareas_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_ODHTags
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_ODHTags_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_ODHTags;



DROP TABLE IF EXISTS "v_skiareas_Regions";

CREATE TABLE "v_skiareas_Regions" (
"skiareas_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_Regions_fn CASCADE;

CREATE FUNCTION v_skiareas_Regions_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_Regions"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Regions') AS "data"
        WHERE NEW."data" -> 'Regions' != 'null')
    SELECT "Id" AS "skiareas_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_Regions
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_Regions_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_Regions;



DROP TABLE IF EXISTS "v_skiareas_ImageGallery";

CREATE TABLE "v_skiareas_ImageGallery" (
"skiareas_Id" varchar,
"Width" integer,
"Height" integer,
"ImageUrl" varchar,
"ImageName" varchar,
"ValidFrom" varchar,
"ImageSource" varchar,
"IsInGallery" bool,
"ListPosition" integer,
"ImageDesc-cs" varchar,
"ImageDesc-de" varchar,
"ImageDesc-en" varchar,
"ImageDesc-fr" varchar,
"ImageDesc-it" varchar,
"ImageDesc-nl" varchar,
"ImageDesc-pl" varchar,
"ImageDesc-ru" varchar,
"ImageTitle-cs" varchar,
"ImageTitle-de" varchar,
"ImageTitle-en" varchar,
"ImageTitle-fr" varchar,
"ImageTitle-it" varchar,
"ImageTitle-nl" varchar,
"ImageTitle-pl" varchar,
"ImageTitle-ru" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_ImageGallery_fn CASCADE;

CREATE FUNCTION v_skiareas_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "skiareas_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'ImageName' As varchar) AS "ImageName",
CAST("data"->>'ValidFrom' As varchar) AS "ValidFrom",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'ImageDesc'->>'cs' As varchar) AS "ImageDesc-cs",
CAST("data"->'ImageDesc'->>'de' As varchar) AS "ImageDesc-de",
CAST("data"->'ImageDesc'->>'en' As varchar) AS "ImageDesc-en",
CAST("data"->'ImageDesc'->>'fr' As varchar) AS "ImageDesc-fr",
CAST("data"->'ImageDesc'->>'it' As varchar) AS "ImageDesc-it",
CAST("data"->'ImageDesc'->>'nl' As varchar) AS "ImageDesc-nl",
CAST("data"->'ImageDesc'->>'pl' As varchar) AS "ImageDesc-pl",
CAST("data"->'ImageDesc'->>'ru' As varchar) AS "ImageDesc-ru",
CAST("data"->'ImageTitle'->>'cs' As varchar) AS "ImageTitle-cs",
CAST("data"->'ImageTitle'->>'de' As varchar) AS "ImageTitle-de",
CAST("data"->'ImageTitle'->>'en' As varchar) AS "ImageTitle-en",
CAST("data"->'ImageTitle'->>'fr' As varchar) AS "ImageTitle-fr",
CAST("data"->'ImageTitle'->>'it' As varchar) AS "ImageTitle-it",
CAST("data"->'ImageTitle'->>'nl' As varchar) AS "ImageTitle-nl",
CAST("data"->'ImageTitle'->>'pl' As varchar) AS "ImageTitle-pl",
CAST("data"->'ImageTitle'->>'ru' As varchar) AS "ImageTitle-ru"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_ImageGallery
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_ImageGallery_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_ImageGallery;



DROP TABLE IF EXISTS "v_skiareas_OperationSchedule";

CREATE TABLE "v_skiareas_OperationSchedule" (
"skiareas_Id" varchar,
"Stop" varchar,
"Type" varchar,
"Start" varchar,
"OperationscheduleName-cs" varchar,
"OperationscheduleName-de" varchar,
"OperationscheduleName-en" varchar,
"OperationscheduleName-it" varchar,
"OperationscheduleName-nl" varchar,
"OperationscheduleName-pl" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_OperationSchedule_fn CASCADE;

CREATE FUNCTION v_skiareas_OperationSchedule_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_OperationSchedule"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'OperationSchedule') AS "data"
        WHERE NEW."data" -> 'OperationSchedule' != 'null')
    SELECT "Id" AS "skiareas_Id", CAST("data"->>'Stop' As varchar) AS "Stop",
CAST("data"->>'Type' As varchar) AS "Type",
CAST("data"->>'Start' As varchar) AS "Start",
CAST("data"->'OperationscheduleName'->>'cs' As varchar) AS "OperationscheduleName-cs",
CAST("data"->'OperationscheduleName'->>'de' As varchar) AS "OperationscheduleName-de",
CAST("data"->'OperationscheduleName'->>'en' As varchar) AS "OperationscheduleName-en",
CAST("data"->'OperationscheduleName'->>'it' As varchar) AS "OperationscheduleName-it",
CAST("data"->'OperationscheduleName'->>'nl' As varchar) AS "OperationscheduleName-nl",
CAST("data"->'OperationscheduleName'->>'pl' As varchar) AS "OperationscheduleName-pl"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_OperationSchedule
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_OperationSchedule_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_OperationSchedule;



DROP TABLE IF EXISTS "v_skiareas_TourismAssociations";

CREATE TABLE "v_skiareas_TourismAssociations" (
"skiareas_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_TourismAssociations_fn CASCADE;

CREATE FUNCTION v_skiareas_TourismAssociations_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_TourismAssociations"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'TourismAssociations') AS "data"
        WHERE NEW."data" -> 'TourismAssociations' != 'null')
    SELECT "Id" AS "skiareas_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_TourismAssociations
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_TourismAssociations_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_TourismAssociations;



DROP TABLE IF EXISTS "v_skiareas_Webcam";

CREATE TABLE "v_skiareas_Webcam" (
"skiareas_Id" varchar,
"Source" varchar,
"WebcamId" varchar,
"Webcamurl" varchar,
"Webcamname-cs" varchar,
"Webcamname-de" varchar,
"Webcamname-en" varchar,
"Webcamname-fr" varchar,
"Webcamname-it" varchar,
"Webcamname-nl" varchar,
"Webcamname-pl" varchar,
"Webcamname-ru" varchar,
"GpsInfo-Gpstype" varchar,
"GpsInfo-Latitude" float,
"GpsInfo-Longitude" float,
"GpsInfo-AltitudeUnitofMeasure" varchar,
"ListPosition" integer
);

DROP FUNCTION IF EXISTS v_skiareas_Webcam_fn CASCADE;

CREATE FUNCTION v_skiareas_Webcam_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_Webcam"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Webcam') AS "data"
        WHERE NEW."data" -> 'Webcam' != 'null')
    SELECT "Id" AS "skiareas_Id", CAST("data"->>'Source' As varchar) AS "Source",
CAST("data"->>'WebcamId' As varchar) AS "WebcamId",
CAST("data"->>'Webcamurl' As varchar) AS "Webcamurl",
CAST("data"->'Webcamname'->>'cs' As varchar) AS "Webcamname-cs",
CAST("data"->'Webcamname'->>'de' As varchar) AS "Webcamname-de",
CAST("data"->'Webcamname'->>'en' As varchar) AS "Webcamname-en",
CAST("data"->'Webcamname'->>'fr' As varchar) AS "Webcamname-fr",
CAST("data"->'Webcamname'->>'it' As varchar) AS "Webcamname-it",
CAST("data"->'Webcamname'->>'nl' As varchar) AS "Webcamname-nl",
CAST("data"->'Webcamname'->>'pl' As varchar) AS "Webcamname-pl",
CAST("data"->'Webcamname'->>'ru' As varchar) AS "Webcamname-ru",
CAST("data"->'GpsInfo'->>'Gpstype' As varchar) AS "GpsInfo-Gpstype",
CAST("data"->'GpsInfo'->>'Latitude' As float) AS "GpsInfo-Latitude",
CAST("data"->'GpsInfo'->>'Longitude' As float) AS "GpsInfo-Longitude",
CAST("data"->'GpsInfo'->>'AltitudeUnitofMeasure' As varchar) AS "GpsInfo-AltitudeUnitofMeasure",
CAST("data"->>'ListPosition' As integer) AS "ListPosition"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_Webcam
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_Webcam_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_Webcam;



DROP TABLE IF EXISTS "v_skiareas_RelatedContent";

CREATE TABLE "v_skiareas_RelatedContent" (
"skiareas_Id" varchar,
"Id" varchar,
"Name" varchar,
"Self" varchar,
"Type" varchar
);

DROP FUNCTION IF EXISTS v_skiareas_RelatedContent_fn CASCADE;

CREATE FUNCTION v_skiareas_RelatedContent_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareas_RelatedContent"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'RelatedContent') AS "data"
        WHERE NEW."data" -> 'RelatedContent' != 'null')
    SELECT "Id" AS "skiareas_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Name' As varchar) AS "Name",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Type' As varchar) AS "Type"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareas_RelatedContent
    BEFORE INSERT
    ON skiareas
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareas_RelatedContent_fn();

ALTER TABLE skiareas
    ENABLE ALWAYS TRIGGER t_v_skiareas_RelatedContent;



DROP TABLE IF EXISTS "v_skiareasopen";

CREATE TABLE "v_skiareasopen" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Latitude" float,
"LiftCount" varchar,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"AltitudeTo" integer,
"LastChange" varchar,
"SlopeKmRed" varchar,
"SkiRegionId" varchar,
"SlopeKmBlue" varchar,
"AltitudeFrom" integer,
"SlopeKmBlack" varchar,
"TotalSlopeKm" varchar,
"SkiAreaMapURL" varchar,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-Header" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-Language" varchar,
"Detail-cs-MetaDesc" varchar,
"Detail-cs-IntroText" varchar,
"Detail-cs-MetaTitle" varchar,
"Detail-cs-SubHeader" varchar,
"Detail-de-Title" varchar,
"Detail-de-Header" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-de-SubHeader" varchar,
"Detail-en-Title" varchar,
"Detail-en-Header" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-Language" varchar,
"Detail-en-MetaDesc" varchar,
"Detail-en-IntroText" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-en-SubHeader" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Header" varchar,
"Detail-fr-BaseText" varchar,
"Detail-fr-Language" varchar,
"Detail-fr-MetaDesc" varchar,
"Detail-fr-IntroText" varchar,
"Detail-fr-MetaTitle" varchar,
"Detail-fr-SubHeader" varchar,
"Detail-it-Title" varchar,
"Detail-it-Header" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-Language" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-MetaTitle" varchar,
"Detail-it-SubHeader" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-Header" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-Language" varchar,
"Detail-nl-MetaDesc" varchar,
"Detail-nl-IntroText" varchar,
"Detail-nl-MetaTitle" varchar,
"Detail-nl-SubHeader" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-Header" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-Language" varchar,
"Detail-pl-MetaDesc" varchar,
"Detail-pl-IntroText" varchar,
"Detail-pl-MetaTitle" varchar,
"Detail-pl-SubHeader" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Header" varchar,
"Detail-ru-BaseText" varchar,
"Detail-ru-Language" varchar,
"Detail-ru-MetaDesc" varchar,
"Detail-ru-IntroText" varchar,
"Detail-ru-MetaTitle" varchar,
"Detail-ru-SubHeader" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"SkiRegion-Id" varchar,
"SkiRegion-Self" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-cs-Url" varchar,
"ContactInfos-cs-City" varchar,
"ContactInfos-cs-Email" varchar,
"ContactInfos-cs-Address" varchar,
"ContactInfos-cs-LogoUrl" varchar,
"ContactInfos-cs-ZipCode" varchar,
"ContactInfos-cs-Language" varchar,
"ContactInfos-cs-CompanyName" varchar,
"ContactInfos-cs-CountryCode" varchar,
"ContactInfos-cs-CountryName" varchar,
"ContactInfos-cs-Phonenumber" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-LogoUrl" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-LogoUrl" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-fr-Url" varchar,
"ContactInfos-fr-City" varchar,
"ContactInfos-fr-Email" varchar,
"ContactInfos-fr-Address" varchar,
"ContactInfos-fr-LogoUrl" varchar,
"ContactInfos-fr-ZipCode" varchar,
"ContactInfos-fr-Language" varchar,
"ContactInfos-fr-CompanyName" varchar,
"ContactInfos-fr-CountryCode" varchar,
"ContactInfos-fr-CountryName" varchar,
"ContactInfos-fr-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-LogoUrl" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"ContactInfos-nl-Url" varchar,
"ContactInfos-nl-City" varchar,
"ContactInfos-nl-Email" varchar,
"ContactInfos-nl-Address" varchar,
"ContactInfos-nl-LogoUrl" varchar,
"ContactInfos-nl-ZipCode" varchar,
"ContactInfos-nl-Language" varchar,
"ContactInfos-nl-CompanyName" varchar,
"ContactInfos-nl-CountryCode" varchar,
"ContactInfos-nl-CountryName" varchar,
"ContactInfos-nl-Phonenumber" varchar,
"ContactInfos-pl-Url" varchar,
"ContactInfos-pl-City" varchar,
"ContactInfos-pl-Email" varchar,
"ContactInfos-pl-Address" varchar,
"ContactInfos-pl-LogoUrl" varchar,
"ContactInfos-pl-ZipCode" varchar,
"ContactInfos-pl-Language" varchar,
"ContactInfos-pl-CompanyName" varchar,
"ContactInfos-pl-CountryCode" varchar,
"ContactInfos-pl-CountryName" varchar,
"ContactInfos-pl-Phonenumber" varchar,
"ContactInfos-ru-Url" varchar,
"ContactInfos-ru-City" varchar,
"ContactInfos-ru-Email" varchar,
"ContactInfos-ru-Address" varchar,
"ContactInfos-ru-LogoUrl" varchar,
"ContactInfos-ru-ZipCode" varchar,
"ContactInfos-ru-Language" varchar,
"ContactInfos-ru-CompanyName" varchar,
"ContactInfos-ru-CountryCode" varchar,
"ContactInfos-ru-CountryName" varchar,
"ContactInfos-ru-Phonenumber" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"SkiRegionName-cs" varchar,
"SkiRegionName-de" varchar,
"SkiRegionName-en" varchar,
"SkiRegionName-fr" varchar,
"SkiRegionName-it" varchar,
"SkiRegionName-nl" varchar,
"SkiRegionName-pl" varchar,
"SkiRegionName-ru" varchar,
"Altitude" float,
"GpsPoints-position-Altitude" float,
"Detail-pl-GetThereText" varchar,
"Detail-de-GetThereText" varchar,
"Detail-it-GetThereText" varchar
);

ALTER TABLE "v_skiareasopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_skiareasopen_fn CASCADE;

CREATE FUNCTION v_skiareasopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_skiareasopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'LiftCount' As varchar) AS "LiftCount",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'AltitudeTo' As integer) AS "AltitudeTo",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'SlopeKmRed' As varchar) AS "SlopeKmRed",
CAST(NEW."data"->>'SkiRegionId' As varchar) AS "SkiRegionId",
CAST(NEW."data"->>'SlopeKmBlue' As varchar) AS "SlopeKmBlue",
CAST(NEW."data"->>'AltitudeFrom' As integer) AS "AltitudeFrom",
CAST(NEW."data"->>'SlopeKmBlack' As varchar) AS "SlopeKmBlack",
CAST(NEW."data"->>'TotalSlopeKm' As varchar) AS "TotalSlopeKm",
CAST(NEW."data"->>'SkiAreaMapURL' As varchar) AS "SkiAreaMapURL",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'Header' As varchar) AS "Detail-cs-Header",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'cs'->>'MetaDesc' As varchar) AS "Detail-cs-MetaDesc",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'cs'->>'MetaTitle' As varchar) AS "Detail-cs-MetaTitle",
CAST(NEW."data"->'Detail'->'cs'->>'SubHeader' As varchar) AS "Detail-cs-SubHeader",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'MetaDesc' As varchar) AS "Detail-en-MetaDesc",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Header' As varchar) AS "Detail-fr-Header",
CAST(NEW."data"->'Detail'->'fr'->>'BaseText' As varchar) AS "Detail-fr-BaseText",
CAST(NEW."data"->'Detail'->'fr'->>'Language' As varchar) AS "Detail-fr-Language",
CAST(NEW."data"->'Detail'->'fr'->>'MetaDesc' As varchar) AS "Detail-fr-MetaDesc",
CAST(NEW."data"->'Detail'->'fr'->>'IntroText' As varchar) AS "Detail-fr-IntroText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaTitle' As varchar) AS "Detail-fr-MetaTitle",
CAST(NEW."data"->'Detail'->'fr'->>'SubHeader' As varchar) AS "Detail-fr-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Header' As varchar) AS "Detail-nl-Header",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'nl'->>'MetaDesc' As varchar) AS "Detail-nl-MetaDesc",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'MetaTitle' As varchar) AS "Detail-nl-MetaTitle",
CAST(NEW."data"->'Detail'->'nl'->>'SubHeader' As varchar) AS "Detail-nl-SubHeader",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Header' As varchar) AS "Detail-pl-Header",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'MetaDesc' As varchar) AS "Detail-pl-MetaDesc",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'MetaTitle' As varchar) AS "Detail-pl-MetaTitle",
CAST(NEW."data"->'Detail'->'pl'->>'SubHeader' As varchar) AS "Detail-pl-SubHeader",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Header' As varchar) AS "Detail-ru-Header",
CAST(NEW."data"->'Detail'->'ru'->>'BaseText' As varchar) AS "Detail-ru-BaseText",
CAST(NEW."data"->'Detail'->'ru'->>'Language' As varchar) AS "Detail-ru-Language",
CAST(NEW."data"->'Detail'->'ru'->>'MetaDesc' As varchar) AS "Detail-ru-MetaDesc",
CAST(NEW."data"->'Detail'->'ru'->>'IntroText' As varchar) AS "Detail-ru-IntroText",
CAST(NEW."data"->'Detail'->'ru'->>'MetaTitle' As varchar) AS "Detail-ru-MetaTitle",
CAST(NEW."data"->'Detail'->'ru'->>'SubHeader' As varchar) AS "Detail-ru-SubHeader",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'SkiRegion'->>'Id' As varchar) AS "SkiRegion-Id",
CAST(NEW."data"->'SkiRegion'->>'Self' As varchar) AS "SkiRegion-Self",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Url' As varchar) AS "ContactInfos-cs-Url",
CAST(NEW."data"->'ContactInfos'->'cs'->>'City' As varchar) AS "ContactInfos-cs-City",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Email' As varchar) AS "ContactInfos-cs-Email",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Address' As varchar) AS "ContactInfos-cs-Address",
CAST(NEW."data"->'ContactInfos'->'cs'->>'LogoUrl' As varchar) AS "ContactInfos-cs-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'cs'->>'ZipCode' As varchar) AS "ContactInfos-cs-ZipCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Language' As varchar) AS "ContactInfos-cs-Language",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CompanyName' As varchar) AS "ContactInfos-cs-CompanyName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryCode' As varchar) AS "ContactInfos-cs-CountryCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryName' As varchar) AS "ContactInfos-cs-CountryName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Phonenumber' As varchar) AS "ContactInfos-cs-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'LogoUrl' As varchar) AS "ContactInfos-de-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'LogoUrl' As varchar) AS "ContactInfos-en-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Url' As varchar) AS "ContactInfos-fr-Url",
CAST(NEW."data"->'ContactInfos'->'fr'->>'City' As varchar) AS "ContactInfos-fr-City",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Email' As varchar) AS "ContactInfos-fr-Email",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Address' As varchar) AS "ContactInfos-fr-Address",
CAST(NEW."data"->'ContactInfos'->'fr'->>'LogoUrl' As varchar) AS "ContactInfos-fr-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'fr'->>'ZipCode' As varchar) AS "ContactInfos-fr-ZipCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Language' As varchar) AS "ContactInfos-fr-Language",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CompanyName' As varchar) AS "ContactInfos-fr-CompanyName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryCode' As varchar) AS "ContactInfos-fr-CountryCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryName' As varchar) AS "ContactInfos-fr-CountryName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Phonenumber' As varchar) AS "ContactInfos-fr-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'LogoUrl' As varchar) AS "ContactInfos-it-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Url' As varchar) AS "ContactInfos-nl-Url",
CAST(NEW."data"->'ContactInfos'->'nl'->>'City' As varchar) AS "ContactInfos-nl-City",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Email' As varchar) AS "ContactInfos-nl-Email",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Address' As varchar) AS "ContactInfos-nl-Address",
CAST(NEW."data"->'ContactInfos'->'nl'->>'LogoUrl' As varchar) AS "ContactInfos-nl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'nl'->>'ZipCode' As varchar) AS "ContactInfos-nl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Language' As varchar) AS "ContactInfos-nl-Language",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CompanyName' As varchar) AS "ContactInfos-nl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryCode' As varchar) AS "ContactInfos-nl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryName' As varchar) AS "ContactInfos-nl-CountryName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Phonenumber' As varchar) AS "ContactInfos-nl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Url' As varchar) AS "ContactInfos-pl-Url",
CAST(NEW."data"->'ContactInfos'->'pl'->>'City' As varchar) AS "ContactInfos-pl-City",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Email' As varchar) AS "ContactInfos-pl-Email",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Address' As varchar) AS "ContactInfos-pl-Address",
CAST(NEW."data"->'ContactInfos'->'pl'->>'LogoUrl' As varchar) AS "ContactInfos-pl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'pl'->>'ZipCode' As varchar) AS "ContactInfos-pl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Language' As varchar) AS "ContactInfos-pl-Language",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CompanyName' As varchar) AS "ContactInfos-pl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryCode' As varchar) AS "ContactInfos-pl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryName' As varchar) AS "ContactInfos-pl-CountryName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Phonenumber' As varchar) AS "ContactInfos-pl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Url' As varchar) AS "ContactInfos-ru-Url",
CAST(NEW."data"->'ContactInfos'->'ru'->>'City' As varchar) AS "ContactInfos-ru-City",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Email' As varchar) AS "ContactInfos-ru-Email",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Address' As varchar) AS "ContactInfos-ru-Address",
CAST(NEW."data"->'ContactInfos'->'ru'->>'LogoUrl' As varchar) AS "ContactInfos-ru-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'ru'->>'ZipCode' As varchar) AS "ContactInfos-ru-ZipCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Language' As varchar) AS "ContactInfos-ru-Language",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CompanyName' As varchar) AS "ContactInfos-ru-CompanyName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryCode' As varchar) AS "ContactInfos-ru-CountryCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryName' As varchar) AS "ContactInfos-ru-CountryName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Phonenumber' As varchar) AS "ContactInfos-ru-Phonenumber",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'SkiRegionName'->>'cs' As varchar) AS "SkiRegionName-cs",
CAST(NEW."data"->'SkiRegionName'->>'de' As varchar) AS "SkiRegionName-de",
CAST(NEW."data"->'SkiRegionName'->>'en' As varchar) AS "SkiRegionName-en",
CAST(NEW."data"->'SkiRegionName'->>'fr' As varchar) AS "SkiRegionName-fr",
CAST(NEW."data"->'SkiRegionName'->>'it' As varchar) AS "SkiRegionName-it",
CAST(NEW."data"->'SkiRegionName'->>'nl' As varchar) AS "SkiRegionName-nl",
CAST(NEW."data"->'SkiRegionName'->>'pl' As varchar) AS "SkiRegionName-pl",
CAST(NEW."data"->'SkiRegionName'->>'ru' As varchar) AS "SkiRegionName-ru",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen;



DROP TABLE IF EXISTS "v_skiareasopen_AreaId";

CREATE TABLE  "v_skiareasopen_AreaId" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareasopen_AreaId_fn CASCADE;

CREATE FUNCTION v_skiareasopen_AreaId_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_AreaId"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'AreaId') AS "data"
        WHERE NEW."data" -> 'AreaId' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_AreaId
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_AreaId_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_AreaId;



DROP TABLE IF EXISTS "v_skiareasopen_AreaIds";

CREATE TABLE  "v_skiareasopen_AreaIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareasopen_AreaIds_fn CASCADE;

CREATE FUNCTION v_skiareasopen_AreaIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_AreaIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'AreaIds') AS "data"
        WHERE NEW."data" -> 'AreaIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_AreaIds
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_AreaIds_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_AreaIds;



DROP TABLE IF EXISTS "v_skiareasopen_SmgTags";

CREATE TABLE  "v_skiareasopen_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareasopen_SmgTags_fn CASCADE;

CREATE FUNCTION v_skiareasopen_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_SmgTags
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_SmgTags_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_SmgTags;



DROP TABLE IF EXISTS "v_skiareasopen_RegionIds";

CREATE TABLE  "v_skiareasopen_RegionIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareasopen_RegionIds_fn CASCADE;

CREATE FUNCTION v_skiareasopen_RegionIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_RegionIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'RegionIds') AS "data"
        WHERE NEW."data" -> 'RegionIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_RegionIds
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_RegionIds_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_RegionIds;



DROP TABLE IF EXISTS "v_skiareasopen_HasLanguage";

CREATE TABLE  "v_skiareasopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareasopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_skiareasopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_HasLanguage
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_HasLanguage_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_HasLanguage;



DROP TABLE IF EXISTS "v_skiareasopen_PublishedOn";

CREATE TABLE  "v_skiareasopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareasopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_skiareasopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_PublishedOn
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_PublishedOn_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_PublishedOn;



DROP TABLE IF EXISTS "v_skiareasopen_TourismvereinIds";

CREATE TABLE  "v_skiareasopen_TourismvereinIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiareasopen_TourismvereinIds_fn CASCADE;

CREATE FUNCTION v_skiareasopen_TourismvereinIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_TourismvereinIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'TourismvereinIds') AS "data"
        WHERE NEW."data" -> 'TourismvereinIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_TourismvereinIds
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_TourismvereinIds_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_TourismvereinIds;



DROP TABLE IF EXISTS "v_skiareasopen_Areas";

CREATE TABLE "v_skiareasopen_Areas" (
"skiareasopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_skiareasopen_Areas_fn CASCADE;

CREATE FUNCTION v_skiareasopen_Areas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_Areas"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Areas') AS "data"
        WHERE NEW."data" -> 'Areas' != 'null')
    SELECT "Id" AS "skiareasopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_Areas
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_Areas_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_Areas;



DROP TABLE IF EXISTS "v_skiareasopen_ODHTags";

CREATE TABLE "v_skiareasopen_ODHTags" (
"skiareasopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_skiareasopen_ODHTags_fn CASCADE;

CREATE FUNCTION v_skiareasopen_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "skiareasopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_ODHTags
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_ODHTags_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_ODHTags;



DROP TABLE IF EXISTS "v_skiareasopen_Regions";

CREATE TABLE "v_skiareasopen_Regions" (
"skiareasopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_skiareasopen_Regions_fn CASCADE;

CREATE FUNCTION v_skiareasopen_Regions_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_Regions"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Regions') AS "data"
        WHERE NEW."data" -> 'Regions' != 'null')
    SELECT "Id" AS "skiareasopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_Regions
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_Regions_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_Regions;



DROP TABLE IF EXISTS "v_skiareasopen_OperationSchedule";

CREATE TABLE "v_skiareasopen_OperationSchedule" (
"skiareasopen_Id" varchar,
"Stop" varchar,
"Type" varchar,
"Start" varchar,
"OperationscheduleName-cs" varchar,
"OperationscheduleName-de" varchar,
"OperationscheduleName-en" varchar,
"OperationscheduleName-it" varchar,
"OperationscheduleName-nl" varchar,
"OperationscheduleName-pl" varchar
);

DROP FUNCTION IF EXISTS v_skiareasopen_OperationSchedule_fn CASCADE;

CREATE FUNCTION v_skiareasopen_OperationSchedule_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_OperationSchedule"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'OperationSchedule') AS "data"
        WHERE NEW."data" -> 'OperationSchedule' != 'null')
    SELECT "Id" AS "skiareasopen_Id", CAST("data"->>'Stop' As varchar) AS "Stop",
CAST("data"->>'Type' As varchar) AS "Type",
CAST("data"->>'Start' As varchar) AS "Start",
CAST("data"->'OperationscheduleName'->>'cs' As varchar) AS "OperationscheduleName-cs",
CAST("data"->'OperationscheduleName'->>'de' As varchar) AS "OperationscheduleName-de",
CAST("data"->'OperationscheduleName'->>'en' As varchar) AS "OperationscheduleName-en",
CAST("data"->'OperationscheduleName'->>'it' As varchar) AS "OperationscheduleName-it",
CAST("data"->'OperationscheduleName'->>'nl' As varchar) AS "OperationscheduleName-nl",
CAST("data"->'OperationscheduleName'->>'pl' As varchar) AS "OperationscheduleName-pl"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_OperationSchedule
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_OperationSchedule_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_OperationSchedule;



DROP TABLE IF EXISTS "v_skiareasopen_TourismAssociations";

CREATE TABLE "v_skiareasopen_TourismAssociations" (
"skiareasopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_skiareasopen_TourismAssociations_fn CASCADE;

CREATE FUNCTION v_skiareasopen_TourismAssociations_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_TourismAssociations"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'TourismAssociations') AS "data"
        WHERE NEW."data" -> 'TourismAssociations' != 'null')
    SELECT "Id" AS "skiareasopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_TourismAssociations
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_TourismAssociations_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_TourismAssociations;



DROP TABLE IF EXISTS "v_skiareasopen_Webcam";

CREATE TABLE "v_skiareasopen_Webcam" (
"skiareasopen_Id" varchar,
"Source" varchar,
"WebcamId" varchar,
"Webcamurl" varchar,
"GpsInfo-Gpstype" varchar,
"GpsInfo-Latitude" float,
"GpsInfo-Longitude" float,
"GpsInfo-AltitudeUnitofMeasure" varchar,
"Webcamname-cs" varchar,
"Webcamname-de" varchar,
"Webcamname-en" varchar,
"Webcamname-fr" varchar,
"Webcamname-it" varchar,
"Webcamname-nl" varchar,
"Webcamname-pl" varchar,
"Webcamname-ru" varchar,
"ListPosition" integer
);

DROP FUNCTION IF EXISTS v_skiareasopen_Webcam_fn CASCADE;

CREATE FUNCTION v_skiareasopen_Webcam_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiareasopen_Webcam"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Webcam') AS "data"
        WHERE NEW."data" -> 'Webcam' != 'null')
    SELECT "Id" AS "skiareasopen_Id", CAST("data"->>'Source' As varchar) AS "Source",
CAST("data"->>'WebcamId' As varchar) AS "WebcamId",
CAST("data"->>'Webcamurl' As varchar) AS "Webcamurl",
CAST("data"->'GpsInfo'->>'Gpstype' As varchar) AS "GpsInfo-Gpstype",
CAST("data"->'GpsInfo'->>'Latitude' As float) AS "GpsInfo-Latitude",
CAST("data"->'GpsInfo'->>'Longitude' As float) AS "GpsInfo-Longitude",
CAST("data"->'GpsInfo'->>'AltitudeUnitofMeasure' As varchar) AS "GpsInfo-AltitudeUnitofMeasure",
CAST("data"->'Webcamname'->>'cs' As varchar) AS "Webcamname-cs",
CAST("data"->'Webcamname'->>'de' As varchar) AS "Webcamname-de",
CAST("data"->'Webcamname'->>'en' As varchar) AS "Webcamname-en",
CAST("data"->'Webcamname'->>'fr' As varchar) AS "Webcamname-fr",
CAST("data"->'Webcamname'->>'it' As varchar) AS "Webcamname-it",
CAST("data"->'Webcamname'->>'nl' As varchar) AS "Webcamname-nl",
CAST("data"->'Webcamname'->>'pl' As varchar) AS "Webcamname-pl",
CAST("data"->'Webcamname'->>'ru' As varchar) AS "Webcamname-ru",
CAST("data"->>'ListPosition' As integer) AS "ListPosition"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiareasopen_Webcam
    BEFORE INSERT
    ON skiareasopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiareasopen_Webcam_fn();

ALTER TABLE skiareasopen
    ENABLE ALWAYS TRIGGER t_v_skiareasopen_Webcam;



DROP TABLE IF EXISTS "v_skiregions";

CREATE TABLE "v_skiregions" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"Latitude" float,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-Language" varchar,
"Detail-cs-IntroText" varchar,
"Detail-cs-SubHeader" varchar,
"Detail-cs-GetThereText" varchar,
"Detail-de-Title" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-SubHeader" varchar,
"Detail-de-GetThereText" varchar,
"Detail-en-Title" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-Language" varchar,
"Detail-en-IntroText" varchar,
"Detail-en-SubHeader" varchar,
"Detail-en-GetThereText" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Header" varchar,
"Detail-fr-BaseText" varchar,
"Detail-fr-Language" varchar,
"Detail-fr-IntroText" varchar,
"Detail-fr-SubHeader" varchar,
"Detail-fr-GetThereText" varchar,
"Detail-it-Title" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-Language" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-SubHeader" varchar,
"Detail-it-GetThereText" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-Language" varchar,
"Detail-nl-IntroText" varchar,
"Detail-nl-SubHeader" varchar,
"Detail-nl-GetThereText" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-Language" varchar,
"Detail-pl-IntroText" varchar,
"Detail-pl-SubHeader" varchar,
"Detail-pl-GetThereText" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Header" varchar,
"Detail-ru-BaseText" varchar,
"Detail-ru-Language" varchar,
"Detail-ru-IntroText" varchar,
"Detail-ru-SubHeader" varchar,
"Detail-ru-GetThereText" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-cs-City" varchar,
"ContactInfos-cs-ZipCode" varchar,
"ContactInfos-cs-Language" varchar,
"ContactInfos-cs-CompanyName" varchar,
"ContactInfos-cs-CountryCode" varchar,
"ContactInfos-cs-CountryName" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-fr-City" varchar,
"ContactInfos-fr-ZipCode" varchar,
"ContactInfos-fr-Language" varchar,
"ContactInfos-fr-CompanyName" varchar,
"ContactInfos-fr-CountryCode" varchar,
"ContactInfos-fr-CountryName" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-nl-City" varchar,
"ContactInfos-nl-ZipCode" varchar,
"ContactInfos-nl-Language" varchar,
"ContactInfos-nl-CompanyName" varchar,
"ContactInfos-nl-CountryCode" varchar,
"ContactInfos-nl-CountryName" varchar,
"ContactInfos-pl-City" varchar,
"ContactInfos-pl-ZipCode" varchar,
"ContactInfos-pl-Language" varchar,
"ContactInfos-pl-CountryCode" varchar,
"ContactInfos-pl-CountryName" varchar,
"ContactInfos-ru-City" varchar,
"ContactInfos-ru-ZipCode" varchar,
"ContactInfos-ru-Language" varchar,
"ContactInfos-ru-CompanyName" varchar,
"ContactInfos-ru-CountryCode" varchar,
"ContactInfos-ru-CountryName" varchar,
"ContactInfos-cs-Url" varchar,
"ContactInfos-cs-Email" varchar,
"ContactInfos-cs-LogoUrl" varchar,
"ContactInfos-cs-Phonenumber" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-LogoUrl" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-LogoUrl" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-fr-Url" varchar,
"ContactInfos-fr-Email" varchar,
"ContactInfos-fr-LogoUrl" varchar,
"ContactInfos-fr-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-LogoUrl" varchar,
"ContactInfos-it-Phonenumber" varchar,
"ContactInfos-nl-Url" varchar,
"ContactInfos-nl-Email" varchar,
"ContactInfos-nl-LogoUrl" varchar,
"ContactInfos-nl-Phonenumber" varchar,
"ContactInfos-pl-Url" varchar,
"ContactInfos-pl-Email" varchar,
"ContactInfos-pl-LogoUrl" varchar,
"ContactInfos-pl-CompanyName" varchar,
"ContactInfos-pl-Phonenumber" varchar,
"ContactInfos-ru-Url" varchar,
"ContactInfos-ru-Email" varchar,
"ContactInfos-ru-LogoUrl" varchar,
"ContactInfos-ru-Phonenumber" varchar,
"ContactInfos-cs-Address" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-fr-Address" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-nl-Address" varchar,
"ContactInfos-pl-Address" varchar,
"ContactInfos-ru-Address" varchar
);

ALTER TABLE "v_skiregions" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_skiregions_fn CASCADE;

CREATE FUNCTION v_skiregions_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_skiregions
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'cs'->>'SubHeader' As varchar) AS "Detail-cs-SubHeader",
CAST(NEW."data"->'Detail'->'cs'->>'GetThereText' As varchar) AS "Detail-cs-GetThereText",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Header' As varchar) AS "Detail-fr-Header",
CAST(NEW."data"->'Detail'->'fr'->>'BaseText' As varchar) AS "Detail-fr-BaseText",
CAST(NEW."data"->'Detail'->'fr'->>'Language' As varchar) AS "Detail-fr-Language",
CAST(NEW."data"->'Detail'->'fr'->>'IntroText' As varchar) AS "Detail-fr-IntroText",
CAST(NEW."data"->'Detail'->'fr'->>'SubHeader' As varchar) AS "Detail-fr-SubHeader",
CAST(NEW."data"->'Detail'->'fr'->>'GetThereText' As varchar) AS "Detail-fr-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'SubHeader' As varchar) AS "Detail-nl-SubHeader",
CAST(NEW."data"->'Detail'->'nl'->>'GetThereText' As varchar) AS "Detail-nl-GetThereText",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'SubHeader' As varchar) AS "Detail-pl-SubHeader",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Header' As varchar) AS "Detail-ru-Header",
CAST(NEW."data"->'Detail'->'ru'->>'BaseText' As varchar) AS "Detail-ru-BaseText",
CAST(NEW."data"->'Detail'->'ru'->>'Language' As varchar) AS "Detail-ru-Language",
CAST(NEW."data"->'Detail'->'ru'->>'IntroText' As varchar) AS "Detail-ru-IntroText",
CAST(NEW."data"->'Detail'->'ru'->>'SubHeader' As varchar) AS "Detail-ru-SubHeader",
CAST(NEW."data"->'Detail'->'ru'->>'GetThereText' As varchar) AS "Detail-ru-GetThereText",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'cs'->>'City' As varchar) AS "ContactInfos-cs-City",
CAST(NEW."data"->'ContactInfos'->'cs'->>'ZipCode' As varchar) AS "ContactInfos-cs-ZipCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Language' As varchar) AS "ContactInfos-cs-Language",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CompanyName' As varchar) AS "ContactInfos-cs-CompanyName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryCode' As varchar) AS "ContactInfos-cs-CountryCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryName' As varchar) AS "ContactInfos-cs-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'City' As varchar) AS "ContactInfos-fr-City",
CAST(NEW."data"->'ContactInfos'->'fr'->>'ZipCode' As varchar) AS "ContactInfos-fr-ZipCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Language' As varchar) AS "ContactInfos-fr-Language",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CompanyName' As varchar) AS "ContactInfos-fr-CompanyName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryCode' As varchar) AS "ContactInfos-fr-CountryCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryName' As varchar) AS "ContactInfos-fr-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'City' As varchar) AS "ContactInfos-nl-City",
CAST(NEW."data"->'ContactInfos'->'nl'->>'ZipCode' As varchar) AS "ContactInfos-nl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Language' As varchar) AS "ContactInfos-nl-Language",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CompanyName' As varchar) AS "ContactInfos-nl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryCode' As varchar) AS "ContactInfos-nl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryName' As varchar) AS "ContactInfos-nl-CountryName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'City' As varchar) AS "ContactInfos-pl-City",
CAST(NEW."data"->'ContactInfos'->'pl'->>'ZipCode' As varchar) AS "ContactInfos-pl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Language' As varchar) AS "ContactInfos-pl-Language",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryCode' As varchar) AS "ContactInfos-pl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryName' As varchar) AS "ContactInfos-pl-CountryName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'City' As varchar) AS "ContactInfos-ru-City",
CAST(NEW."data"->'ContactInfos'->'ru'->>'ZipCode' As varchar) AS "ContactInfos-ru-ZipCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Language' As varchar) AS "ContactInfos-ru-Language",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CompanyName' As varchar) AS "ContactInfos-ru-CompanyName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryCode' As varchar) AS "ContactInfos-ru-CountryCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryName' As varchar) AS "ContactInfos-ru-CountryName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Url' As varchar) AS "ContactInfos-cs-Url",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Email' As varchar) AS "ContactInfos-cs-Email",
CAST(NEW."data"->'ContactInfos'->'cs'->>'LogoUrl' As varchar) AS "ContactInfos-cs-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Phonenumber' As varchar) AS "ContactInfos-cs-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'LogoUrl' As varchar) AS "ContactInfos-de-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'LogoUrl' As varchar) AS "ContactInfos-en-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Url' As varchar) AS "ContactInfos-fr-Url",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Email' As varchar) AS "ContactInfos-fr-Email",
CAST(NEW."data"->'ContactInfos'->'fr'->>'LogoUrl' As varchar) AS "ContactInfos-fr-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Phonenumber' As varchar) AS "ContactInfos-fr-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'LogoUrl' As varchar) AS "ContactInfos-it-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Url' As varchar) AS "ContactInfos-nl-Url",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Email' As varchar) AS "ContactInfos-nl-Email",
CAST(NEW."data"->'ContactInfos'->'nl'->>'LogoUrl' As varchar) AS "ContactInfos-nl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Phonenumber' As varchar) AS "ContactInfos-nl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Url' As varchar) AS "ContactInfos-pl-Url",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Email' As varchar) AS "ContactInfos-pl-Email",
CAST(NEW."data"->'ContactInfos'->'pl'->>'LogoUrl' As varchar) AS "ContactInfos-pl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CompanyName' As varchar) AS "ContactInfos-pl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Phonenumber' As varchar) AS "ContactInfos-pl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Url' As varchar) AS "ContactInfos-ru-Url",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Email' As varchar) AS "ContactInfos-ru-Email",
CAST(NEW."data"->'ContactInfos'->'ru'->>'LogoUrl' As varchar) AS "ContactInfos-ru-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Phonenumber' As varchar) AS "ContactInfos-ru-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Address' As varchar) AS "ContactInfos-cs-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Address' As varchar) AS "ContactInfos-fr-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Address' As varchar) AS "ContactInfos-nl-Address",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Address' As varchar) AS "ContactInfos-pl-Address",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Address' As varchar) AS "ContactInfos-ru-Address";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregions
    BEFORE INSERT
    ON skiregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregions_fn();

ALTER TABLE skiregions
    ENABLE ALWAYS TRIGGER t_v_skiregions;



DROP TABLE IF EXISTS "v_skiregions_SmgTags";

CREATE TABLE  "v_skiregions_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiregions_SmgTags_fn CASCADE;

CREATE FUNCTION v_skiregions_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiregions_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregions_SmgTags
    BEFORE INSERT
    ON skiregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregions_SmgTags_fn();

ALTER TABLE skiregions
    ENABLE ALWAYS TRIGGER t_v_skiregions_SmgTags;



DROP TABLE IF EXISTS "v_skiregions_HasLanguage";

CREATE TABLE  "v_skiregions_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiregions_HasLanguage_fn CASCADE;

CREATE FUNCTION v_skiregions_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiregions_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregions_HasLanguage
    BEFORE INSERT
    ON skiregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregions_HasLanguage_fn();

ALTER TABLE skiregions
    ENABLE ALWAYS TRIGGER t_v_skiregions_HasLanguage;



DROP TABLE IF EXISTS "v_skiregions_PublishedOn";

CREATE TABLE  "v_skiregions_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiregions_PublishedOn_fn CASCADE;

CREATE FUNCTION v_skiregions_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiregions_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregions_PublishedOn
    BEFORE INSERT
    ON skiregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregions_PublishedOn_fn();

ALTER TABLE skiregions
    ENABLE ALWAYS TRIGGER t_v_skiregions_PublishedOn;



DROP TABLE IF EXISTS "v_skiregions_ODHTags";

CREATE TABLE "v_skiregions_ODHTags" (
"skiregions_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_skiregions_ODHTags_fn CASCADE;

CREATE FUNCTION v_skiregions_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiregions_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "skiregions_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregions_ODHTags
    BEFORE INSERT
    ON skiregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregions_ODHTags_fn();

ALTER TABLE skiregions
    ENABLE ALWAYS TRIGGER t_v_skiregions_ODHTags;



DROP TABLE IF EXISTS "v_skiregions_GpsPolygon";

CREATE TABLE "v_skiregions_GpsPolygon" (
"skiregions_Id" varchar,
"Latitude" float,
"Longitude" float
);

DROP FUNCTION IF EXISTS v_skiregions_GpsPolygon_fn CASCADE;

CREATE FUNCTION v_skiregions_GpsPolygon_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiregions_GpsPolygon"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'GpsPolygon') AS "data"
        WHERE NEW."data" -> 'GpsPolygon' != 'null')
    SELECT "Id" AS "skiregions_Id", CAST("data"->>'Latitude' As float) AS "Latitude",
CAST("data"->>'Longitude' As float) AS "Longitude"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregions_GpsPolygon
    BEFORE INSERT
    ON skiregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregions_GpsPolygon_fn();

ALTER TABLE skiregions
    ENABLE ALWAYS TRIGGER t_v_skiregions_GpsPolygon;



DROP TABLE IF EXISTS "v_skiregions_ImageGallery";

CREATE TABLE "v_skiregions_ImageGallery" (
"skiregions_Id" varchar,
"Width" integer,
"Height" integer,
"ImageUrl" varchar,
"ImageName" varchar,
"ValidFrom" varchar,
"ImageSource" varchar,
"IsInGallery" bool,
"ListPosition" integer,
"ImageDesc-cs" varchar,
"ImageDesc-de" varchar,
"ImageDesc-en" varchar,
"ImageDesc-fr" varchar,
"ImageDesc-it" varchar,
"ImageDesc-nl" varchar,
"ImageDesc-pl" varchar,
"ImageDesc-ru" varchar,
"ImageTitle-cs" varchar,
"ImageTitle-de" varchar,
"ImageTitle-en" varchar,
"ImageTitle-fr" varchar,
"ImageTitle-it" varchar,
"ImageTitle-nl" varchar,
"ImageTitle-pl" varchar,
"ImageTitle-ru" varchar
);

DROP FUNCTION IF EXISTS v_skiregions_ImageGallery_fn CASCADE;

CREATE FUNCTION v_skiregions_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiregions_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "skiregions_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'ImageName' As varchar) AS "ImageName",
CAST("data"->>'ValidFrom' As varchar) AS "ValidFrom",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'ImageDesc'->>'cs' As varchar) AS "ImageDesc-cs",
CAST("data"->'ImageDesc'->>'de' As varchar) AS "ImageDesc-de",
CAST("data"->'ImageDesc'->>'en' As varchar) AS "ImageDesc-en",
CAST("data"->'ImageDesc'->>'fr' As varchar) AS "ImageDesc-fr",
CAST("data"->'ImageDesc'->>'it' As varchar) AS "ImageDesc-it",
CAST("data"->'ImageDesc'->>'nl' As varchar) AS "ImageDesc-nl",
CAST("data"->'ImageDesc'->>'pl' As varchar) AS "ImageDesc-pl",
CAST("data"->'ImageDesc'->>'ru' As varchar) AS "ImageDesc-ru",
CAST("data"->'ImageTitle'->>'cs' As varchar) AS "ImageTitle-cs",
CAST("data"->'ImageTitle'->>'de' As varchar) AS "ImageTitle-de",
CAST("data"->'ImageTitle'->>'en' As varchar) AS "ImageTitle-en",
CAST("data"->'ImageTitle'->>'fr' As varchar) AS "ImageTitle-fr",
CAST("data"->'ImageTitle'->>'it' As varchar) AS "ImageTitle-it",
CAST("data"->'ImageTitle'->>'nl' As varchar) AS "ImageTitle-nl",
CAST("data"->'ImageTitle'->>'pl' As varchar) AS "ImageTitle-pl",
CAST("data"->'ImageTitle'->>'ru' As varchar) AS "ImageTitle-ru"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregions_ImageGallery
    BEFORE INSERT
    ON skiregions
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregions_ImageGallery_fn();

ALTER TABLE skiregions
    ENABLE ALWAYS TRIGGER t_v_skiregions_ImageGallery;



DROP TABLE IF EXISTS "v_skiregionsopen";

CREATE TABLE "v_skiregionsopen" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"Latitude" float,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-Language" varchar,
"Detail-cs-IntroText" varchar,
"Detail-cs-SubHeader" varchar,
"Detail-cs-GetThereText" varchar,
"Detail-de-Title" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-SubHeader" varchar,
"Detail-de-GetThereText" varchar,
"Detail-en-Title" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-Language" varchar,
"Detail-en-IntroText" varchar,
"Detail-en-SubHeader" varchar,
"Detail-en-GetThereText" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Header" varchar,
"Detail-fr-BaseText" varchar,
"Detail-fr-Language" varchar,
"Detail-fr-IntroText" varchar,
"Detail-fr-SubHeader" varchar,
"Detail-fr-GetThereText" varchar,
"Detail-it-Title" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-Language" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-SubHeader" varchar,
"Detail-it-GetThereText" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-Language" varchar,
"Detail-nl-IntroText" varchar,
"Detail-nl-SubHeader" varchar,
"Detail-nl-GetThereText" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-Language" varchar,
"Detail-pl-IntroText" varchar,
"Detail-pl-SubHeader" varchar,
"Detail-pl-GetThereText" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Header" varchar,
"Detail-ru-BaseText" varchar,
"Detail-ru-Language" varchar,
"Detail-ru-IntroText" varchar,
"Detail-ru-SubHeader" varchar,
"Detail-ru-GetThereText" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-cs-Url" varchar,
"ContactInfos-cs-City" varchar,
"ContactInfos-cs-Email" varchar,
"ContactInfos-cs-LogoUrl" varchar,
"ContactInfos-cs-ZipCode" varchar,
"ContactInfos-cs-Language" varchar,
"ContactInfos-cs-CompanyName" varchar,
"ContactInfos-cs-CountryCode" varchar,
"ContactInfos-cs-CountryName" varchar,
"ContactInfos-cs-Phonenumber" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-LogoUrl" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-LogoUrl" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-fr-Url" varchar,
"ContactInfos-fr-City" varchar,
"ContactInfos-fr-Email" varchar,
"ContactInfos-fr-LogoUrl" varchar,
"ContactInfos-fr-ZipCode" varchar,
"ContactInfos-fr-Language" varchar,
"ContactInfos-fr-CompanyName" varchar,
"ContactInfos-fr-CountryCode" varchar,
"ContactInfos-fr-CountryName" varchar,
"ContactInfos-fr-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-LogoUrl" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"ContactInfos-nl-Url" varchar,
"ContactInfos-nl-City" varchar,
"ContactInfos-nl-Email" varchar,
"ContactInfos-nl-LogoUrl" varchar,
"ContactInfos-nl-ZipCode" varchar,
"ContactInfos-nl-Language" varchar,
"ContactInfos-nl-CompanyName" varchar,
"ContactInfos-nl-CountryCode" varchar,
"ContactInfos-nl-CountryName" varchar,
"ContactInfos-nl-Phonenumber" varchar,
"ContactInfos-pl-Url" varchar,
"ContactInfos-pl-City" varchar,
"ContactInfos-pl-Email" varchar,
"ContactInfos-pl-LogoUrl" varchar,
"ContactInfos-pl-ZipCode" varchar,
"ContactInfos-pl-Language" varchar,
"ContactInfos-pl-CompanyName" varchar,
"ContactInfos-pl-CountryCode" varchar,
"ContactInfos-pl-CountryName" varchar,
"ContactInfos-pl-Phonenumber" varchar,
"ContactInfos-ru-Url" varchar,
"ContactInfos-ru-City" varchar,
"ContactInfos-ru-Email" varchar,
"ContactInfos-ru-LogoUrl" varchar,
"ContactInfos-ru-ZipCode" varchar,
"ContactInfos-ru-Language" varchar,
"ContactInfos-ru-CompanyName" varchar,
"ContactInfos-ru-CountryCode" varchar,
"ContactInfos-ru-CountryName" varchar,
"ContactInfos-ru-Phonenumber" varchar
);

ALTER TABLE "v_skiregionsopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_skiregionsopen_fn CASCADE;

CREATE FUNCTION v_skiregionsopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_skiregionsopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'cs'->>'SubHeader' As varchar) AS "Detail-cs-SubHeader",
CAST(NEW."data"->'Detail'->'cs'->>'GetThereText' As varchar) AS "Detail-cs-GetThereText",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Header' As varchar) AS "Detail-fr-Header",
CAST(NEW."data"->'Detail'->'fr'->>'BaseText' As varchar) AS "Detail-fr-BaseText",
CAST(NEW."data"->'Detail'->'fr'->>'Language' As varchar) AS "Detail-fr-Language",
CAST(NEW."data"->'Detail'->'fr'->>'IntroText' As varchar) AS "Detail-fr-IntroText",
CAST(NEW."data"->'Detail'->'fr'->>'SubHeader' As varchar) AS "Detail-fr-SubHeader",
CAST(NEW."data"->'Detail'->'fr'->>'GetThereText' As varchar) AS "Detail-fr-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'SubHeader' As varchar) AS "Detail-nl-SubHeader",
CAST(NEW."data"->'Detail'->'nl'->>'GetThereText' As varchar) AS "Detail-nl-GetThereText",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'SubHeader' As varchar) AS "Detail-pl-SubHeader",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Header' As varchar) AS "Detail-ru-Header",
CAST(NEW."data"->'Detail'->'ru'->>'BaseText' As varchar) AS "Detail-ru-BaseText",
CAST(NEW."data"->'Detail'->'ru'->>'Language' As varchar) AS "Detail-ru-Language",
CAST(NEW."data"->'Detail'->'ru'->>'IntroText' As varchar) AS "Detail-ru-IntroText",
CAST(NEW."data"->'Detail'->'ru'->>'SubHeader' As varchar) AS "Detail-ru-SubHeader",
CAST(NEW."data"->'Detail'->'ru'->>'GetThereText' As varchar) AS "Detail-ru-GetThereText",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Url' As varchar) AS "ContactInfos-cs-Url",
CAST(NEW."data"->'ContactInfos'->'cs'->>'City' As varchar) AS "ContactInfos-cs-City",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Email' As varchar) AS "ContactInfos-cs-Email",
CAST(NEW."data"->'ContactInfos'->'cs'->>'LogoUrl' As varchar) AS "ContactInfos-cs-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'cs'->>'ZipCode' As varchar) AS "ContactInfos-cs-ZipCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Language' As varchar) AS "ContactInfos-cs-Language",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CompanyName' As varchar) AS "ContactInfos-cs-CompanyName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryCode' As varchar) AS "ContactInfos-cs-CountryCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryName' As varchar) AS "ContactInfos-cs-CountryName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Phonenumber' As varchar) AS "ContactInfos-cs-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'LogoUrl' As varchar) AS "ContactInfos-de-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'LogoUrl' As varchar) AS "ContactInfos-en-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Url' As varchar) AS "ContactInfos-fr-Url",
CAST(NEW."data"->'ContactInfos'->'fr'->>'City' As varchar) AS "ContactInfos-fr-City",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Email' As varchar) AS "ContactInfos-fr-Email",
CAST(NEW."data"->'ContactInfos'->'fr'->>'LogoUrl' As varchar) AS "ContactInfos-fr-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'fr'->>'ZipCode' As varchar) AS "ContactInfos-fr-ZipCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Language' As varchar) AS "ContactInfos-fr-Language",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CompanyName' As varchar) AS "ContactInfos-fr-CompanyName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryCode' As varchar) AS "ContactInfos-fr-CountryCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryName' As varchar) AS "ContactInfos-fr-CountryName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Phonenumber' As varchar) AS "ContactInfos-fr-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'LogoUrl' As varchar) AS "ContactInfos-it-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Url' As varchar) AS "ContactInfos-nl-Url",
CAST(NEW."data"->'ContactInfos'->'nl'->>'City' As varchar) AS "ContactInfos-nl-City",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Email' As varchar) AS "ContactInfos-nl-Email",
CAST(NEW."data"->'ContactInfos'->'nl'->>'LogoUrl' As varchar) AS "ContactInfos-nl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'nl'->>'ZipCode' As varchar) AS "ContactInfos-nl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Language' As varchar) AS "ContactInfos-nl-Language",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CompanyName' As varchar) AS "ContactInfos-nl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryCode' As varchar) AS "ContactInfos-nl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryName' As varchar) AS "ContactInfos-nl-CountryName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Phonenumber' As varchar) AS "ContactInfos-nl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Url' As varchar) AS "ContactInfos-pl-Url",
CAST(NEW."data"->'ContactInfos'->'pl'->>'City' As varchar) AS "ContactInfos-pl-City",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Email' As varchar) AS "ContactInfos-pl-Email",
CAST(NEW."data"->'ContactInfos'->'pl'->>'LogoUrl' As varchar) AS "ContactInfos-pl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'pl'->>'ZipCode' As varchar) AS "ContactInfos-pl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Language' As varchar) AS "ContactInfos-pl-Language",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CompanyName' As varchar) AS "ContactInfos-pl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryCode' As varchar) AS "ContactInfos-pl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryName' As varchar) AS "ContactInfos-pl-CountryName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Phonenumber' As varchar) AS "ContactInfos-pl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Url' As varchar) AS "ContactInfos-ru-Url",
CAST(NEW."data"->'ContactInfos'->'ru'->>'City' As varchar) AS "ContactInfos-ru-City",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Email' As varchar) AS "ContactInfos-ru-Email",
CAST(NEW."data"->'ContactInfos'->'ru'->>'LogoUrl' As varchar) AS "ContactInfos-ru-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'ru'->>'ZipCode' As varchar) AS "ContactInfos-ru-ZipCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Language' As varchar) AS "ContactInfos-ru-Language",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CompanyName' As varchar) AS "ContactInfos-ru-CompanyName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryCode' As varchar) AS "ContactInfos-ru-CountryCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryName' As varchar) AS "ContactInfos-ru-CountryName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Phonenumber' As varchar) AS "ContactInfos-ru-Phonenumber";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregionsopen
    BEFORE INSERT
    ON skiregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregionsopen_fn();

ALTER TABLE skiregionsopen
    ENABLE ALWAYS TRIGGER t_v_skiregionsopen;



DROP TABLE IF EXISTS "v_skiregionsopen_SmgTags";

CREATE TABLE  "v_skiregionsopen_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiregionsopen_SmgTags_fn CASCADE;

CREATE FUNCTION v_skiregionsopen_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiregionsopen_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregionsopen_SmgTags
    BEFORE INSERT
    ON skiregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregionsopen_SmgTags_fn();

ALTER TABLE skiregionsopen
    ENABLE ALWAYS TRIGGER t_v_skiregionsopen_SmgTags;



DROP TABLE IF EXISTS "v_skiregionsopen_HasLanguage";

CREATE TABLE  "v_skiregionsopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiregionsopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_skiregionsopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiregionsopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregionsopen_HasLanguage
    BEFORE INSERT
    ON skiregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregionsopen_HasLanguage_fn();

ALTER TABLE skiregionsopen
    ENABLE ALWAYS TRIGGER t_v_skiregionsopen_HasLanguage;



DROP TABLE IF EXISTS "v_skiregionsopen_PublishedOn";

CREATE TABLE  "v_skiregionsopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_skiregionsopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_skiregionsopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiregionsopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregionsopen_PublishedOn
    BEFORE INSERT
    ON skiregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregionsopen_PublishedOn_fn();

ALTER TABLE skiregionsopen
    ENABLE ALWAYS TRIGGER t_v_skiregionsopen_PublishedOn;



DROP TABLE IF EXISTS "v_skiregionsopen_ODHTags";

CREATE TABLE "v_skiregionsopen_ODHTags" (
"skiregionsopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_skiregionsopen_ODHTags_fn CASCADE;

CREATE FUNCTION v_skiregionsopen_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiregionsopen_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "skiregionsopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregionsopen_ODHTags
    BEFORE INSERT
    ON skiregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregionsopen_ODHTags_fn();

ALTER TABLE skiregionsopen
    ENABLE ALWAYS TRIGGER t_v_skiregionsopen_ODHTags;



DROP TABLE IF EXISTS "v_skiregionsopen_GpsPolygon";

CREATE TABLE "v_skiregionsopen_GpsPolygon" (
"skiregionsopen_Id" varchar,
"Latitude" float,
"Longitude" float
);

DROP FUNCTION IF EXISTS v_skiregionsopen_GpsPolygon_fn CASCADE;

CREATE FUNCTION v_skiregionsopen_GpsPolygon_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_skiregionsopen_GpsPolygon"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'GpsPolygon') AS "data"
        WHERE NEW."data" -> 'GpsPolygon' != 'null')
    SELECT "Id" AS "skiregionsopen_Id", CAST("data"->>'Latitude' As float) AS "Latitude",
CAST("data"->>'Longitude' As float) AS "Longitude"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_skiregionsopen_GpsPolygon
    BEFORE INSERT
    ON skiregionsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_skiregionsopen_GpsPolygon_fn();

ALTER TABLE skiregionsopen
    ENABLE ALWAYS TRIGGER t_v_skiregionsopen_GpsPolygon;



DROP TABLE IF EXISTS "v_smgpois";

CREATE TABLE "v_smgpois" (
"Id" varchar,
"Self" varchar,
"Type" varchar,
"AgeTo" integer,
"SmgId" varchar,
"Active" bool,
"IsOpen" bool,
"Source" varchar,
"AgeFrom" integer,
"PoiType" varchar,
"SubType" varchar,
"CustomId" varchar,
"FeetClimb" bool,
"Highlight" bool,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"Difficulty" varchar,
"HasRentals" bool,
"IsPrepared" bool,
"LastChange" varchar,
"FirstImport" varchar,
"IsWithLigth" bool,
"RunToValley" bool,
"AltitudeSumUp" float,
"LiftAvailable" bool,
"DistanceLength" float,
"SyncUpdateMode" varchar,
"AltitudeSumDown" float,
"HasFreeEntrance" bool,
"DistanceDuration" float,
"AltitudeDifference" float,
"MaxSeatingCapacity" integer,
"AltitudeLowestPoint" float,
"SyncSourceInterface" varchar,
"AltitudeHighestPoint" float,
"TourismorganizationId" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-de-Title" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-AdditionalText" varchar,
"Detail-en-Title" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-Language" varchar,
"Detail-en-AdditionalText" varchar,
"Detail-it-Title" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-Language" varchar,
"Detail-it-AdditionalText" varchar,
"Ratings-Stamina" varchar,
"Ratings-Landscape" varchar,
"Ratings-Technique" varchar,
"Ratings-Difficulty" varchar,
"Ratings-Experience" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"GpsPoints-arrivalpoint-Gpstype" varchar,
"GpsPoints-arrivalpoint-Altitude" float,
"GpsPoints-arrivalpoint-Latitude" float,
"GpsPoints-arrivalpoint-Longitude" float,
"GpsPoints-arrivalpoint-AltitudeUnitofMeasure" varchar,
"GpsPoints-startingpoint-Gpstype" varchar,
"GpsPoints-startingpoint-Altitude" float,
"GpsPoints-startingpoint-Latitude" float,
"GpsPoints-startingpoint-Longitude" float,
"GpsPoints-startingpoint-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-Surname" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-Faxnumber" varchar,
"ContactInfos-de-Givenname" varchar,
"ContactInfos-de-NamePrefix" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-Surname" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-Faxnumber" varchar,
"ContactInfos-en-Givenname" varchar,
"ContactInfos-en-NamePrefix" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-Surname" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-Faxnumber" varchar,
"ContactInfos-it-Givenname" varchar,
"ContactInfos-it-NamePrefix" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-AreaInfo-Id" varchar,
"LocationInfo-AreaInfo-Self" varchar,
"LocationInfo-AreaInfo-Name-cs" varchar,
"LocationInfo-AreaInfo-Name-de" varchar,
"LocationInfo-AreaInfo-Name-en" varchar,
"LocationInfo-AreaInfo-Name-fr" varchar,
"LocationInfo-AreaInfo-Name-it" varchar,
"LocationInfo-AreaInfo-Name-nl" varchar,
"LocationInfo-AreaInfo-Name-pl" varchar,
"LocationInfo-AreaInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"LocationInfo-DistrictInfo-Id" varchar,
"LocationInfo-DistrictInfo-Self" varchar,
"LocationInfo-DistrictInfo-Name-cs" varchar,
"LocationInfo-DistrictInfo-Name-de" varchar,
"LocationInfo-DistrictInfo-Name-en" varchar,
"LocationInfo-DistrictInfo-Name-fr" varchar,
"LocationInfo-DistrictInfo-Name-it" varchar,
"LocationInfo-DistrictInfo-Name-nl" varchar,
"LocationInfo-DistrictInfo-Name-pl" varchar,
"LocationInfo-DistrictInfo-Name-ru" varchar,
"LocationInfo-MunicipalityInfo-Id" varchar,
"LocationInfo-MunicipalityInfo-Self" varchar,
"LocationInfo-MunicipalityInfo-Name-cs" varchar,
"LocationInfo-MunicipalityInfo-Name-de" varchar,
"LocationInfo-MunicipalityInfo-Name-en" varchar,
"LocationInfo-MunicipalityInfo-Name-fr" varchar,
"LocationInfo-MunicipalityInfo-Name-it" varchar,
"LocationInfo-MunicipalityInfo-Name-nl" varchar,
"LocationInfo-MunicipalityInfo-Name-pl" varchar,
"LocationInfo-MunicipalityInfo-Name-ru" varchar,
"AdditionalPoiInfos-cs-Novelty" varchar,
"AdditionalPoiInfos-cs-PoiType" varchar,
"AdditionalPoiInfos-cs-SubType" varchar,
"AdditionalPoiInfos-cs-Language" varchar,
"AdditionalPoiInfos-cs-MainType" varchar,
"AdditionalPoiInfos-de-PoiType" varchar,
"AdditionalPoiInfos-de-SubType" varchar,
"AdditionalPoiInfos-de-Language" varchar,
"AdditionalPoiInfos-de-MainType" varchar,
"AdditionalPoiInfos-en-PoiType" varchar,
"AdditionalPoiInfos-en-SubType" varchar,
"AdditionalPoiInfos-en-Language" varchar,
"AdditionalPoiInfos-en-MainType" varchar,
"AdditionalPoiInfos-fr-Novelty" varchar,
"AdditionalPoiInfos-fr-PoiType" varchar,
"AdditionalPoiInfos-fr-SubType" varchar,
"AdditionalPoiInfos-fr-Language" varchar,
"AdditionalPoiInfos-fr-MainType" varchar,
"AdditionalPoiInfos-it-PoiType" varchar,
"AdditionalPoiInfos-it-SubType" varchar,
"AdditionalPoiInfos-it-Language" varchar,
"AdditionalPoiInfos-it-MainType" varchar,
"AdditionalPoiInfos-nl-Novelty" varchar,
"AdditionalPoiInfos-nl-PoiType" varchar,
"AdditionalPoiInfos-nl-SubType" varchar,
"AdditionalPoiInfos-nl-Language" varchar,
"AdditionalPoiInfos-nl-MainType" varchar,
"AdditionalPoiInfos-pl-Novelty" varchar,
"AdditionalPoiInfos-pl-PoiType" varchar,
"AdditionalPoiInfos-pl-SubType" varchar,
"AdditionalPoiInfos-pl-Language" varchar,
"AdditionalPoiInfos-pl-MainType" varchar,
"AdditionalPoiInfos-ru-Novelty" varchar,
"AdditionalPoiInfos-ru-PoiType" varchar,
"AdditionalPoiInfos-ru-SubType" varchar,
"AdditionalPoiInfos-ru-Language" varchar,
"AdditionalPoiInfos-ru-MainType" varchar,
"OwnerRid" varchar,
"CopyrightChecked" bool,
"Detail-de-Header" varchar,
"Detail-en-Header" varchar,
"Detail-en-IntroText" varchar,
"Detail-it-Header" varchar,
"Detail-it-IntroText" varchar,
"GpsPoints-startingandarrivalpoint-Gpstype" varchar,
"GpsPoints-startingandarrivalpoint-Altitude" float,
"GpsPoints-startingandarrivalpoint-Latitude" float,
"GpsPoints-startingandarrivalpoint-Longitude" float,
"GpsPoints-startingandarrivalpoint-AltitudeUnitofMeasure" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-en-MetaDesc" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-en-SubHeader" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-MetaTitle" varchar,
"Detail-it-SubHeader" varchar,
"Detail-de-SubHeader" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-Language" varchar,
"Detail-cs-IntroText" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-Language" varchar,
"Detail-nl-IntroText" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-Language" varchar,
"Detail-pl-IntroText" varchar,
"GpsPoints-viewpoint-Gpstype" varchar,
"GpsPoints-viewpoint-Altitude" float,
"GpsPoints-viewpoint-Latitude" float,
"GpsPoints-viewpoint-Longitude" float,
"GpsPoints-viewpoint-AltitudeUnitofMeasure" varchar,
"ContactInfos-cs-City" varchar,
"ContactInfos-cs-Address" varchar,
"ContactInfos-cs-ZipCode" varchar,
"ContactInfos-cs-Language" varchar,
"ContactInfos-cs-CompanyName" varchar,
"ContactInfos-cs-CountryCode" varchar,
"ContactInfos-cs-CountryName" varchar,
"ContactInfos-cs-Phonenumber" varchar,
"ContactInfos-nl-City" varchar,
"ContactInfos-nl-Address" varchar,
"ContactInfos-nl-ZipCode" varchar,
"ContactInfos-nl-Language" varchar,
"ContactInfos-nl-CompanyName" varchar,
"ContactInfos-nl-CountryCode" varchar,
"ContactInfos-nl-CountryName" varchar,
"ContactInfos-nl-Phonenumber" varchar,
"ContactInfos-pl-City" varchar,
"ContactInfos-pl-Address" varchar,
"ContactInfos-pl-ZipCode" varchar,
"ContactInfos-pl-Language" varchar,
"ContactInfos-pl-CompanyName" varchar,
"ContactInfos-pl-CountryCode" varchar,
"ContactInfos-pl-CountryName" varchar,
"ContactInfos-pl-Phonenumber" varchar,
"ContactInfos-de-LogoUrl" varchar,
"ContactInfos-en-LogoUrl" varchar,
"ContactInfos-it-LogoUrl" varchar,
"ContactInfos-cs-Url" varchar,
"ContactInfos-cs-Email" varchar,
"ContactInfos-nl-Url" varchar,
"ContactInfos-nl-Email" varchar,
"ContactInfos-pl-Url" varchar,
"ContactInfos-pl-Email" varchar,
"Detail-cs-Header" varchar,
"Detail-nl-Header" varchar,
"Detail-pl-Header" varchar,
"GpsPoints-carparking-Gpstype" varchar,
"GpsPoints-carparking-Altitude" float,
"GpsPoints-carparking-Latitude" float,
"GpsPoints-carparking-Longitude" float,
"GpsPoints-carparking-AltitudeUnitofMeasure" varchar,
"AdditionalPoiInfos-de-Novelty" varchar,
"AdditionalPoiInfos-it-Novelty" varchar,
"Detail-de-GetThereText" varchar,
"Detail-en-GetThereText" varchar,
"Detail-it-GetThereText" varchar,
"Detail-cs-GetThereText" varchar,
"Detail-pl-GetThereText" varchar,
"Detail-nl-GetThereText" varchar
);

ALTER TABLE "v_smgpois" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_smgpois_fn CASCADE;

CREATE FUNCTION v_smgpois_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_smgpois
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'AgeTo' As integer) AS "AgeTo",
CAST(NEW."data"->>'SmgId' As varchar) AS "SmgId",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'IsOpen' As bool) AS "IsOpen",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'AgeFrom' As integer) AS "AgeFrom",
CAST(NEW."data"->>'PoiType' As varchar) AS "PoiType",
CAST(NEW."data"->>'SubType' As varchar) AS "SubType",
CAST(NEW."data"->>'CustomId' As varchar) AS "CustomId",
CAST(NEW."data"->>'FeetClimb' As bool) AS "FeetClimb",
CAST(NEW."data"->>'Highlight' As bool) AS "Highlight",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'Difficulty' As varchar) AS "Difficulty",
CAST(NEW."data"->>'HasRentals' As bool) AS "HasRentals",
CAST(NEW."data"->>'IsPrepared' As bool) AS "IsPrepared",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'IsWithLigth' As bool) AS "IsWithLigth",
CAST(NEW."data"->>'RunToValley' As bool) AS "RunToValley",
CAST(NEW."data"->>'AltitudeSumUp' As float) AS "AltitudeSumUp",
CAST(NEW."data"->>'LiftAvailable' As bool) AS "LiftAvailable",
CAST(NEW."data"->>'DistanceLength' As float) AS "DistanceLength",
CAST(NEW."data"->>'SyncUpdateMode' As varchar) AS "SyncUpdateMode",
CAST(NEW."data"->>'AltitudeSumDown' As float) AS "AltitudeSumDown",
CAST(NEW."data"->>'HasFreeEntrance' As bool) AS "HasFreeEntrance",
CAST(NEW."data"->>'DistanceDuration' As float) AS "DistanceDuration",
CAST(NEW."data"->>'AltitudeDifference' As float) AS "AltitudeDifference",
CAST(NEW."data"->>'MaxSeatingCapacity' As integer) AS "MaxSeatingCapacity",
CAST(NEW."data"->>'AltitudeLowestPoint' As float) AS "AltitudeLowestPoint",
CAST(NEW."data"->>'SyncSourceInterface' As varchar) AS "SyncSourceInterface",
CAST(NEW."data"->>'AltitudeHighestPoint' As float) AS "AltitudeHighestPoint",
CAST(NEW."data"->>'TourismorganizationId' As varchar) AS "TourismorganizationId",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'AdditionalText' As varchar) AS "Detail-de-AdditionalText",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'AdditionalText' As varchar) AS "Detail-en-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'AdditionalText' As varchar) AS "Detail-it-AdditionalText",
CAST(NEW."data"->'Ratings'->>'Stamina' As varchar) AS "Ratings-Stamina",
CAST(NEW."data"->'Ratings'->>'Landscape' As varchar) AS "Ratings-Landscape",
CAST(NEW."data"->'Ratings'->>'Technique' As varchar) AS "Ratings-Technique",
CAST(NEW."data"->'Ratings'->>'Difficulty' As varchar) AS "Ratings-Difficulty",
CAST(NEW."data"->'Ratings'->>'Experience' As varchar) AS "Ratings-Experience",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'GpsPoints'->'arrivalpoint'->>'Gpstype' As varchar) AS "GpsPoints-arrivalpoint-Gpstype",
CAST(NEW."data"->'GpsPoints'->'arrivalpoint'->>'Altitude' As float) AS "GpsPoints-arrivalpoint-Altitude",
CAST(NEW."data"->'GpsPoints'->'arrivalpoint'->>'Latitude' As float) AS "GpsPoints-arrivalpoint-Latitude",
CAST(NEW."data"->'GpsPoints'->'arrivalpoint'->>'Longitude' As float) AS "GpsPoints-arrivalpoint-Longitude",
CAST(NEW."data"->'GpsPoints'->'arrivalpoint'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-arrivalpoint-AltitudeUnitofMeasure",
CAST(NEW."data"->'GpsPoints'->'startingpoint'->>'Gpstype' As varchar) AS "GpsPoints-startingpoint-Gpstype",
CAST(NEW."data"->'GpsPoints'->'startingpoint'->>'Altitude' As float) AS "GpsPoints-startingpoint-Altitude",
CAST(NEW."data"->'GpsPoints'->'startingpoint'->>'Latitude' As float) AS "GpsPoints-startingpoint-Latitude",
CAST(NEW."data"->'GpsPoints'->'startingpoint'->>'Longitude' As float) AS "GpsPoints-startingpoint-Longitude",
CAST(NEW."data"->'GpsPoints'->'startingpoint'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-startingpoint-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'Surname' As varchar) AS "ContactInfos-de-Surname",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'Faxnumber' As varchar) AS "ContactInfos-de-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'Givenname' As varchar) AS "ContactInfos-de-Givenname",
CAST(NEW."data"->'ContactInfos'->'de'->>'NamePrefix' As varchar) AS "ContactInfos-de-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'Surname' As varchar) AS "ContactInfos-en-Surname",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Faxnumber' As varchar) AS "ContactInfos-en-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Givenname' As varchar) AS "ContactInfos-en-Givenname",
CAST(NEW."data"->'ContactInfos'->'en'->>'NamePrefix' As varchar) AS "ContactInfos-en-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'Surname' As varchar) AS "ContactInfos-it-Surname",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'Faxnumber' As varchar) AS "ContactInfos-it-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Givenname' As varchar) AS "ContactInfos-it-Givenname",
CAST(NEW."data"->'ContactInfos'->'it'->>'NamePrefix' As varchar) AS "ContactInfos-it-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->>'Id' As varchar) AS "LocationInfo-AreaInfo-Id",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->>'Self' As varchar) AS "LocationInfo-AreaInfo-Self",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-AreaInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'de' As varchar) AS "LocationInfo-AreaInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'en' As varchar) AS "LocationInfo-AreaInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-AreaInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'it' As varchar) AS "LocationInfo-AreaInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-AreaInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-AreaInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'AreaInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-AreaInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Id' As varchar) AS "LocationInfo-DistrictInfo-Id",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Self' As varchar) AS "LocationInfo-DistrictInfo-Self",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-DistrictInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'de' As varchar) AS "LocationInfo-DistrictInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'en' As varchar) AS "LocationInfo-DistrictInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-DistrictInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'it' As varchar) AS "LocationInfo-DistrictInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-DistrictInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-DistrictInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-DistrictInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Id' As varchar) AS "LocationInfo-MunicipalityInfo-Id",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Self' As varchar) AS "LocationInfo-MunicipalityInfo-Self",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-MunicipalityInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'de' As varchar) AS "LocationInfo-MunicipalityInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'en' As varchar) AS "LocationInfo-MunicipalityInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-MunicipalityInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'it' As varchar) AS "LocationInfo-MunicipalityInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-MunicipalityInfo-Name-ru",
CAST(NEW."data"->'AdditionalPoiInfos'->'cs'->>'Novelty' As varchar) AS "AdditionalPoiInfos-cs-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'cs'->>'PoiType' As varchar) AS "AdditionalPoiInfos-cs-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'cs'->>'SubType' As varchar) AS "AdditionalPoiInfos-cs-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'cs'->>'Language' As varchar) AS "AdditionalPoiInfos-cs-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'cs'->>'MainType' As varchar) AS "AdditionalPoiInfos-cs-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'PoiType' As varchar) AS "AdditionalPoiInfos-de-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'SubType' As varchar) AS "AdditionalPoiInfos-de-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'Language' As varchar) AS "AdditionalPoiInfos-de-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'MainType' As varchar) AS "AdditionalPoiInfos-de-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'PoiType' As varchar) AS "AdditionalPoiInfos-en-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'SubType' As varchar) AS "AdditionalPoiInfos-en-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'Language' As varchar) AS "AdditionalPoiInfos-en-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'MainType' As varchar) AS "AdditionalPoiInfos-en-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'fr'->>'Novelty' As varchar) AS "AdditionalPoiInfos-fr-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'fr'->>'PoiType' As varchar) AS "AdditionalPoiInfos-fr-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'fr'->>'SubType' As varchar) AS "AdditionalPoiInfos-fr-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'fr'->>'Language' As varchar) AS "AdditionalPoiInfos-fr-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'fr'->>'MainType' As varchar) AS "AdditionalPoiInfos-fr-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'PoiType' As varchar) AS "AdditionalPoiInfos-it-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'SubType' As varchar) AS "AdditionalPoiInfos-it-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'Language' As varchar) AS "AdditionalPoiInfos-it-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'MainType' As varchar) AS "AdditionalPoiInfos-it-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'nl'->>'Novelty' As varchar) AS "AdditionalPoiInfos-nl-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'nl'->>'PoiType' As varchar) AS "AdditionalPoiInfos-nl-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'nl'->>'SubType' As varchar) AS "AdditionalPoiInfos-nl-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'nl'->>'Language' As varchar) AS "AdditionalPoiInfos-nl-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'nl'->>'MainType' As varchar) AS "AdditionalPoiInfos-nl-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'pl'->>'Novelty' As varchar) AS "AdditionalPoiInfos-pl-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'pl'->>'PoiType' As varchar) AS "AdditionalPoiInfos-pl-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'pl'->>'SubType' As varchar) AS "AdditionalPoiInfos-pl-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'pl'->>'Language' As varchar) AS "AdditionalPoiInfos-pl-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'pl'->>'MainType' As varchar) AS "AdditionalPoiInfos-pl-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'ru'->>'Novelty' As varchar) AS "AdditionalPoiInfos-ru-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'ru'->>'PoiType' As varchar) AS "AdditionalPoiInfos-ru-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'ru'->>'SubType' As varchar) AS "AdditionalPoiInfos-ru-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'ru'->>'Language' As varchar) AS "AdditionalPoiInfos-ru-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'ru'->>'MainType' As varchar) AS "AdditionalPoiInfos-ru-MainType",
CAST(NEW."data"->>'OwnerRid' As varchar) AS "OwnerRid",
CAST(NEW."data"->>'CopyrightChecked' As bool) AS "CopyrightChecked",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'GpsPoints'->'startingandarrivalpoint'->>'Gpstype' As varchar) AS "GpsPoints-startingandarrivalpoint-Gpstype",
CAST(NEW."data"->'GpsPoints'->'startingandarrivalpoint'->>'Altitude' As float) AS "GpsPoints-startingandarrivalpoint-Altitude",
CAST(NEW."data"->'GpsPoints'->'startingandarrivalpoint'->>'Latitude' As float) AS "GpsPoints-startingandarrivalpoint-Latitude",
CAST(NEW."data"->'GpsPoints'->'startingandarrivalpoint'->>'Longitude' As float) AS "GpsPoints-startingandarrivalpoint-Longitude",
CAST(NEW."data"->'GpsPoints'->'startingandarrivalpoint'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-startingandarrivalpoint-AltitudeUnitofMeasure",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'MetaDesc' As varchar) AS "Detail-en-MetaDesc",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'GpsPoints'->'viewpoint'->>'Gpstype' As varchar) AS "GpsPoints-viewpoint-Gpstype",
CAST(NEW."data"->'GpsPoints'->'viewpoint'->>'Altitude' As float) AS "GpsPoints-viewpoint-Altitude",
CAST(NEW."data"->'GpsPoints'->'viewpoint'->>'Latitude' As float) AS "GpsPoints-viewpoint-Latitude",
CAST(NEW."data"->'GpsPoints'->'viewpoint'->>'Longitude' As float) AS "GpsPoints-viewpoint-Longitude",
CAST(NEW."data"->'GpsPoints'->'viewpoint'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-viewpoint-AltitudeUnitofMeasure",
CAST(NEW."data"->'ContactInfos'->'cs'->>'City' As varchar) AS "ContactInfos-cs-City",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Address' As varchar) AS "ContactInfos-cs-Address",
CAST(NEW."data"->'ContactInfos'->'cs'->>'ZipCode' As varchar) AS "ContactInfos-cs-ZipCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Language' As varchar) AS "ContactInfos-cs-Language",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CompanyName' As varchar) AS "ContactInfos-cs-CompanyName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryCode' As varchar) AS "ContactInfos-cs-CountryCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryName' As varchar) AS "ContactInfos-cs-CountryName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Phonenumber' As varchar) AS "ContactInfos-cs-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'City' As varchar) AS "ContactInfos-nl-City",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Address' As varchar) AS "ContactInfos-nl-Address",
CAST(NEW."data"->'ContactInfos'->'nl'->>'ZipCode' As varchar) AS "ContactInfos-nl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Language' As varchar) AS "ContactInfos-nl-Language",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CompanyName' As varchar) AS "ContactInfos-nl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryCode' As varchar) AS "ContactInfos-nl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryName' As varchar) AS "ContactInfos-nl-CountryName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Phonenumber' As varchar) AS "ContactInfos-nl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'City' As varchar) AS "ContactInfos-pl-City",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Address' As varchar) AS "ContactInfos-pl-Address",
CAST(NEW."data"->'ContactInfos'->'pl'->>'ZipCode' As varchar) AS "ContactInfos-pl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Language' As varchar) AS "ContactInfos-pl-Language",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CompanyName' As varchar) AS "ContactInfos-pl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryCode' As varchar) AS "ContactInfos-pl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryName' As varchar) AS "ContactInfos-pl-CountryName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Phonenumber' As varchar) AS "ContactInfos-pl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'LogoUrl' As varchar) AS "ContactInfos-de-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'en'->>'LogoUrl' As varchar) AS "ContactInfos-en-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'it'->>'LogoUrl' As varchar) AS "ContactInfos-it-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Url' As varchar) AS "ContactInfos-cs-Url",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Email' As varchar) AS "ContactInfos-cs-Email",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Url' As varchar) AS "ContactInfos-nl-Url",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Email' As varchar) AS "ContactInfos-nl-Email",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Url' As varchar) AS "ContactInfos-pl-Url",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Email' As varchar) AS "ContactInfos-pl-Email",
CAST(NEW."data"->'Detail'->'cs'->>'Header' As varchar) AS "Detail-cs-Header",
CAST(NEW."data"->'Detail'->'nl'->>'Header' As varchar) AS "Detail-nl-Header",
CAST(NEW."data"->'Detail'->'pl'->>'Header' As varchar) AS "Detail-pl-Header",
CAST(NEW."data"->'GpsPoints'->'carparking'->>'Gpstype' As varchar) AS "GpsPoints-carparking-Gpstype",
CAST(NEW."data"->'GpsPoints'->'carparking'->>'Altitude' As float) AS "GpsPoints-carparking-Altitude",
CAST(NEW."data"->'GpsPoints'->'carparking'->>'Latitude' As float) AS "GpsPoints-carparking-Latitude",
CAST(NEW."data"->'GpsPoints'->'carparking'->>'Longitude' As float) AS "GpsPoints-carparking-Longitude",
CAST(NEW."data"->'GpsPoints'->'carparking'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-carparking-AltitudeUnitofMeasure",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'Novelty' As varchar) AS "AdditionalPoiInfos-de-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'Novelty' As varchar) AS "AdditionalPoiInfos-it-Novelty",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'Detail'->'cs'->>'GetThereText' As varchar) AS "Detail-cs-GetThereText",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'nl'->>'GetThereText' As varchar) AS "Detail-nl-GetThereText";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois;



DROP TABLE IF EXISTS "v_smgpois_SmgTags";

CREATE TABLE  "v_smgpois_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_smgpois_SmgTags_fn CASCADE;

CREATE FUNCTION v_smgpois_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_SmgTags
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_SmgTags_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_SmgTags;



DROP TABLE IF EXISTS "v_smgpois_HasLanguage";

CREATE TABLE  "v_smgpois_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_smgpois_HasLanguage_fn CASCADE;

CREATE FUNCTION v_smgpois_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_HasLanguage
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_HasLanguage_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_HasLanguage;



DROP TABLE IF EXISTS "v_smgpois_GpsInfo";

CREATE TABLE "v_smgpois_GpsInfo" (
"smgpois_Id" varchar,
"Gpstype" varchar,
"Altitude" float,
"Latitude" float,
"Longitude" float,
"AltitudeUnitofMeasure" varchar
);

DROP FUNCTION IF EXISTS v_smgpois_GpsInfo_fn CASCADE;

CREATE FUNCTION v_smgpois_GpsInfo_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_GpsInfo"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'GpsInfo') AS "data"
        WHERE NEW."data" -> 'GpsInfo' != 'null')
    SELECT "Id" AS "smgpois_Id", CAST("data"->>'Gpstype' As varchar) AS "Gpstype",
CAST("data"->>'Altitude' As float) AS "Altitude",
CAST("data"->>'Latitude' As float) AS "Latitude",
CAST("data"->>'Longitude' As float) AS "Longitude",
CAST("data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_GpsInfo
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_GpsInfo_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_GpsInfo;



DROP TABLE IF EXISTS "v_smgpois_ODHTags";

CREATE TABLE "v_smgpois_ODHTags" (
"smgpois_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_smgpois_ODHTags_fn CASCADE;

CREATE FUNCTION v_smgpois_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "smgpois_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_ODHTags
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_ODHTags_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_ODHTags;



DROP TABLE IF EXISTS "v_smgpois_ImageGallery";

CREATE TABLE "v_smgpois_ImageGallery" (
"smgpois_Id" varchar,
"Width" integer,
"Height" integer,
"ImageUrl" varchar,
"CopyRight" varchar,
"ImageName" varchar,
"ImageSource" varchar,
"IsInGallery" bool,
"ListPosition" integer,
"ImageDesc-de" varchar,
"ImageDesc-en" varchar,
"ImageDesc-it" varchar,
"ImageTitle-de" varchar,
"ImageTitle-en" varchar,
"ImageTitle-it" varchar,
"ValidFrom" varchar,
"ImageDesc-cs" varchar,
"ImageDesc-nl" varchar,
"ImageDesc-pl" varchar,
"ImageTitle-cs" varchar,
"ImageTitle-nl" varchar,
"ImageTitle-pl" varchar
);

DROP FUNCTION IF EXISTS v_smgpois_ImageGallery_fn CASCADE;

CREATE FUNCTION v_smgpois_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "smgpois_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'CopyRight' As varchar) AS "CopyRight",
CAST("data"->>'ImageName' As varchar) AS "ImageName",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'ImageDesc'->>'de' As varchar) AS "ImageDesc-de",
CAST("data"->'ImageDesc'->>'en' As varchar) AS "ImageDesc-en",
CAST("data"->'ImageDesc'->>'it' As varchar) AS "ImageDesc-it",
CAST("data"->'ImageTitle'->>'de' As varchar) AS "ImageTitle-de",
CAST("data"->'ImageTitle'->>'en' As varchar) AS "ImageTitle-en",
CAST("data"->'ImageTitle'->>'it' As varchar) AS "ImageTitle-it",
CAST("data"->>'ValidFrom' As varchar) AS "ValidFrom",
CAST("data"->'ImageDesc'->>'cs' As varchar) AS "ImageDesc-cs",
CAST("data"->'ImageDesc'->>'nl' As varchar) AS "ImageDesc-nl",
CAST("data"->'ImageDesc'->>'pl' As varchar) AS "ImageDesc-pl",
CAST("data"->'ImageTitle'->>'cs' As varchar) AS "ImageTitle-cs",
CAST("data"->'ImageTitle'->>'nl' As varchar) AS "ImageTitle-nl",
CAST("data"->'ImageTitle'->>'pl' As varchar) AS "ImageTitle-pl"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_ImageGallery
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_ImageGallery_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_ImageGallery;



DROP TABLE IF EXISTS "v_smgpois_ODHActivityPoiTypes";

CREATE TABLE "v_smgpois_ODHActivityPoiTypes" (
"smgpois_Id" varchar,
"Id" varchar,
"Self" varchar,
"Type" varchar
);

DROP FUNCTION IF EXISTS v_smgpois_ODHActivityPoiTypes_fn CASCADE;

CREATE FUNCTION v_smgpois_ODHActivityPoiTypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_ODHActivityPoiTypes"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHActivityPoiTypes') AS "data"
        WHERE NEW."data" -> 'ODHActivityPoiTypes' != 'null')
    SELECT "Id" AS "smgpois_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Type' As varchar) AS "Type"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_ODHActivityPoiTypes
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_ODHActivityPoiTypes_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_ODHActivityPoiTypes;



DROP TABLE IF EXISTS "v_smgpois_AreaId";

CREATE TABLE  "v_smgpois_AreaId" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_smgpois_AreaId_fn CASCADE;

CREATE FUNCTION v_smgpois_AreaId_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_AreaId"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'AreaId') AS "data"
        WHERE NEW."data" -> 'AreaId' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_AreaId
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_AreaId_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_AreaId;



DROP TABLE IF EXISTS "v_smgpois_AreaIds";

CREATE TABLE  "v_smgpois_AreaIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_smgpois_AreaIds_fn CASCADE;

CREATE FUNCTION v_smgpois_AreaIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_AreaIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'AreaIds') AS "data"
        WHERE NEW."data" -> 'AreaIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_AreaIds
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_AreaIds_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_AreaIds;



DROP TABLE IF EXISTS "v_smgpois_PublishedOn";

CREATE TABLE  "v_smgpois_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_smgpois_PublishedOn_fn CASCADE;

CREATE FUNCTION v_smgpois_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_PublishedOn
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_PublishedOn_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_PublishedOn;



DROP TABLE IF EXISTS "v_smgpois_Areas";

CREATE TABLE "v_smgpois_Areas" (
"smgpois_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_smgpois_Areas_fn CASCADE;

CREATE FUNCTION v_smgpois_Areas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_Areas"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Areas') AS "data"
        WHERE NEW."data" -> 'Areas' != 'null')
    SELECT "Id" AS "smgpois_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_Areas
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_Areas_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_Areas;



DROP TABLE IF EXISTS "v_smgpois_OperationSchedule";

CREATE TABLE "v_smgpois_OperationSchedule" (
"smgpois_Id" varchar,
"Stop" varchar,
"Type" varchar,
"Start" varchar,
"OperationscheduleName-de" varchar
);

DROP FUNCTION IF EXISTS v_smgpois_OperationSchedule_fn CASCADE;

CREATE FUNCTION v_smgpois_OperationSchedule_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_OperationSchedule"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'OperationSchedule') AS "data"
        WHERE NEW."data" -> 'OperationSchedule' != 'null')
    SELECT "Id" AS "smgpois_Id", CAST("data"->>'Stop' As varchar) AS "Stop",
CAST("data"->>'Type' As varchar) AS "Type",
CAST("data"->>'Start' As varchar) AS "Start",
CAST("data"->'OperationscheduleName'->>'de' As varchar) AS "OperationscheduleName-de"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_OperationSchedule
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_OperationSchedule_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_OperationSchedule;



DROP TABLE IF EXISTS "v_smgpois_OperationSchedule_OperationScheduleTime";

CREATE TABLE "v_smgpois_OperationSchedule_OperationScheduleTime" (
"smgpois_Id" varchar,
"End" varchar,
"Start" varchar,
"State" integer,
"Friday" bool,
"Monday" bool,
"Sunday" bool,
"Tuesday" bool,
"Saturday" bool,
"Thursday" bool,
"Timecode" integer,
"Thuresday" bool,
"Wednesday" bool
);

DROP FUNCTION IF EXISTS v_smgpois_OperationSchedule_OperationScheduleTime_fn CASCADE;

CREATE FUNCTION v_smgpois_OperationSchedule_OperationScheduleTime_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_OperationSchedule_OperationScheduleTime"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'OperationSchedule_OperationScheduleTime') AS "data"
        WHERE NEW."data" -> 'OperationSchedule_OperationScheduleTime' != 'null')
    SELECT "Id" AS "smgpois_Id", CAST("data"->>'End' As varchar) AS "End",
CAST("data"->>'Start' As varchar) AS "Start",
CAST("data"->>'State' As integer) AS "State",
CAST("data"->>'Friday' As bool) AS "Friday",
CAST("data"->>'Monday' As bool) AS "Monday",
CAST("data"->>'Sunday' As bool) AS "Sunday",
CAST("data"->>'Tuesday' As bool) AS "Tuesday",
CAST("data"->>'Saturday' As bool) AS "Saturday",
CAST("data"->>'Thursday' As bool) AS "Thursday",
CAST("data"->>'Timecode' As integer) AS "Timecode",
CAST("data"->>'Thuresday' As bool) AS "Thuresday",
CAST("data"->>'Wednesday' As bool) AS "Wednesday"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_OperationSchedule_OperationScheduleTime
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_OperationSchedule_OperationScheduleTime_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_OperationSchedule_OperationScheduleTime;



DROP TABLE IF EXISTS "v_smgpois_GpsTrack";

CREATE TABLE "v_smgpois_GpsTrack" (
"smgpois_Id" varchar,
"Id" varchar,
"Type" varchar,
"GpxTrackUrl" varchar,
"GpxTrackDesc-de" varchar,
"GpxTrackDesc-en" varchar,
"GpxTrackDesc-it" varchar
);

DROP FUNCTION IF EXISTS v_smgpois_GpsTrack_fn CASCADE;

CREATE FUNCTION v_smgpois_GpsTrack_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpois_GpsTrack"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'GpsTrack') AS "data"
        WHERE NEW."data" -> 'GpsTrack' != 'null')
    SELECT "Id" AS "smgpois_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Type' As varchar) AS "Type",
CAST("data"->>'GpxTrackUrl' As varchar) AS "GpxTrackUrl",
CAST("data"->'GpxTrackDesc'->>'de' As varchar) AS "GpxTrackDesc-de",
CAST("data"->'GpxTrackDesc'->>'en' As varchar) AS "GpxTrackDesc-en",
CAST("data"->'GpxTrackDesc'->>'it' As varchar) AS "GpxTrackDesc-it"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpois_GpsTrack
    BEFORE INSERT
    ON smgpois
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpois_GpsTrack_fn();

ALTER TABLE smgpois
    ENABLE ALWAYS TRIGGER t_v_smgpois_GpsTrack;



DROP TABLE IF EXISTS "v_smgpoisopen";

CREATE TABLE "v_smgpoisopen" (
"Id" varchar,
"Self" varchar,
"Type" varchar,
"AgeTo" integer,
"Active" bool,
"IsOpen" bool,
"Source" varchar,
"AgeFrom" integer,
"SubType" varchar,
"CustomId" varchar,
"FeetClimb" bool,
"Highlight" bool,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"HasRentals" bool,
"IsPrepared" bool,
"LastChange" varchar,
"FirstImport" varchar,
"IsWithLigth" bool,
"RunToValley" bool,
"AltitudeSumUp" float,
"LiftAvailable" bool,
"DistanceLength" float,
"SyncUpdateMode" varchar,
"AltitudeSumDown" float,
"HasFreeEntrance" bool,
"DistanceDuration" float,
"AltitudeDifference" float,
"MaxSeatingCapacity" integer,
"AltitudeLowestPoint" float,
"SyncSourceInterface" varchar,
"AltitudeHighestPoint" float,
"TourismorganizationId" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-de-Title" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-en-Title" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-Language" varchar,
"Detail-en-MetaDesc" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-it-Title" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-Language" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-MetaTitle" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-LogoUrl" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-LogoUrl" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-LogoUrl" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"LocationInfo-TvInfo-Id" varchar,
"LocationInfo-TvInfo-Self" varchar,
"LocationInfo-TvInfo-Name-cs" varchar,
"LocationInfo-TvInfo-Name-de" varchar,
"LocationInfo-TvInfo-Name-en" varchar,
"LocationInfo-TvInfo-Name-fr" varchar,
"LocationInfo-TvInfo-Name-it" varchar,
"LocationInfo-TvInfo-Name-nl" varchar,
"LocationInfo-TvInfo-Name-pl" varchar,
"LocationInfo-TvInfo-Name-ru" varchar,
"LocationInfo-RegionInfo-Id" varchar,
"LocationInfo-RegionInfo-Self" varchar,
"LocationInfo-RegionInfo-Name-cs" varchar,
"LocationInfo-RegionInfo-Name-de" varchar,
"LocationInfo-RegionInfo-Name-en" varchar,
"LocationInfo-RegionInfo-Name-fr" varchar,
"LocationInfo-RegionInfo-Name-it" varchar,
"LocationInfo-RegionInfo-Name-nl" varchar,
"LocationInfo-RegionInfo-Name-pl" varchar,
"LocationInfo-RegionInfo-Name-ru" varchar,
"LocationInfo-DistrictInfo-Id" varchar,
"LocationInfo-DistrictInfo-Self" varchar,
"LocationInfo-DistrictInfo-Name-cs" varchar,
"LocationInfo-DistrictInfo-Name-de" varchar,
"LocationInfo-DistrictInfo-Name-en" varchar,
"LocationInfo-DistrictInfo-Name-fr" varchar,
"LocationInfo-DistrictInfo-Name-it" varchar,
"LocationInfo-DistrictInfo-Name-nl" varchar,
"LocationInfo-DistrictInfo-Name-pl" varchar,
"LocationInfo-DistrictInfo-Name-ru" varchar,
"LocationInfo-MunicipalityInfo-Id" varchar,
"LocationInfo-MunicipalityInfo-Self" varchar,
"LocationInfo-MunicipalityInfo-Name-cs" varchar,
"LocationInfo-MunicipalityInfo-Name-de" varchar,
"LocationInfo-MunicipalityInfo-Name-en" varchar,
"LocationInfo-MunicipalityInfo-Name-fr" varchar,
"LocationInfo-MunicipalityInfo-Name-it" varchar,
"LocationInfo-MunicipalityInfo-Name-nl" varchar,
"LocationInfo-MunicipalityInfo-Name-pl" varchar,
"LocationInfo-MunicipalityInfo-Name-ru" varchar,
"AdditionalPoiInfos-de-PoiType" varchar,
"AdditionalPoiInfos-de-SubType" varchar,
"AdditionalPoiInfos-de-Language" varchar,
"AdditionalPoiInfos-de-MainType" varchar,
"AdditionalPoiInfos-en-PoiType" varchar,
"AdditionalPoiInfos-en-SubType" varchar,
"AdditionalPoiInfos-en-Language" varchar,
"AdditionalPoiInfos-en-MainType" varchar,
"AdditionalPoiInfos-it-PoiType" varchar,
"AdditionalPoiInfos-it-SubType" varchar,
"AdditionalPoiInfos-it-Language" varchar,
"AdditionalPoiInfos-it-MainType" varchar,
"PoiType" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"AdditionalPoiInfos-cs-PoiType" varchar,
"AdditionalPoiInfos-cs-SubType" varchar,
"AdditionalPoiInfos-cs-Language" varchar,
"AdditionalPoiInfos-cs-MainType" varchar,
"AdditionalPoiInfos-fr-PoiType" varchar,
"AdditionalPoiInfos-fr-SubType" varchar,
"AdditionalPoiInfos-fr-Language" varchar,
"AdditionalPoiInfos-fr-MainType" varchar,
"AdditionalPoiInfos-nl-PoiType" varchar,
"AdditionalPoiInfos-nl-SubType" varchar,
"AdditionalPoiInfos-nl-Language" varchar,
"AdditionalPoiInfos-nl-MainType" varchar,
"AdditionalPoiInfos-pl-PoiType" varchar,
"AdditionalPoiInfos-pl-SubType" varchar,
"AdditionalPoiInfos-pl-Language" varchar,
"AdditionalPoiInfos-pl-MainType" varchar,
"AdditionalPoiInfos-ru-PoiType" varchar,
"AdditionalPoiInfos-ru-SubType" varchar,
"AdditionalPoiInfos-ru-Language" varchar,
"AdditionalPoiInfos-ru-MainType" varchar,
"SmgId" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-Language" varchar,
"Detail-cs-IntroText" varchar,
"Detail-de-IntroText" varchar,
"Detail-en-IntroText" varchar,
"Detail-it-IntroText" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-Language" varchar,
"Detail-nl-IntroText" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-Language" varchar,
"Detail-pl-IntroText" varchar,
"ContactInfos-cs-City" varchar,
"ContactInfos-cs-Email" varchar,
"ContactInfos-cs-ZipCode" varchar,
"ContactInfos-cs-Language" varchar,
"ContactInfos-cs-CompanyName" varchar,
"ContactInfos-cs-CountryCode" varchar,
"ContactInfos-cs-CountryName" varchar,
"ContactInfos-cs-Phonenumber" varchar,
"ContactInfos-nl-City" varchar,
"ContactInfos-nl-Email" varchar,
"ContactInfos-nl-ZipCode" varchar,
"ContactInfos-nl-Language" varchar,
"ContactInfos-nl-CompanyName" varchar,
"ContactInfos-nl-CountryCode" varchar,
"ContactInfos-nl-CountryName" varchar,
"ContactInfos-nl-Phonenumber" varchar,
"ContactInfos-pl-City" varchar,
"ContactInfos-pl-Email" varchar,
"ContactInfos-pl-ZipCode" varchar,
"ContactInfos-pl-Language" varchar,
"ContactInfos-pl-CompanyName" varchar,
"ContactInfos-pl-CountryCode" varchar,
"ContactInfos-pl-CountryName" varchar,
"ContactInfos-pl-Phonenumber" varchar,
"GpsPoints-startingandarrivalpoint-Gpstype" varchar,
"GpsPoints-startingandarrivalpoint-Altitude" float,
"GpsPoints-startingandarrivalpoint-Latitude" float,
"GpsPoints-startingandarrivalpoint-Longitude" float,
"GpsPoints-startingandarrivalpoint-AltitudeUnitofMeasure" varchar,
"AdditionalPoiInfos-cs-Novelty" varchar,
"AdditionalPoiInfos-fr-Novelty" varchar,
"AdditionalPoiInfos-nl-Novelty" varchar,
"AdditionalPoiInfos-pl-Novelty" varchar,
"AdditionalPoiInfos-ru-Novelty" varchar,
"Detail-de-Header" varchar,
"Detail-de-SubHeader" varchar,
"Detail-en-Header" varchar,
"Detail-en-SubHeader" varchar,
"Detail-it-Header" varchar,
"Detail-it-SubHeader" varchar,
"ContactInfos-de-Faxnumber" varchar,
"ContactInfos-en-Faxnumber" varchar,
"ContactInfos-it-Faxnumber" varchar,
"GpsPoints-viewpoint-Gpstype" varchar,
"GpsPoints-viewpoint-Altitude" float,
"GpsPoints-viewpoint-Latitude" float,
"GpsPoints-viewpoint-Longitude" float,
"GpsPoints-viewpoint-AltitudeUnitofMeasure" varchar,
"ContactInfos-cs-Address" varchar,
"ContactInfos-nl-Address" varchar,
"ContactInfos-pl-Address" varchar,
"ContactInfos-cs-Url" varchar,
"ContactInfos-nl-Url" varchar,
"ContactInfos-pl-Url" varchar,
"Detail-cs-Header" varchar,
"Detail-nl-Header" varchar,
"Detail-pl-Header" varchar,
"GpsPoints-carparking-Gpstype" varchar,
"GpsPoints-carparking-Altitude" float,
"GpsPoints-carparking-Latitude" float,
"GpsPoints-carparking-Longitude" float,
"GpsPoints-carparking-AltitudeUnitofMeasure" varchar,
"AdditionalPoiInfos-de-Novelty" varchar,
"AdditionalPoiInfos-it-Novelty" varchar,
"Detail-de-GetThereText" varchar,
"Detail-cs-GetThereText" varchar,
"Detail-en-GetThereText" varchar,
"Detail-nl-GetThereText" varchar,
"Detail-pl-GetThereText" varchar,
"Detail-it-GetThereText" varchar
);

ALTER TABLE "v_smgpoisopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_smgpoisopen_fn CASCADE;

CREATE FUNCTION v_smgpoisopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_smgpoisopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'AgeTo' As integer) AS "AgeTo",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'IsOpen' As bool) AS "IsOpen",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'AgeFrom' As integer) AS "AgeFrom",
CAST(NEW."data"->>'SubType' As varchar) AS "SubType",
CAST(NEW."data"->>'CustomId' As varchar) AS "CustomId",
CAST(NEW."data"->>'FeetClimb' As bool) AS "FeetClimb",
CAST(NEW."data"->>'Highlight' As bool) AS "Highlight",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'HasRentals' As bool) AS "HasRentals",
CAST(NEW."data"->>'IsPrepared' As bool) AS "IsPrepared",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'IsWithLigth' As bool) AS "IsWithLigth",
CAST(NEW."data"->>'RunToValley' As bool) AS "RunToValley",
CAST(NEW."data"->>'AltitudeSumUp' As float) AS "AltitudeSumUp",
CAST(NEW."data"->>'LiftAvailable' As bool) AS "LiftAvailable",
CAST(NEW."data"->>'DistanceLength' As float) AS "DistanceLength",
CAST(NEW."data"->>'SyncUpdateMode' As varchar) AS "SyncUpdateMode",
CAST(NEW."data"->>'AltitudeSumDown' As float) AS "AltitudeSumDown",
CAST(NEW."data"->>'HasFreeEntrance' As bool) AS "HasFreeEntrance",
CAST(NEW."data"->>'DistanceDuration' As float) AS "DistanceDuration",
CAST(NEW."data"->>'AltitudeDifference' As float) AS "AltitudeDifference",
CAST(NEW."data"->>'MaxSeatingCapacity' As integer) AS "MaxSeatingCapacity",
CAST(NEW."data"->>'AltitudeLowestPoint' As float) AS "AltitudeLowestPoint",
CAST(NEW."data"->>'SyncSourceInterface' As varchar) AS "SyncSourceInterface",
CAST(NEW."data"->>'AltitudeHighestPoint' As float) AS "AltitudeHighestPoint",
CAST(NEW."data"->>'TourismorganizationId' As varchar) AS "TourismorganizationId",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'MetaDesc' As varchar) AS "Detail-en-MetaDesc",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'LogoUrl' As varchar) AS "ContactInfos-de-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'LogoUrl' As varchar) AS "ContactInfos-en-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'LogoUrl' As varchar) AS "ContactInfos-it-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "LocationInfo-TvInfo-Id",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "LocationInfo-TvInfo-Self",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Id' As varchar) AS "LocationInfo-DistrictInfo-Id",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->>'Self' As varchar) AS "LocationInfo-DistrictInfo-Self",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-DistrictInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'de' As varchar) AS "LocationInfo-DistrictInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'en' As varchar) AS "LocationInfo-DistrictInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-DistrictInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'it' As varchar) AS "LocationInfo-DistrictInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-DistrictInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-DistrictInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'DistrictInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-DistrictInfo-Name-ru",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Id' As varchar) AS "LocationInfo-MunicipalityInfo-Id",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->>'Self' As varchar) AS "LocationInfo-MunicipalityInfo-Self",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'cs' As varchar) AS "LocationInfo-MunicipalityInfo-Name-cs",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'de' As varchar) AS "LocationInfo-MunicipalityInfo-Name-de",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'en' As varchar) AS "LocationInfo-MunicipalityInfo-Name-en",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'fr' As varchar) AS "LocationInfo-MunicipalityInfo-Name-fr",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'it' As varchar) AS "LocationInfo-MunicipalityInfo-Name-it",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'nl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-nl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'pl' As varchar) AS "LocationInfo-MunicipalityInfo-Name-pl",
CAST(NEW."data"->'LocationInfo'->'MunicipalityInfo'->'Name'->>'ru' As varchar) AS "LocationInfo-MunicipalityInfo-Name-ru",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'PoiType' As varchar) AS "AdditionalPoiInfos-de-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'SubType' As varchar) AS "AdditionalPoiInfos-de-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'Language' As varchar) AS "AdditionalPoiInfos-de-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'MainType' As varchar) AS "AdditionalPoiInfos-de-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'PoiType' As varchar) AS "AdditionalPoiInfos-en-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'SubType' As varchar) AS "AdditionalPoiInfos-en-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'Language' As varchar) AS "AdditionalPoiInfos-en-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'en'->>'MainType' As varchar) AS "AdditionalPoiInfos-en-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'PoiType' As varchar) AS "AdditionalPoiInfos-it-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'SubType' As varchar) AS "AdditionalPoiInfos-it-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'Language' As varchar) AS "AdditionalPoiInfos-it-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'MainType' As varchar) AS "AdditionalPoiInfos-it-MainType",
CAST(NEW."data"->>'PoiType' As varchar) AS "PoiType",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'AdditionalPoiInfos'->'cs'->>'PoiType' As varchar) AS "AdditionalPoiInfos-cs-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'cs'->>'SubType' As varchar) AS "AdditionalPoiInfos-cs-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'cs'->>'Language' As varchar) AS "AdditionalPoiInfos-cs-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'cs'->>'MainType' As varchar) AS "AdditionalPoiInfos-cs-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'fr'->>'PoiType' As varchar) AS "AdditionalPoiInfos-fr-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'fr'->>'SubType' As varchar) AS "AdditionalPoiInfos-fr-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'fr'->>'Language' As varchar) AS "AdditionalPoiInfos-fr-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'fr'->>'MainType' As varchar) AS "AdditionalPoiInfos-fr-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'nl'->>'PoiType' As varchar) AS "AdditionalPoiInfos-nl-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'nl'->>'SubType' As varchar) AS "AdditionalPoiInfos-nl-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'nl'->>'Language' As varchar) AS "AdditionalPoiInfos-nl-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'nl'->>'MainType' As varchar) AS "AdditionalPoiInfos-nl-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'pl'->>'PoiType' As varchar) AS "AdditionalPoiInfos-pl-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'pl'->>'SubType' As varchar) AS "AdditionalPoiInfos-pl-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'pl'->>'Language' As varchar) AS "AdditionalPoiInfos-pl-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'pl'->>'MainType' As varchar) AS "AdditionalPoiInfos-pl-MainType",
CAST(NEW."data"->'AdditionalPoiInfos'->'ru'->>'PoiType' As varchar) AS "AdditionalPoiInfos-ru-PoiType",
CAST(NEW."data"->'AdditionalPoiInfos'->'ru'->>'SubType' As varchar) AS "AdditionalPoiInfos-ru-SubType",
CAST(NEW."data"->'AdditionalPoiInfos'->'ru'->>'Language' As varchar) AS "AdditionalPoiInfos-ru-Language",
CAST(NEW."data"->'AdditionalPoiInfos'->'ru'->>'MainType' As varchar) AS "AdditionalPoiInfos-ru-MainType",
CAST(NEW."data"->>'SmgId' As varchar) AS "SmgId",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'ContactInfos'->'cs'->>'City' As varchar) AS "ContactInfos-cs-City",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Email' As varchar) AS "ContactInfos-cs-Email",
CAST(NEW."data"->'ContactInfos'->'cs'->>'ZipCode' As varchar) AS "ContactInfos-cs-ZipCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Language' As varchar) AS "ContactInfos-cs-Language",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CompanyName' As varchar) AS "ContactInfos-cs-CompanyName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryCode' As varchar) AS "ContactInfos-cs-CountryCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryName' As varchar) AS "ContactInfos-cs-CountryName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Phonenumber' As varchar) AS "ContactInfos-cs-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'City' As varchar) AS "ContactInfos-nl-City",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Email' As varchar) AS "ContactInfos-nl-Email",
CAST(NEW."data"->'ContactInfos'->'nl'->>'ZipCode' As varchar) AS "ContactInfos-nl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Language' As varchar) AS "ContactInfos-nl-Language",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CompanyName' As varchar) AS "ContactInfos-nl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryCode' As varchar) AS "ContactInfos-nl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryName' As varchar) AS "ContactInfos-nl-CountryName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Phonenumber' As varchar) AS "ContactInfos-nl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'City' As varchar) AS "ContactInfos-pl-City",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Email' As varchar) AS "ContactInfos-pl-Email",
CAST(NEW."data"->'ContactInfos'->'pl'->>'ZipCode' As varchar) AS "ContactInfos-pl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Language' As varchar) AS "ContactInfos-pl-Language",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CompanyName' As varchar) AS "ContactInfos-pl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryCode' As varchar) AS "ContactInfos-pl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryName' As varchar) AS "ContactInfos-pl-CountryName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Phonenumber' As varchar) AS "ContactInfos-pl-Phonenumber",
CAST(NEW."data"->'GpsPoints'->'startingandarrivalpoint'->>'Gpstype' As varchar) AS "GpsPoints-startingandarrivalpoint-Gpstype",
CAST(NEW."data"->'GpsPoints'->'startingandarrivalpoint'->>'Altitude' As float) AS "GpsPoints-startingandarrivalpoint-Altitude",
CAST(NEW."data"->'GpsPoints'->'startingandarrivalpoint'->>'Latitude' As float) AS "GpsPoints-startingandarrivalpoint-Latitude",
CAST(NEW."data"->'GpsPoints'->'startingandarrivalpoint'->>'Longitude' As float) AS "GpsPoints-startingandarrivalpoint-Longitude",
CAST(NEW."data"->'GpsPoints'->'startingandarrivalpoint'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-startingandarrivalpoint-AltitudeUnitofMeasure",
CAST(NEW."data"->'AdditionalPoiInfos'->'cs'->>'Novelty' As varchar) AS "AdditionalPoiInfos-cs-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'fr'->>'Novelty' As varchar) AS "AdditionalPoiInfos-fr-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'nl'->>'Novelty' As varchar) AS "AdditionalPoiInfos-nl-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'pl'->>'Novelty' As varchar) AS "AdditionalPoiInfos-pl-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'ru'->>'Novelty' As varchar) AS "AdditionalPoiInfos-ru-Novelty",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'ContactInfos'->'de'->>'Faxnumber' As varchar) AS "ContactInfos-de-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Faxnumber' As varchar) AS "ContactInfos-en-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Faxnumber' As varchar) AS "ContactInfos-it-Faxnumber",
CAST(NEW."data"->'GpsPoints'->'viewpoint'->>'Gpstype' As varchar) AS "GpsPoints-viewpoint-Gpstype",
CAST(NEW."data"->'GpsPoints'->'viewpoint'->>'Altitude' As float) AS "GpsPoints-viewpoint-Altitude",
CAST(NEW."data"->'GpsPoints'->'viewpoint'->>'Latitude' As float) AS "GpsPoints-viewpoint-Latitude",
CAST(NEW."data"->'GpsPoints'->'viewpoint'->>'Longitude' As float) AS "GpsPoints-viewpoint-Longitude",
CAST(NEW."data"->'GpsPoints'->'viewpoint'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-viewpoint-AltitudeUnitofMeasure",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Address' As varchar) AS "ContactInfos-cs-Address",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Address' As varchar) AS "ContactInfos-nl-Address",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Address' As varchar) AS "ContactInfos-pl-Address",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Url' As varchar) AS "ContactInfos-cs-Url",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Url' As varchar) AS "ContactInfos-nl-Url",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Url' As varchar) AS "ContactInfos-pl-Url",
CAST(NEW."data"->'Detail'->'cs'->>'Header' As varchar) AS "Detail-cs-Header",
CAST(NEW."data"->'Detail'->'nl'->>'Header' As varchar) AS "Detail-nl-Header",
CAST(NEW."data"->'Detail'->'pl'->>'Header' As varchar) AS "Detail-pl-Header",
CAST(NEW."data"->'GpsPoints'->'carparking'->>'Gpstype' As varchar) AS "GpsPoints-carparking-Gpstype",
CAST(NEW."data"->'GpsPoints'->'carparking'->>'Altitude' As float) AS "GpsPoints-carparking-Altitude",
CAST(NEW."data"->'GpsPoints'->'carparking'->>'Latitude' As float) AS "GpsPoints-carparking-Latitude",
CAST(NEW."data"->'GpsPoints'->'carparking'->>'Longitude' As float) AS "GpsPoints-carparking-Longitude",
CAST(NEW."data"->'GpsPoints'->'carparking'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-carparking-AltitudeUnitofMeasure",
CAST(NEW."data"->'AdditionalPoiInfos'->'de'->>'Novelty' As varchar) AS "AdditionalPoiInfos-de-Novelty",
CAST(NEW."data"->'AdditionalPoiInfos'->'it'->>'Novelty' As varchar) AS "AdditionalPoiInfos-it-Novelty",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'Detail'->'cs'->>'GetThereText' As varchar) AS "Detail-cs-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'nl'->>'GetThereText' As varchar) AS "Detail-nl-GetThereText",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpoisopen
    BEFORE INSERT
    ON smgpoisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpoisopen_fn();

ALTER TABLE smgpoisopen
    ENABLE ALWAYS TRIGGER t_v_smgpoisopen;



DROP TABLE IF EXISTS "v_smgpoisopen_SmgTags";

CREATE TABLE  "v_smgpoisopen_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_smgpoisopen_SmgTags_fn CASCADE;

CREATE FUNCTION v_smgpoisopen_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpoisopen_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpoisopen_SmgTags
    BEFORE INSERT
    ON smgpoisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpoisopen_SmgTags_fn();

ALTER TABLE smgpoisopen
    ENABLE ALWAYS TRIGGER t_v_smgpoisopen_SmgTags;



DROP TABLE IF EXISTS "v_smgpoisopen_HasLanguage";

CREATE TABLE  "v_smgpoisopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_smgpoisopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_smgpoisopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpoisopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpoisopen_HasLanguage
    BEFORE INSERT
    ON smgpoisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpoisopen_HasLanguage_fn();

ALTER TABLE smgpoisopen
    ENABLE ALWAYS TRIGGER t_v_smgpoisopen_HasLanguage;



DROP TABLE IF EXISTS "v_smgpoisopen_GpsInfo";

CREATE TABLE "v_smgpoisopen_GpsInfo" (
"smgpoisopen_Id" varchar,
"Gpstype" varchar,
"Latitude" float,
"Longitude" float,
"Altitude" float,
"AltitudeUnitofMeasure" varchar
);

DROP FUNCTION IF EXISTS v_smgpoisopen_GpsInfo_fn CASCADE;

CREATE FUNCTION v_smgpoisopen_GpsInfo_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpoisopen_GpsInfo"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'GpsInfo') AS "data"
        WHERE NEW."data" -> 'GpsInfo' != 'null')
    SELECT "Id" AS "smgpoisopen_Id", CAST("data"->>'Gpstype' As varchar) AS "Gpstype",
CAST("data"->>'Latitude' As float) AS "Latitude",
CAST("data"->>'Longitude' As float) AS "Longitude",
CAST("data"->>'Altitude' As float) AS "Altitude",
CAST("data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpoisopen_GpsInfo
    BEFORE INSERT
    ON smgpoisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpoisopen_GpsInfo_fn();

ALTER TABLE smgpoisopen
    ENABLE ALWAYS TRIGGER t_v_smgpoisopen_GpsInfo;



DROP TABLE IF EXISTS "v_smgpoisopen_ODHTags";

CREATE TABLE "v_smgpoisopen_ODHTags" (
"smgpoisopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_smgpoisopen_ODHTags_fn CASCADE;

CREATE FUNCTION v_smgpoisopen_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpoisopen_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "smgpoisopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpoisopen_ODHTags
    BEFORE INSERT
    ON smgpoisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpoisopen_ODHTags_fn();

ALTER TABLE smgpoisopen
    ENABLE ALWAYS TRIGGER t_v_smgpoisopen_ODHTags;



DROP TABLE IF EXISTS "v_smgpoisopen_ODHActivityPoiTypes";

CREATE TABLE "v_smgpoisopen_ODHActivityPoiTypes" (
"smgpoisopen_Id" varchar,
"Id" varchar,
"Self" varchar,
"Type" varchar
);

DROP FUNCTION IF EXISTS v_smgpoisopen_ODHActivityPoiTypes_fn CASCADE;

CREATE FUNCTION v_smgpoisopen_ODHActivityPoiTypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpoisopen_ODHActivityPoiTypes"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHActivityPoiTypes') AS "data"
        WHERE NEW."data" -> 'ODHActivityPoiTypes' != 'null')
    SELECT "Id" AS "smgpoisopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Type' As varchar) AS "Type"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpoisopen_ODHActivityPoiTypes
    BEFORE INSERT
    ON smgpoisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpoisopen_ODHActivityPoiTypes_fn();

ALTER TABLE smgpoisopen
    ENABLE ALWAYS TRIGGER t_v_smgpoisopen_ODHActivityPoiTypes;



DROP TABLE IF EXISTS "v_smgpoisopen_PublishedOn";

CREATE TABLE  "v_smgpoisopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_smgpoisopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_smgpoisopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpoisopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpoisopen_PublishedOn
    BEFORE INSERT
    ON smgpoisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpoisopen_PublishedOn_fn();

ALTER TABLE smgpoisopen
    ENABLE ALWAYS TRIGGER t_v_smgpoisopen_PublishedOn;



DROP TABLE IF EXISTS "v_smgpoisopen_PoiServices";

CREATE TABLE  "v_smgpoisopen_PoiServices" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_smgpoisopen_PoiServices_fn CASCADE;

CREATE FUNCTION v_smgpoisopen_PoiServices_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpoisopen_PoiServices"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PoiServices') AS "data"
        WHERE NEW."data" -> 'PoiServices' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpoisopen_PoiServices
    BEFORE INSERT
    ON smgpoisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpoisopen_PoiServices_fn();

ALTER TABLE smgpoisopen
    ENABLE ALWAYS TRIGGER t_v_smgpoisopen_PoiServices;



DROP TABLE IF EXISTS "v_smgpoisopen_CategoryCodes";

CREATE TABLE "v_smgpoisopen_CategoryCodes" (
"smgpoisopen_Id" varchar,
"Id" varchar,
"Self" varchar,
"Shortname" varchar
);

DROP FUNCTION IF EXISTS v_smgpoisopen_CategoryCodes_fn CASCADE;

CREATE FUNCTION v_smgpoisopen_CategoryCodes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpoisopen_CategoryCodes"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'CategoryCodes') AS "data"
        WHERE NEW."data" -> 'CategoryCodes' != 'null')
    SELECT "Id" AS "smgpoisopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self",
CAST("data"->>'Shortname' As varchar) AS "Shortname"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpoisopen_CategoryCodes
    BEFORE INSERT
    ON smgpoisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpoisopen_CategoryCodes_fn();

ALTER TABLE smgpoisopen
    ENABLE ALWAYS TRIGGER t_v_smgpoisopen_CategoryCodes;



DROP TABLE IF EXISTS "v_smgpoisopen_ImageGallery";

CREATE TABLE "v_smgpoisopen_ImageGallery" (
"smgpoisopen_Id" varchar,
"Width" integer,
"Height" integer,
"ImageUrl" varchar,
"CopyRight" varchar,
"ImageSource" varchar,
"IsInGallery" bool,
"ListPosition" integer
);

DROP FUNCTION IF EXISTS v_smgpoisopen_ImageGallery_fn CASCADE;

CREATE FUNCTION v_smgpoisopen_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgpoisopen_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "smgpoisopen_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'CopyRight' As varchar) AS "CopyRight",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpoisopen_ImageGallery
    BEFORE INSERT
    ON smgpoisopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpoisopen_ImageGallery_fn();

ALTER TABLE smgpoisopen
    ENABLE ALWAYS TRIGGER t_v_smgpoisopen_ImageGallery;



DROP TABLE IF EXISTS "v_smgpoitypes";

CREATE TABLE "v_smgpoitypes" (
"Id" varchar,
"Key" varchar,
"Type" varchar,
"Parent" varchar,
"Bitmask" integer,
"TypeDesc-cs" varchar,
"TypeDesc-de" varchar,
"TypeDesc-en" varchar,
"TypeDesc-fr" varchar,
"TypeDesc-it" varchar,
"TypeDesc-nl" varchar,
"TypeDesc-pl" varchar,
"TypeDesc-ru" varchar
);

ALTER TABLE "v_smgpoitypes" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_smgpoitypes_fn CASCADE;

CREATE FUNCTION v_smgpoitypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_smgpoitypes
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Key' As varchar) AS "Key",
CAST(NEW."data"->>'Type' As varchar) AS "Type",
CAST(NEW."data"->>'Parent' As varchar) AS "Parent",
CAST(NEW."data"->>'Bitmask' As integer) AS "Bitmask",
CAST(NEW."data"->'TypeDesc'->>'cs' As varchar) AS "TypeDesc-cs",
CAST(NEW."data"->'TypeDesc'->>'de' As varchar) AS "TypeDesc-de",
CAST(NEW."data"->'TypeDesc'->>'en' As varchar) AS "TypeDesc-en",
CAST(NEW."data"->'TypeDesc'->>'fr' As varchar) AS "TypeDesc-fr",
CAST(NEW."data"->'TypeDesc'->>'it' As varchar) AS "TypeDesc-it",
CAST(NEW."data"->'TypeDesc'->>'nl' As varchar) AS "TypeDesc-nl",
CAST(NEW."data"->'TypeDesc'->>'pl' As varchar) AS "TypeDesc-pl",
CAST(NEW."data"->'TypeDesc'->>'ru' As varchar) AS "TypeDesc-ru";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgpoitypes
    BEFORE INSERT
    ON smgpoitypes
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgpoitypes_fn();

ALTER TABLE smgpoitypes
    ENABLE ALWAYS TRIGGER t_v_smgpoitypes;



DROP TABLE IF EXISTS "v_smgtags";

CREATE TABLE "v_smgtags" (
"Id" varchar,
"Self" varchar,
"Shortname" varchar,
"LastChange" varchar,
"MainEntity" varchar,
"FirstImport" varchar,
"DisplayAsCategory" bool,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"TagName-de" varchar,
"TagName-cs" varchar,
"TagName-en" varchar,
"TagName-fr" varchar,
"TagName-it" varchar,
"TagName-nl" varchar,
"TagName-pl" varchar,
"TagName-ru" varchar
);

ALTER TABLE "v_smgtags" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_smgtags_fn CASCADE;

CREATE FUNCTION v_smgtags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_smgtags
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'MainEntity' As varchar) AS "MainEntity",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->>'DisplayAsCategory' As bool) AS "DisplayAsCategory",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'TagName'->>'de' As varchar) AS "TagName-de",
CAST(NEW."data"->'TagName'->>'cs' As varchar) AS "TagName-cs",
CAST(NEW."data"->'TagName'->>'en' As varchar) AS "TagName-en",
CAST(NEW."data"->'TagName'->>'fr' As varchar) AS "TagName-fr",
CAST(NEW."data"->'TagName'->>'it' As varchar) AS "TagName-it",
CAST(NEW."data"->'TagName'->>'nl' As varchar) AS "TagName-nl",
CAST(NEW."data"->'TagName'->>'pl' As varchar) AS "TagName-pl",
CAST(NEW."data"->'TagName'->>'ru' As varchar) AS "TagName-ru";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgtags
    BEFORE INSERT
    ON smgtags
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgtags_fn();

ALTER TABLE smgtags
    ENABLE ALWAYS TRIGGER t_v_smgtags;



DROP TABLE IF EXISTS "v_smgtags_Source";

CREATE TABLE  "v_smgtags_Source" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_smgtags_Source_fn CASCADE;

CREATE FUNCTION v_smgtags_Source_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgtags_Source"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'Source') AS "data"
        WHERE NEW."data" -> 'Source' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgtags_Source
    BEFORE INSERT
    ON smgtags
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgtags_Source_fn();

ALTER TABLE smgtags
    ENABLE ALWAYS TRIGGER t_v_smgtags_Source;



DROP TABLE IF EXISTS "v_smgtags_ValidForEntity";

CREATE TABLE  "v_smgtags_ValidForEntity" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_smgtags_ValidForEntity_fn CASCADE;

CREATE FUNCTION v_smgtags_ValidForEntity_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_smgtags_ValidForEntity"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'ValidForEntity') AS "data"
        WHERE NEW."data" -> 'ValidForEntity' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_smgtags_ValidForEntity
    BEFORE INSERT
    ON smgtags
    FOR EACH ROW
    EXECUTE PROCEDURE v_smgtags_ValidForEntity_fn();

ALTER TABLE smgtags
    ENABLE ALWAYS TRIGGER t_v_smgtags_ValidForEntity;



DROP TABLE IF EXISTS "v_suedtiroltypes";

CREATE TABLE "v_suedtiroltypes" (
"Id" varchar,
"Key" varchar,
"Level" integer,
"Entity" varchar,
"Bitmask" integer,
"TypeParent" varchar,
"TypeNames-cs" varchar,
"TypeNames-de" varchar,
"TypeNames-en" varchar,
"TypeNames-fr" varchar,
"TypeNames-it" varchar,
"TypeNames-nl" varchar,
"TypeNames-pl" varchar,
"TypeNames-ru" varchar
);

ALTER TABLE "v_suedtiroltypes" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_suedtiroltypes_fn CASCADE;

CREATE FUNCTION v_suedtiroltypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_suedtiroltypes
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Key' As varchar) AS "Key",
CAST(NEW."data"->>'Level' As integer) AS "Level",
CAST(NEW."data"->>'Entity' As varchar) AS "Entity",
CAST(NEW."data"->>'Bitmask' As integer) AS "Bitmask",
CAST(NEW."data"->>'TypeParent' As varchar) AS "TypeParent",
CAST(NEW."data"->'TypeNames'->>'cs' As varchar) AS "TypeNames-cs",
CAST(NEW."data"->'TypeNames'->>'de' As varchar) AS "TypeNames-de",
CAST(NEW."data"->'TypeNames'->>'en' As varchar) AS "TypeNames-en",
CAST(NEW."data"->'TypeNames'->>'fr' As varchar) AS "TypeNames-fr",
CAST(NEW."data"->'TypeNames'->>'it' As varchar) AS "TypeNames-it",
CAST(NEW."data"->'TypeNames'->>'nl' As varchar) AS "TypeNames-nl",
CAST(NEW."data"->'TypeNames'->>'pl' As varchar) AS "TypeNames-pl",
CAST(NEW."data"->'TypeNames'->>'ru' As varchar) AS "TypeNames-ru";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_suedtiroltypes
    BEFORE INSERT
    ON suedtiroltypes
    FOR EACH ROW
    EXECUTE PROCEDURE v_suedtiroltypes_fn();

ALTER TABLE suedtiroltypes
    ENABLE ALWAYS TRIGGER t_v_suedtiroltypes;



DROP TABLE IF EXISTS "v_tvs";

CREATE TABLE "v_tvs" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"CustomId" varchar,
"Latitude" float,
"RegionId" varchar,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"VisibleInSearch" bool,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-Header" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-Language" varchar,
"Detail-cs-MetaDesc" varchar,
"Detail-cs-IntroText" varchar,
"Detail-cs-MetaTitle" varchar,
"Detail-cs-SubHeader" varchar,
"Detail-cs-GetThereText" varchar,
"Detail-cs-AdditionalText" varchar,
"Detail-de-Title" varchar,
"Detail-de-Header" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-de-SubHeader" varchar,
"Detail-en-Title" varchar,
"Detail-en-Header" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-Language" varchar,
"Detail-en-MetaDesc" varchar,
"Detail-en-IntroText" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-en-SubHeader" varchar,
"Detail-en-GetThereText" varchar,
"Detail-en-AdditionalText" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Header" varchar,
"Detail-fr-BaseText" varchar,
"Detail-fr-Language" varchar,
"Detail-fr-MetaDesc" varchar,
"Detail-fr-IntroText" varchar,
"Detail-fr-MetaTitle" varchar,
"Detail-fr-SubHeader" varchar,
"Detail-fr-GetThereText" varchar,
"Detail-fr-AdditionalText" varchar,
"Detail-it-Title" varchar,
"Detail-it-Header" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-Language" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-MetaTitle" varchar,
"Detail-it-SubHeader" varchar,
"Detail-it-GetThereText" varchar,
"Detail-it-AdditionalText" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-Header" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-Language" varchar,
"Detail-nl-MetaDesc" varchar,
"Detail-nl-IntroText" varchar,
"Detail-nl-MetaTitle" varchar,
"Detail-nl-SubHeader" varchar,
"Detail-nl-GetThereText" varchar,
"Detail-nl-AdditionalText" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-Header" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-Language" varchar,
"Detail-pl-MetaDesc" varchar,
"Detail-pl-IntroText" varchar,
"Detail-pl-MetaTitle" varchar,
"Detail-pl-SubHeader" varchar,
"Detail-pl-GetThereText" varchar,
"Detail-pl-AdditionalText" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Header" varchar,
"Detail-ru-BaseText" varchar,
"Detail-ru-Language" varchar,
"Detail-ru-MetaDesc" varchar,
"Detail-ru-IntroText" varchar,
"Detail-ru-MetaTitle" varchar,
"Detail-ru-SubHeader" varchar,
"Detail-ru-GetThereText" varchar,
"Detail-ru-AdditionalText" varchar,
"Region-Id" varchar,
"Region-Self" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-cs-Url" varchar,
"ContactInfos-cs-Vat" varchar,
"ContactInfos-cs-City" varchar,
"ContactInfos-cs-Email" varchar,
"ContactInfos-cs-Address" varchar,
"ContactInfos-cs-LogoUrl" varchar,
"ContactInfos-cs-Surname" varchar,
"ContactInfos-cs-ZipCode" varchar,
"ContactInfos-cs-Language" varchar,
"ContactInfos-cs-Faxnumber" varchar,
"ContactInfos-cs-Givenname" varchar,
"ContactInfos-cs-NamePrefix" varchar,
"ContactInfos-cs-CompanyName" varchar,
"ContactInfos-cs-CountryCode" varchar,
"ContactInfos-cs-CountryName" varchar,
"ContactInfos-cs-Phonenumber" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-LogoUrl" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-Vat" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-LogoUrl" varchar,
"ContactInfos-en-Surname" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-Faxnumber" varchar,
"ContactInfos-en-Givenname" varchar,
"ContactInfos-en-NamePrefix" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-fr-Url" varchar,
"ContactInfos-fr-Vat" varchar,
"ContactInfos-fr-City" varchar,
"ContactInfos-fr-Email" varchar,
"ContactInfos-fr-Address" varchar,
"ContactInfos-fr-LogoUrl" varchar,
"ContactInfos-fr-Surname" varchar,
"ContactInfos-fr-ZipCode" varchar,
"ContactInfos-fr-Language" varchar,
"ContactInfos-fr-Faxnumber" varchar,
"ContactInfos-fr-Givenname" varchar,
"ContactInfos-fr-NamePrefix" varchar,
"ContactInfos-fr-CompanyName" varchar,
"ContactInfos-fr-CountryCode" varchar,
"ContactInfos-fr-CountryName" varchar,
"ContactInfos-fr-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-Vat" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-LogoUrl" varchar,
"ContactInfos-it-Surname" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-Faxnumber" varchar,
"ContactInfos-it-Givenname" varchar,
"ContactInfos-it-NamePrefix" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"ContactInfos-nl-Url" varchar,
"ContactInfos-nl-Vat" varchar,
"ContactInfos-nl-City" varchar,
"ContactInfos-nl-Email" varchar,
"ContactInfos-nl-Address" varchar,
"ContactInfos-nl-LogoUrl" varchar,
"ContactInfos-nl-Surname" varchar,
"ContactInfos-nl-ZipCode" varchar,
"ContactInfos-nl-Language" varchar,
"ContactInfos-nl-Faxnumber" varchar,
"ContactInfos-nl-Givenname" varchar,
"ContactInfos-nl-NamePrefix" varchar,
"ContactInfos-nl-CompanyName" varchar,
"ContactInfos-nl-CountryCode" varchar,
"ContactInfos-nl-CountryName" varchar,
"ContactInfos-nl-Phonenumber" varchar,
"ContactInfos-pl-Url" varchar,
"ContactInfos-pl-Vat" varchar,
"ContactInfos-pl-City" varchar,
"ContactInfos-pl-Email" varchar,
"ContactInfos-pl-Address" varchar,
"ContactInfos-pl-LogoUrl" varchar,
"ContactInfos-pl-Surname" varchar,
"ContactInfos-pl-ZipCode" varchar,
"ContactInfos-pl-Language" varchar,
"ContactInfos-pl-Faxnumber" varchar,
"ContactInfos-pl-Givenname" varchar,
"ContactInfos-pl-NamePrefix" varchar,
"ContactInfos-pl-CompanyName" varchar,
"ContactInfos-pl-CountryCode" varchar,
"ContactInfos-pl-CountryName" varchar,
"ContactInfos-pl-Phonenumber" varchar,
"ContactInfos-ru-Url" varchar,
"ContactInfos-ru-Vat" varchar,
"ContactInfos-ru-City" varchar,
"ContactInfos-ru-Email" varchar,
"ContactInfos-ru-Address" varchar,
"ContactInfos-ru-LogoUrl" varchar,
"ContactInfos-ru-Surname" varchar,
"ContactInfos-ru-ZipCode" varchar,
"ContactInfos-ru-Language" varchar,
"ContactInfos-ru-Faxnumber" varchar,
"ContactInfos-ru-Givenname" varchar,
"ContactInfos-ru-NamePrefix" varchar,
"ContactInfos-ru-CompanyName" varchar,
"ContactInfos-ru-CountryCode" varchar,
"ContactInfos-ru-CountryName" varchar,
"ContactInfos-ru-Phonenumber" varchar,
"Detail-de-GetThereText" varchar,
"Detail-de-AdditionalText" varchar
);

ALTER TABLE "v_tvs" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_tvs_fn CASCADE;

CREATE FUNCTION v_tvs_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_tvs
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'CustomId' As varchar) AS "CustomId",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'RegionId' As varchar) AS "RegionId",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'VisibleInSearch' As bool) AS "VisibleInSearch",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'Header' As varchar) AS "Detail-cs-Header",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'cs'->>'MetaDesc' As varchar) AS "Detail-cs-MetaDesc",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'cs'->>'MetaTitle' As varchar) AS "Detail-cs-MetaTitle",
CAST(NEW."data"->'Detail'->'cs'->>'SubHeader' As varchar) AS "Detail-cs-SubHeader",
CAST(NEW."data"->'Detail'->'cs'->>'GetThereText' As varchar) AS "Detail-cs-GetThereText",
CAST(NEW."data"->'Detail'->'cs'->>'AdditionalText' As varchar) AS "Detail-cs-AdditionalText",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'MetaDesc' As varchar) AS "Detail-en-MetaDesc",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'AdditionalText' As varchar) AS "Detail-en-AdditionalText",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Header' As varchar) AS "Detail-fr-Header",
CAST(NEW."data"->'Detail'->'fr'->>'BaseText' As varchar) AS "Detail-fr-BaseText",
CAST(NEW."data"->'Detail'->'fr'->>'Language' As varchar) AS "Detail-fr-Language",
CAST(NEW."data"->'Detail'->'fr'->>'MetaDesc' As varchar) AS "Detail-fr-MetaDesc",
CAST(NEW."data"->'Detail'->'fr'->>'IntroText' As varchar) AS "Detail-fr-IntroText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaTitle' As varchar) AS "Detail-fr-MetaTitle",
CAST(NEW."data"->'Detail'->'fr'->>'SubHeader' As varchar) AS "Detail-fr-SubHeader",
CAST(NEW."data"->'Detail'->'fr'->>'GetThereText' As varchar) AS "Detail-fr-GetThereText",
CAST(NEW."data"->'Detail'->'fr'->>'AdditionalText' As varchar) AS "Detail-fr-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'AdditionalText' As varchar) AS "Detail-it-AdditionalText",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Header' As varchar) AS "Detail-nl-Header",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'nl'->>'MetaDesc' As varchar) AS "Detail-nl-MetaDesc",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'MetaTitle' As varchar) AS "Detail-nl-MetaTitle",
CAST(NEW."data"->'Detail'->'nl'->>'SubHeader' As varchar) AS "Detail-nl-SubHeader",
CAST(NEW."data"->'Detail'->'nl'->>'GetThereText' As varchar) AS "Detail-nl-GetThereText",
CAST(NEW."data"->'Detail'->'nl'->>'AdditionalText' As varchar) AS "Detail-nl-AdditionalText",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Header' As varchar) AS "Detail-pl-Header",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'MetaDesc' As varchar) AS "Detail-pl-MetaDesc",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'MetaTitle' As varchar) AS "Detail-pl-MetaTitle",
CAST(NEW."data"->'Detail'->'pl'->>'SubHeader' As varchar) AS "Detail-pl-SubHeader",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'pl'->>'AdditionalText' As varchar) AS "Detail-pl-AdditionalText",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Header' As varchar) AS "Detail-ru-Header",
CAST(NEW."data"->'Detail'->'ru'->>'BaseText' As varchar) AS "Detail-ru-BaseText",
CAST(NEW."data"->'Detail'->'ru'->>'Language' As varchar) AS "Detail-ru-Language",
CAST(NEW."data"->'Detail'->'ru'->>'MetaDesc' As varchar) AS "Detail-ru-MetaDesc",
CAST(NEW."data"->'Detail'->'ru'->>'IntroText' As varchar) AS "Detail-ru-IntroText",
CAST(NEW."data"->'Detail'->'ru'->>'MetaTitle' As varchar) AS "Detail-ru-MetaTitle",
CAST(NEW."data"->'Detail'->'ru'->>'SubHeader' As varchar) AS "Detail-ru-SubHeader",
CAST(NEW."data"->'Detail'->'ru'->>'GetThereText' As varchar) AS "Detail-ru-GetThereText",
CAST(NEW."data"->'Detail'->'ru'->>'AdditionalText' As varchar) AS "Detail-ru-AdditionalText",
CAST(NEW."data"->'Region'->>'Id' As varchar) AS "Region-Id",
CAST(NEW."data"->'Region'->>'Self' As varchar) AS "Region-Self",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Url' As varchar) AS "ContactInfos-cs-Url",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Vat' As varchar) AS "ContactInfos-cs-Vat",
CAST(NEW."data"->'ContactInfos'->'cs'->>'City' As varchar) AS "ContactInfos-cs-City",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Email' As varchar) AS "ContactInfos-cs-Email",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Address' As varchar) AS "ContactInfos-cs-Address",
CAST(NEW."data"->'ContactInfos'->'cs'->>'LogoUrl' As varchar) AS "ContactInfos-cs-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Surname' As varchar) AS "ContactInfos-cs-Surname",
CAST(NEW."data"->'ContactInfos'->'cs'->>'ZipCode' As varchar) AS "ContactInfos-cs-ZipCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Language' As varchar) AS "ContactInfos-cs-Language",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Faxnumber' As varchar) AS "ContactInfos-cs-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Givenname' As varchar) AS "ContactInfos-cs-Givenname",
CAST(NEW."data"->'ContactInfos'->'cs'->>'NamePrefix' As varchar) AS "ContactInfos-cs-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CompanyName' As varchar) AS "ContactInfos-cs-CompanyName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryCode' As varchar) AS "ContactInfos-cs-CountryCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryName' As varchar) AS "ContactInfos-cs-CountryName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Phonenumber' As varchar) AS "ContactInfos-cs-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'LogoUrl' As varchar) AS "ContactInfos-de-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'Vat' As varchar) AS "ContactInfos-en-Vat",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'LogoUrl' As varchar) AS "ContactInfos-en-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'en'->>'Surname' As varchar) AS "ContactInfos-en-Surname",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Faxnumber' As varchar) AS "ContactInfos-en-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Givenname' As varchar) AS "ContactInfos-en-Givenname",
CAST(NEW."data"->'ContactInfos'->'en'->>'NamePrefix' As varchar) AS "ContactInfos-en-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Url' As varchar) AS "ContactInfos-fr-Url",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Vat' As varchar) AS "ContactInfos-fr-Vat",
CAST(NEW."data"->'ContactInfos'->'fr'->>'City' As varchar) AS "ContactInfos-fr-City",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Email' As varchar) AS "ContactInfos-fr-Email",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Address' As varchar) AS "ContactInfos-fr-Address",
CAST(NEW."data"->'ContactInfos'->'fr'->>'LogoUrl' As varchar) AS "ContactInfos-fr-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Surname' As varchar) AS "ContactInfos-fr-Surname",
CAST(NEW."data"->'ContactInfos'->'fr'->>'ZipCode' As varchar) AS "ContactInfos-fr-ZipCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Language' As varchar) AS "ContactInfos-fr-Language",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Faxnumber' As varchar) AS "ContactInfos-fr-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Givenname' As varchar) AS "ContactInfos-fr-Givenname",
CAST(NEW."data"->'ContactInfos'->'fr'->>'NamePrefix' As varchar) AS "ContactInfos-fr-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CompanyName' As varchar) AS "ContactInfos-fr-CompanyName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryCode' As varchar) AS "ContactInfos-fr-CountryCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryName' As varchar) AS "ContactInfos-fr-CountryName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Phonenumber' As varchar) AS "ContactInfos-fr-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'Vat' As varchar) AS "ContactInfos-it-Vat",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'LogoUrl' As varchar) AS "ContactInfos-it-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'it'->>'Surname' As varchar) AS "ContactInfos-it-Surname",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'Faxnumber' As varchar) AS "ContactInfos-it-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Givenname' As varchar) AS "ContactInfos-it-Givenname",
CAST(NEW."data"->'ContactInfos'->'it'->>'NamePrefix' As varchar) AS "ContactInfos-it-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Url' As varchar) AS "ContactInfos-nl-Url",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Vat' As varchar) AS "ContactInfos-nl-Vat",
CAST(NEW."data"->'ContactInfos'->'nl'->>'City' As varchar) AS "ContactInfos-nl-City",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Email' As varchar) AS "ContactInfos-nl-Email",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Address' As varchar) AS "ContactInfos-nl-Address",
CAST(NEW."data"->'ContactInfos'->'nl'->>'LogoUrl' As varchar) AS "ContactInfos-nl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Surname' As varchar) AS "ContactInfos-nl-Surname",
CAST(NEW."data"->'ContactInfos'->'nl'->>'ZipCode' As varchar) AS "ContactInfos-nl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Language' As varchar) AS "ContactInfos-nl-Language",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Faxnumber' As varchar) AS "ContactInfos-nl-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Givenname' As varchar) AS "ContactInfos-nl-Givenname",
CAST(NEW."data"->'ContactInfos'->'nl'->>'NamePrefix' As varchar) AS "ContactInfos-nl-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CompanyName' As varchar) AS "ContactInfos-nl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryCode' As varchar) AS "ContactInfos-nl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryName' As varchar) AS "ContactInfos-nl-CountryName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Phonenumber' As varchar) AS "ContactInfos-nl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Url' As varchar) AS "ContactInfos-pl-Url",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Vat' As varchar) AS "ContactInfos-pl-Vat",
CAST(NEW."data"->'ContactInfos'->'pl'->>'City' As varchar) AS "ContactInfos-pl-City",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Email' As varchar) AS "ContactInfos-pl-Email",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Address' As varchar) AS "ContactInfos-pl-Address",
CAST(NEW."data"->'ContactInfos'->'pl'->>'LogoUrl' As varchar) AS "ContactInfos-pl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Surname' As varchar) AS "ContactInfos-pl-Surname",
CAST(NEW."data"->'ContactInfos'->'pl'->>'ZipCode' As varchar) AS "ContactInfos-pl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Language' As varchar) AS "ContactInfos-pl-Language",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Faxnumber' As varchar) AS "ContactInfos-pl-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Givenname' As varchar) AS "ContactInfos-pl-Givenname",
CAST(NEW."data"->'ContactInfos'->'pl'->>'NamePrefix' As varchar) AS "ContactInfos-pl-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CompanyName' As varchar) AS "ContactInfos-pl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryCode' As varchar) AS "ContactInfos-pl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryName' As varchar) AS "ContactInfos-pl-CountryName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Phonenumber' As varchar) AS "ContactInfos-pl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Url' As varchar) AS "ContactInfos-ru-Url",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Vat' As varchar) AS "ContactInfos-ru-Vat",
CAST(NEW."data"->'ContactInfos'->'ru'->>'City' As varchar) AS "ContactInfos-ru-City",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Email' As varchar) AS "ContactInfos-ru-Email",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Address' As varchar) AS "ContactInfos-ru-Address",
CAST(NEW."data"->'ContactInfos'->'ru'->>'LogoUrl' As varchar) AS "ContactInfos-ru-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Surname' As varchar) AS "ContactInfos-ru-Surname",
CAST(NEW."data"->'ContactInfos'->'ru'->>'ZipCode' As varchar) AS "ContactInfos-ru-ZipCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Language' As varchar) AS "ContactInfos-ru-Language",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Faxnumber' As varchar) AS "ContactInfos-ru-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Givenname' As varchar) AS "ContactInfos-ru-Givenname",
CAST(NEW."data"->'ContactInfos'->'ru'->>'NamePrefix' As varchar) AS "ContactInfos-ru-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CompanyName' As varchar) AS "ContactInfos-ru-CompanyName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryCode' As varchar) AS "ContactInfos-ru-CountryCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryName' As varchar) AS "ContactInfos-ru-CountryName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Phonenumber' As varchar) AS "ContactInfos-ru-Phonenumber",
CAST(NEW."data"->'Detail'->'de'->>'GetThereText' As varchar) AS "Detail-de-GetThereText",
CAST(NEW."data"->'Detail'->'de'->>'AdditionalText' As varchar) AS "Detail-de-AdditionalText";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvs
    BEFORE INSERT
    ON tvs
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvs_fn();

ALTER TABLE tvs
    ENABLE ALWAYS TRIGGER t_v_tvs;



DROP TABLE IF EXISTS "v_tvs_SmgTags";

CREATE TABLE  "v_tvs_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_tvs_SmgTags_fn CASCADE;

CREATE FUNCTION v_tvs_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvs_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvs_SmgTags
    BEFORE INSERT
    ON tvs
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvs_SmgTags_fn();

ALTER TABLE tvs
    ENABLE ALWAYS TRIGGER t_v_tvs_SmgTags;



DROP TABLE IF EXISTS "v_tvs_HasLanguage";

CREATE TABLE  "v_tvs_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_tvs_HasLanguage_fn CASCADE;

CREATE FUNCTION v_tvs_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvs_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvs_HasLanguage
    BEFORE INSERT
    ON tvs
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvs_HasLanguage_fn();

ALTER TABLE tvs
    ENABLE ALWAYS TRIGGER t_v_tvs_HasLanguage;



DROP TABLE IF EXISTS "v_tvs_ODHTags";

CREATE TABLE "v_tvs_ODHTags" (
"tvs_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_tvs_ODHTags_fn CASCADE;

CREATE FUNCTION v_tvs_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvs_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "tvs_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvs_ODHTags
    BEFORE INSERT
    ON tvs
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvs_ODHTags_fn();

ALTER TABLE tvs
    ENABLE ALWAYS TRIGGER t_v_tvs_ODHTags;



DROP TABLE IF EXISTS "v_tvs_SkiareaIds";

CREATE TABLE  "v_tvs_SkiareaIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_tvs_SkiareaIds_fn CASCADE;

CREATE FUNCTION v_tvs_SkiareaIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvs_SkiareaIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SkiareaIds') AS "data"
        WHERE NEW."data" -> 'SkiareaIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvs_SkiareaIds
    BEFORE INSERT
    ON tvs
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvs_SkiareaIds_fn();

ALTER TABLE tvs
    ENABLE ALWAYS TRIGGER t_v_tvs_SkiareaIds;



DROP TABLE IF EXISTS "v_tvs_SkiAreas";

CREATE TABLE "v_tvs_SkiAreas" (
"tvs_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_tvs_SkiAreas_fn CASCADE;

CREATE FUNCTION v_tvs_SkiAreas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvs_SkiAreas"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'SkiAreas') AS "data"
        WHERE NEW."data" -> 'SkiAreas' != 'null')
    SELECT "Id" AS "tvs_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvs_SkiAreas
    BEFORE INSERT
    ON tvs
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvs_SkiAreas_fn();

ALTER TABLE tvs
    ENABLE ALWAYS TRIGGER t_v_tvs_SkiAreas;



DROP TABLE IF EXISTS "v_tvs_ImageGallery";

CREATE TABLE "v_tvs_ImageGallery" (
"tvs_Id" varchar,
"Width" integer,
"Height" integer,
"ValidTo" varchar,
"ImageUrl" varchar,
"ImageName" varchar,
"ValidFrom" varchar,
"ImageSource" varchar,
"IsInGallery" bool,
"ListPosition" integer,
"ImageDesc-cs" varchar,
"ImageDesc-de" varchar,
"ImageDesc-en" varchar,
"ImageDesc-fr" varchar,
"ImageDesc-it" varchar,
"ImageDesc-nl" varchar,
"ImageDesc-pl" varchar,
"ImageDesc-ru" varchar,
"ImageTitle-cs" varchar,
"ImageTitle-de" varchar,
"ImageTitle-en" varchar,
"ImageTitle-fr" varchar,
"ImageTitle-it" varchar,
"ImageTitle-nl" varchar,
"ImageTitle-pl" varchar,
"ImageTitle-ru" varchar
);

DROP FUNCTION IF EXISTS v_tvs_ImageGallery_fn CASCADE;

CREATE FUNCTION v_tvs_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvs_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "tvs_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ValidTo' As varchar) AS "ValidTo",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'ImageName' As varchar) AS "ImageName",
CAST("data"->>'ValidFrom' As varchar) AS "ValidFrom",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'ImageDesc'->>'cs' As varchar) AS "ImageDesc-cs",
CAST("data"->'ImageDesc'->>'de' As varchar) AS "ImageDesc-de",
CAST("data"->'ImageDesc'->>'en' As varchar) AS "ImageDesc-en",
CAST("data"->'ImageDesc'->>'fr' As varchar) AS "ImageDesc-fr",
CAST("data"->'ImageDesc'->>'it' As varchar) AS "ImageDesc-it",
CAST("data"->'ImageDesc'->>'nl' As varchar) AS "ImageDesc-nl",
CAST("data"->'ImageDesc'->>'pl' As varchar) AS "ImageDesc-pl",
CAST("data"->'ImageDesc'->>'ru' As varchar) AS "ImageDesc-ru",
CAST("data"->'ImageTitle'->>'cs' As varchar) AS "ImageTitle-cs",
CAST("data"->'ImageTitle'->>'de' As varchar) AS "ImageTitle-de",
CAST("data"->'ImageTitle'->>'en' As varchar) AS "ImageTitle-en",
CAST("data"->'ImageTitle'->>'fr' As varchar) AS "ImageTitle-fr",
CAST("data"->'ImageTitle'->>'it' As varchar) AS "ImageTitle-it",
CAST("data"->'ImageTitle'->>'nl' As varchar) AS "ImageTitle-nl",
CAST("data"->'ImageTitle'->>'pl' As varchar) AS "ImageTitle-pl",
CAST("data"->'ImageTitle'->>'ru' As varchar) AS "ImageTitle-ru"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvs_ImageGallery
    BEFORE INSERT
    ON tvs
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvs_ImageGallery_fn();

ALTER TABLE tvs
    ENABLE ALWAYS TRIGGER t_v_tvs_ImageGallery;



DROP TABLE IF EXISTS "v_tvs_PublishedOn";

CREATE TABLE  "v_tvs_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_tvs_PublishedOn_fn CASCADE;

CREATE FUNCTION v_tvs_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvs_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvs_PublishedOn
    BEFORE INSERT
    ON tvs
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvs_PublishedOn_fn();

ALTER TABLE tvs
    ENABLE ALWAYS TRIGGER t_v_tvs_PublishedOn;



DROP TABLE IF EXISTS "v_tvs_Webcam";

CREATE TABLE "v_tvs_Webcam" (
"tvs_Id" varchar,
"Source" varchar,
"WebcamId" varchar,
"Webcamurl" varchar,
"ListPosition" integer,
"GpsInfo-Gpstype" varchar,
"GpsInfo-Altitude" float,
"GpsInfo-Latitude" float,
"GpsInfo-Longitude" float,
"GpsInfo-AltitudeUnitofMeasure" varchar,
"Webcamname-de" varchar,
"Webcamname-en" varchar,
"Webcamname-it" varchar,
"Webcamname-cs" varchar,
"Webcamname-fr" varchar,
"Webcamname-nl" varchar,
"Webcamname-pl" varchar,
"Webcamname-ru" varchar,
"Previewurl" varchar
);

DROP FUNCTION IF EXISTS v_tvs_Webcam_fn CASCADE;

CREATE FUNCTION v_tvs_Webcam_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvs_Webcam"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Webcam') AS "data"
        WHERE NEW."data" -> 'Webcam' != 'null')
    SELECT "Id" AS "tvs_Id", CAST("data"->>'Source' As varchar) AS "Source",
CAST("data"->>'WebcamId' As varchar) AS "WebcamId",
CAST("data"->>'Webcamurl' As varchar) AS "Webcamurl",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'GpsInfo'->>'Gpstype' As varchar) AS "GpsInfo-Gpstype",
CAST("data"->'GpsInfo'->>'Altitude' As float) AS "GpsInfo-Altitude",
CAST("data"->'GpsInfo'->>'Latitude' As float) AS "GpsInfo-Latitude",
CAST("data"->'GpsInfo'->>'Longitude' As float) AS "GpsInfo-Longitude",
CAST("data"->'GpsInfo'->>'AltitudeUnitofMeasure' As varchar) AS "GpsInfo-AltitudeUnitofMeasure",
CAST("data"->'Webcamname'->>'de' As varchar) AS "Webcamname-de",
CAST("data"->'Webcamname'->>'en' As varchar) AS "Webcamname-en",
CAST("data"->'Webcamname'->>'it' As varchar) AS "Webcamname-it",
CAST("data"->'Webcamname'->>'cs' As varchar) AS "Webcamname-cs",
CAST("data"->'Webcamname'->>'fr' As varchar) AS "Webcamname-fr",
CAST("data"->'Webcamname'->>'nl' As varchar) AS "Webcamname-nl",
CAST("data"->'Webcamname'->>'pl' As varchar) AS "Webcamname-pl",
CAST("data"->'Webcamname'->>'ru' As varchar) AS "Webcamname-ru",
CAST("data"->>'Previewurl' As varchar) AS "Previewurl"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvs_Webcam
    BEFORE INSERT
    ON tvs
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvs_Webcam_fn();

ALTER TABLE tvs
    ENABLE ALWAYS TRIGGER t_v_tvs_Webcam;



DROP TABLE IF EXISTS "v_tvsopen";

CREATE TABLE "v_tvsopen" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Gpstype" varchar,
"Altitude" float,
"CustomId" varchar,
"Latitude" float,
"RegionId" varchar,
"Longitude" float,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"VisibleInSearch" bool,
"AltitudeUnitofMeasure" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-cs-Title" varchar,
"Detail-cs-Header" varchar,
"Detail-cs-BaseText" varchar,
"Detail-cs-Language" varchar,
"Detail-cs-MetaDesc" varchar,
"Detail-cs-IntroText" varchar,
"Detail-cs-MetaTitle" varchar,
"Detail-cs-SubHeader" varchar,
"Detail-cs-GetThereText" varchar,
"Detail-cs-AdditionalText" varchar,
"Detail-de-Title" varchar,
"Detail-de-Header" varchar,
"Detail-de-BaseText" varchar,
"Detail-de-Language" varchar,
"Detail-de-MetaDesc" varchar,
"Detail-de-IntroText" varchar,
"Detail-de-MetaTitle" varchar,
"Detail-de-SubHeader" varchar,
"Detail-en-Title" varchar,
"Detail-en-Header" varchar,
"Detail-en-BaseText" varchar,
"Detail-en-Language" varchar,
"Detail-en-MetaDesc" varchar,
"Detail-en-IntroText" varchar,
"Detail-en-MetaTitle" varchar,
"Detail-en-SubHeader" varchar,
"Detail-en-GetThereText" varchar,
"Detail-en-AdditionalText" varchar,
"Detail-fr-Title" varchar,
"Detail-fr-Header" varchar,
"Detail-fr-BaseText" varchar,
"Detail-fr-Language" varchar,
"Detail-fr-MetaDesc" varchar,
"Detail-fr-IntroText" varchar,
"Detail-fr-MetaTitle" varchar,
"Detail-fr-SubHeader" varchar,
"Detail-fr-GetThereText" varchar,
"Detail-fr-AdditionalText" varchar,
"Detail-it-Title" varchar,
"Detail-it-Header" varchar,
"Detail-it-BaseText" varchar,
"Detail-it-Language" varchar,
"Detail-it-MetaDesc" varchar,
"Detail-it-IntroText" varchar,
"Detail-it-MetaTitle" varchar,
"Detail-it-SubHeader" varchar,
"Detail-it-GetThereText" varchar,
"Detail-it-AdditionalText" varchar,
"Detail-nl-Title" varchar,
"Detail-nl-Header" varchar,
"Detail-nl-BaseText" varchar,
"Detail-nl-Language" varchar,
"Detail-nl-MetaDesc" varchar,
"Detail-nl-IntroText" varchar,
"Detail-nl-MetaTitle" varchar,
"Detail-nl-SubHeader" varchar,
"Detail-nl-GetThereText" varchar,
"Detail-nl-AdditionalText" varchar,
"Detail-pl-Title" varchar,
"Detail-pl-Header" varchar,
"Detail-pl-BaseText" varchar,
"Detail-pl-Language" varchar,
"Detail-pl-MetaDesc" varchar,
"Detail-pl-IntroText" varchar,
"Detail-pl-MetaTitle" varchar,
"Detail-pl-SubHeader" varchar,
"Detail-pl-GetThereText" varchar,
"Detail-pl-AdditionalText" varchar,
"Detail-ru-Title" varchar,
"Detail-ru-Header" varchar,
"Detail-ru-BaseText" varchar,
"Detail-ru-Language" varchar,
"Detail-ru-MetaDesc" varchar,
"Detail-ru-IntroText" varchar,
"Detail-ru-MetaTitle" varchar,
"Detail-ru-SubHeader" varchar,
"Detail-ru-GetThereText" varchar,
"Detail-ru-AdditionalText" varchar,
"Region-Id" varchar,
"Region-Self" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"ContactInfos-cs-Url" varchar,
"ContactInfos-cs-Vat" varchar,
"ContactInfos-cs-City" varchar,
"ContactInfos-cs-Email" varchar,
"ContactInfos-cs-Address" varchar,
"ContactInfos-cs-Surname" varchar,
"ContactInfos-cs-ZipCode" varchar,
"ContactInfos-cs-Language" varchar,
"ContactInfos-cs-Faxnumber" varchar,
"ContactInfos-cs-Givenname" varchar,
"ContactInfos-cs-NamePrefix" varchar,
"ContactInfos-cs-CompanyName" varchar,
"ContactInfos-cs-CountryCode" varchar,
"ContactInfos-cs-CountryName" varchar,
"ContactInfos-cs-Phonenumber" varchar,
"ContactInfos-de-Url" varchar,
"ContactInfos-de-City" varchar,
"ContactInfos-de-Email" varchar,
"ContactInfos-de-Address" varchar,
"ContactInfos-de-ZipCode" varchar,
"ContactInfos-de-Language" varchar,
"ContactInfos-de-CompanyName" varchar,
"ContactInfos-de-CountryCode" varchar,
"ContactInfos-de-CountryName" varchar,
"ContactInfos-de-Phonenumber" varchar,
"ContactInfos-en-Url" varchar,
"ContactInfos-en-Vat" varchar,
"ContactInfos-en-City" varchar,
"ContactInfos-en-Email" varchar,
"ContactInfos-en-Address" varchar,
"ContactInfos-en-Surname" varchar,
"ContactInfos-en-ZipCode" varchar,
"ContactInfos-en-Language" varchar,
"ContactInfos-en-Faxnumber" varchar,
"ContactInfos-en-Givenname" varchar,
"ContactInfos-en-NamePrefix" varchar,
"ContactInfos-en-CompanyName" varchar,
"ContactInfos-en-CountryCode" varchar,
"ContactInfos-en-CountryName" varchar,
"ContactInfos-en-Phonenumber" varchar,
"ContactInfos-fr-Url" varchar,
"ContactInfos-fr-Vat" varchar,
"ContactInfos-fr-City" varchar,
"ContactInfos-fr-Email" varchar,
"ContactInfos-fr-Address" varchar,
"ContactInfos-fr-Surname" varchar,
"ContactInfos-fr-ZipCode" varchar,
"ContactInfos-fr-Language" varchar,
"ContactInfos-fr-Faxnumber" varchar,
"ContactInfos-fr-Givenname" varchar,
"ContactInfos-fr-NamePrefix" varchar,
"ContactInfos-fr-CompanyName" varchar,
"ContactInfos-fr-CountryCode" varchar,
"ContactInfos-fr-CountryName" varchar,
"ContactInfos-fr-Phonenumber" varchar,
"ContactInfos-it-Url" varchar,
"ContactInfos-it-Vat" varchar,
"ContactInfos-it-City" varchar,
"ContactInfos-it-Email" varchar,
"ContactInfos-it-Address" varchar,
"ContactInfos-it-Surname" varchar,
"ContactInfos-it-ZipCode" varchar,
"ContactInfos-it-Language" varchar,
"ContactInfos-it-Faxnumber" varchar,
"ContactInfos-it-Givenname" varchar,
"ContactInfos-it-NamePrefix" varchar,
"ContactInfos-it-CompanyName" varchar,
"ContactInfos-it-CountryCode" varchar,
"ContactInfos-it-CountryName" varchar,
"ContactInfos-it-Phonenumber" varchar,
"ContactInfos-nl-Url" varchar,
"ContactInfos-nl-Vat" varchar,
"ContactInfos-nl-City" varchar,
"ContactInfos-nl-Email" varchar,
"ContactInfos-nl-Address" varchar,
"ContactInfos-nl-Surname" varchar,
"ContactInfos-nl-ZipCode" varchar,
"ContactInfos-nl-Language" varchar,
"ContactInfos-nl-Faxnumber" varchar,
"ContactInfos-nl-Givenname" varchar,
"ContactInfos-nl-NamePrefix" varchar,
"ContactInfos-nl-CompanyName" varchar,
"ContactInfos-nl-CountryCode" varchar,
"ContactInfos-nl-CountryName" varchar,
"ContactInfos-nl-Phonenumber" varchar,
"ContactInfos-pl-Url" varchar,
"ContactInfos-pl-Vat" varchar,
"ContactInfos-pl-City" varchar,
"ContactInfos-pl-Email" varchar,
"ContactInfos-pl-Address" varchar,
"ContactInfos-pl-Surname" varchar,
"ContactInfos-pl-ZipCode" varchar,
"ContactInfos-pl-Language" varchar,
"ContactInfos-pl-Faxnumber" varchar,
"ContactInfos-pl-Givenname" varchar,
"ContactInfos-pl-NamePrefix" varchar,
"ContactInfos-pl-CompanyName" varchar,
"ContactInfos-pl-CountryCode" varchar,
"ContactInfos-pl-CountryName" varchar,
"ContactInfos-pl-Phonenumber" varchar,
"ContactInfos-ru-Url" varchar,
"ContactInfos-ru-Vat" varchar,
"ContactInfos-ru-City" varchar,
"ContactInfos-ru-Email" varchar,
"ContactInfos-ru-Address" varchar,
"ContactInfos-ru-Surname" varchar,
"ContactInfos-ru-ZipCode" varchar,
"ContactInfos-ru-Language" varchar,
"ContactInfos-ru-Faxnumber" varchar,
"ContactInfos-ru-Givenname" varchar,
"ContactInfos-ru-NamePrefix" varchar,
"ContactInfos-ru-CompanyName" varchar,
"ContactInfos-ru-CountryCode" varchar,
"ContactInfos-ru-CountryName" varchar,
"ContactInfos-ru-Phonenumber" varchar,
"ContactInfos-cs-LogoUrl" varchar,
"ContactInfos-de-LogoUrl" varchar,
"ContactInfos-en-LogoUrl" varchar,
"ContactInfos-fr-LogoUrl" varchar,
"ContactInfos-it-LogoUrl" varchar,
"ContactInfos-nl-LogoUrl" varchar,
"ContactInfos-pl-LogoUrl" varchar,
"ContactInfos-ru-LogoUrl" varchar
);

ALTER TABLE "v_tvsopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_tvsopen_fn CASCADE;

CREATE FUNCTION v_tvsopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_tvsopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Gpstype' As varchar) AS "Gpstype",
CAST(NEW."data"->>'Altitude' As float) AS "Altitude",
CAST(NEW."data"->>'CustomId' As varchar) AS "CustomId",
CAST(NEW."data"->>'Latitude' As float) AS "Latitude",
CAST(NEW."data"->>'RegionId' As varchar) AS "RegionId",
CAST(NEW."data"->>'Longitude' As float) AS "Longitude",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'VisibleInSearch' As bool) AS "VisibleInSearch",
CAST(NEW."data"->>'AltitudeUnitofMeasure' As varchar) AS "AltitudeUnitofMeasure",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'cs'->>'Title' As varchar) AS "Detail-cs-Title",
CAST(NEW."data"->'Detail'->'cs'->>'Header' As varchar) AS "Detail-cs-Header",
CAST(NEW."data"->'Detail'->'cs'->>'BaseText' As varchar) AS "Detail-cs-BaseText",
CAST(NEW."data"->'Detail'->'cs'->>'Language' As varchar) AS "Detail-cs-Language",
CAST(NEW."data"->'Detail'->'cs'->>'MetaDesc' As varchar) AS "Detail-cs-MetaDesc",
CAST(NEW."data"->'Detail'->'cs'->>'IntroText' As varchar) AS "Detail-cs-IntroText",
CAST(NEW."data"->'Detail'->'cs'->>'MetaTitle' As varchar) AS "Detail-cs-MetaTitle",
CAST(NEW."data"->'Detail'->'cs'->>'SubHeader' As varchar) AS "Detail-cs-SubHeader",
CAST(NEW."data"->'Detail'->'cs'->>'GetThereText' As varchar) AS "Detail-cs-GetThereText",
CAST(NEW."data"->'Detail'->'cs'->>'AdditionalText' As varchar) AS "Detail-cs-AdditionalText",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'de'->>'BaseText' As varchar) AS "Detail-de-BaseText",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'de'->>'MetaDesc' As varchar) AS "Detail-de-MetaDesc",
CAST(NEW."data"->'Detail'->'de'->>'IntroText' As varchar) AS "Detail-de-IntroText",
CAST(NEW."data"->'Detail'->'de'->>'MetaTitle' As varchar) AS "Detail-de-MetaTitle",
CAST(NEW."data"->'Detail'->'de'->>'SubHeader' As varchar) AS "Detail-de-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'BaseText' As varchar) AS "Detail-en-BaseText",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'en'->>'MetaDesc' As varchar) AS "Detail-en-MetaDesc",
CAST(NEW."data"->'Detail'->'en'->>'IntroText' As varchar) AS "Detail-en-IntroText",
CAST(NEW."data"->'Detail'->'en'->>'MetaTitle' As varchar) AS "Detail-en-MetaTitle",
CAST(NEW."data"->'Detail'->'en'->>'SubHeader' As varchar) AS "Detail-en-SubHeader",
CAST(NEW."data"->'Detail'->'en'->>'GetThereText' As varchar) AS "Detail-en-GetThereText",
CAST(NEW."data"->'Detail'->'en'->>'AdditionalText' As varchar) AS "Detail-en-AdditionalText",
CAST(NEW."data"->'Detail'->'fr'->>'Title' As varchar) AS "Detail-fr-Title",
CAST(NEW."data"->'Detail'->'fr'->>'Header' As varchar) AS "Detail-fr-Header",
CAST(NEW."data"->'Detail'->'fr'->>'BaseText' As varchar) AS "Detail-fr-BaseText",
CAST(NEW."data"->'Detail'->'fr'->>'Language' As varchar) AS "Detail-fr-Language",
CAST(NEW."data"->'Detail'->'fr'->>'MetaDesc' As varchar) AS "Detail-fr-MetaDesc",
CAST(NEW."data"->'Detail'->'fr'->>'IntroText' As varchar) AS "Detail-fr-IntroText",
CAST(NEW."data"->'Detail'->'fr'->>'MetaTitle' As varchar) AS "Detail-fr-MetaTitle",
CAST(NEW."data"->'Detail'->'fr'->>'SubHeader' As varchar) AS "Detail-fr-SubHeader",
CAST(NEW."data"->'Detail'->'fr'->>'GetThereText' As varchar) AS "Detail-fr-GetThereText",
CAST(NEW."data"->'Detail'->'fr'->>'AdditionalText' As varchar) AS "Detail-fr-AdditionalText",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'BaseText' As varchar) AS "Detail-it-BaseText",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Detail'->'it'->>'MetaDesc' As varchar) AS "Detail-it-MetaDesc",
CAST(NEW."data"->'Detail'->'it'->>'IntroText' As varchar) AS "Detail-it-IntroText",
CAST(NEW."data"->'Detail'->'it'->>'MetaTitle' As varchar) AS "Detail-it-MetaTitle",
CAST(NEW."data"->'Detail'->'it'->>'SubHeader' As varchar) AS "Detail-it-SubHeader",
CAST(NEW."data"->'Detail'->'it'->>'GetThereText' As varchar) AS "Detail-it-GetThereText",
CAST(NEW."data"->'Detail'->'it'->>'AdditionalText' As varchar) AS "Detail-it-AdditionalText",
CAST(NEW."data"->'Detail'->'nl'->>'Title' As varchar) AS "Detail-nl-Title",
CAST(NEW."data"->'Detail'->'nl'->>'Header' As varchar) AS "Detail-nl-Header",
CAST(NEW."data"->'Detail'->'nl'->>'BaseText' As varchar) AS "Detail-nl-BaseText",
CAST(NEW."data"->'Detail'->'nl'->>'Language' As varchar) AS "Detail-nl-Language",
CAST(NEW."data"->'Detail'->'nl'->>'MetaDesc' As varchar) AS "Detail-nl-MetaDesc",
CAST(NEW."data"->'Detail'->'nl'->>'IntroText' As varchar) AS "Detail-nl-IntroText",
CAST(NEW."data"->'Detail'->'nl'->>'MetaTitle' As varchar) AS "Detail-nl-MetaTitle",
CAST(NEW."data"->'Detail'->'nl'->>'SubHeader' As varchar) AS "Detail-nl-SubHeader",
CAST(NEW."data"->'Detail'->'nl'->>'GetThereText' As varchar) AS "Detail-nl-GetThereText",
CAST(NEW."data"->'Detail'->'nl'->>'AdditionalText' As varchar) AS "Detail-nl-AdditionalText",
CAST(NEW."data"->'Detail'->'pl'->>'Title' As varchar) AS "Detail-pl-Title",
CAST(NEW."data"->'Detail'->'pl'->>'Header' As varchar) AS "Detail-pl-Header",
CAST(NEW."data"->'Detail'->'pl'->>'BaseText' As varchar) AS "Detail-pl-BaseText",
CAST(NEW."data"->'Detail'->'pl'->>'Language' As varchar) AS "Detail-pl-Language",
CAST(NEW."data"->'Detail'->'pl'->>'MetaDesc' As varchar) AS "Detail-pl-MetaDesc",
CAST(NEW."data"->'Detail'->'pl'->>'IntroText' As varchar) AS "Detail-pl-IntroText",
CAST(NEW."data"->'Detail'->'pl'->>'MetaTitle' As varchar) AS "Detail-pl-MetaTitle",
CAST(NEW."data"->'Detail'->'pl'->>'SubHeader' As varchar) AS "Detail-pl-SubHeader",
CAST(NEW."data"->'Detail'->'pl'->>'GetThereText' As varchar) AS "Detail-pl-GetThereText",
CAST(NEW."data"->'Detail'->'pl'->>'AdditionalText' As varchar) AS "Detail-pl-AdditionalText",
CAST(NEW."data"->'Detail'->'ru'->>'Title' As varchar) AS "Detail-ru-Title",
CAST(NEW."data"->'Detail'->'ru'->>'Header' As varchar) AS "Detail-ru-Header",
CAST(NEW."data"->'Detail'->'ru'->>'BaseText' As varchar) AS "Detail-ru-BaseText",
CAST(NEW."data"->'Detail'->'ru'->>'Language' As varchar) AS "Detail-ru-Language",
CAST(NEW."data"->'Detail'->'ru'->>'MetaDesc' As varchar) AS "Detail-ru-MetaDesc",
CAST(NEW."data"->'Detail'->'ru'->>'IntroText' As varchar) AS "Detail-ru-IntroText",
CAST(NEW."data"->'Detail'->'ru'->>'MetaTitle' As varchar) AS "Detail-ru-MetaTitle",
CAST(NEW."data"->'Detail'->'ru'->>'SubHeader' As varchar) AS "Detail-ru-SubHeader",
CAST(NEW."data"->'Detail'->'ru'->>'GetThereText' As varchar) AS "Detail-ru-GetThereText",
CAST(NEW."data"->'Detail'->'ru'->>'AdditionalText' As varchar) AS "Detail-ru-AdditionalText",
CAST(NEW."data"->'Region'->>'Id' As varchar) AS "Region-Id",
CAST(NEW."data"->'Region'->>'Self' As varchar) AS "Region-Self",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Url' As varchar) AS "ContactInfos-cs-Url",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Vat' As varchar) AS "ContactInfos-cs-Vat",
CAST(NEW."data"->'ContactInfos'->'cs'->>'City' As varchar) AS "ContactInfos-cs-City",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Email' As varchar) AS "ContactInfos-cs-Email",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Address' As varchar) AS "ContactInfos-cs-Address",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Surname' As varchar) AS "ContactInfos-cs-Surname",
CAST(NEW."data"->'ContactInfos'->'cs'->>'ZipCode' As varchar) AS "ContactInfos-cs-ZipCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Language' As varchar) AS "ContactInfos-cs-Language",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Faxnumber' As varchar) AS "ContactInfos-cs-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Givenname' As varchar) AS "ContactInfos-cs-Givenname",
CAST(NEW."data"->'ContactInfos'->'cs'->>'NamePrefix' As varchar) AS "ContactInfos-cs-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CompanyName' As varchar) AS "ContactInfos-cs-CompanyName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryCode' As varchar) AS "ContactInfos-cs-CountryCode",
CAST(NEW."data"->'ContactInfos'->'cs'->>'CountryName' As varchar) AS "ContactInfos-cs-CountryName",
CAST(NEW."data"->'ContactInfos'->'cs'->>'Phonenumber' As varchar) AS "ContactInfos-cs-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'de'->>'Url' As varchar) AS "ContactInfos-de-Url",
CAST(NEW."data"->'ContactInfos'->'de'->>'City' As varchar) AS "ContactInfos-de-City",
CAST(NEW."data"->'ContactInfos'->'de'->>'Email' As varchar) AS "ContactInfos-de-Email",
CAST(NEW."data"->'ContactInfos'->'de'->>'Address' As varchar) AS "ContactInfos-de-Address",
CAST(NEW."data"->'ContactInfos'->'de'->>'ZipCode' As varchar) AS "ContactInfos-de-ZipCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'Language' As varchar) AS "ContactInfos-de-Language",
CAST(NEW."data"->'ContactInfos'->'de'->>'CompanyName' As varchar) AS "ContactInfos-de-CompanyName",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryCode' As varchar) AS "ContactInfos-de-CountryCode",
CAST(NEW."data"->'ContactInfos'->'de'->>'CountryName' As varchar) AS "ContactInfos-de-CountryName",
CAST(NEW."data"->'ContactInfos'->'de'->>'Phonenumber' As varchar) AS "ContactInfos-de-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Url' As varchar) AS "ContactInfos-en-Url",
CAST(NEW."data"->'ContactInfos'->'en'->>'Vat' As varchar) AS "ContactInfos-en-Vat",
CAST(NEW."data"->'ContactInfos'->'en'->>'City' As varchar) AS "ContactInfos-en-City",
CAST(NEW."data"->'ContactInfos'->'en'->>'Email' As varchar) AS "ContactInfos-en-Email",
CAST(NEW."data"->'ContactInfos'->'en'->>'Address' As varchar) AS "ContactInfos-en-Address",
CAST(NEW."data"->'ContactInfos'->'en'->>'Surname' As varchar) AS "ContactInfos-en-Surname",
CAST(NEW."data"->'ContactInfos'->'en'->>'ZipCode' As varchar) AS "ContactInfos-en-ZipCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'Language' As varchar) AS "ContactInfos-en-Language",
CAST(NEW."data"->'ContactInfos'->'en'->>'Faxnumber' As varchar) AS "ContactInfos-en-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'en'->>'Givenname' As varchar) AS "ContactInfos-en-Givenname",
CAST(NEW."data"->'ContactInfos'->'en'->>'NamePrefix' As varchar) AS "ContactInfos-en-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'en'->>'CompanyName' As varchar) AS "ContactInfos-en-CompanyName",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryCode' As varchar) AS "ContactInfos-en-CountryCode",
CAST(NEW."data"->'ContactInfos'->'en'->>'CountryName' As varchar) AS "ContactInfos-en-CountryName",
CAST(NEW."data"->'ContactInfos'->'en'->>'Phonenumber' As varchar) AS "ContactInfos-en-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Url' As varchar) AS "ContactInfos-fr-Url",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Vat' As varchar) AS "ContactInfos-fr-Vat",
CAST(NEW."data"->'ContactInfos'->'fr'->>'City' As varchar) AS "ContactInfos-fr-City",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Email' As varchar) AS "ContactInfos-fr-Email",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Address' As varchar) AS "ContactInfos-fr-Address",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Surname' As varchar) AS "ContactInfos-fr-Surname",
CAST(NEW."data"->'ContactInfos'->'fr'->>'ZipCode' As varchar) AS "ContactInfos-fr-ZipCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Language' As varchar) AS "ContactInfos-fr-Language",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Faxnumber' As varchar) AS "ContactInfos-fr-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Givenname' As varchar) AS "ContactInfos-fr-Givenname",
CAST(NEW."data"->'ContactInfos'->'fr'->>'NamePrefix' As varchar) AS "ContactInfos-fr-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CompanyName' As varchar) AS "ContactInfos-fr-CompanyName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryCode' As varchar) AS "ContactInfos-fr-CountryCode",
CAST(NEW."data"->'ContactInfos'->'fr'->>'CountryName' As varchar) AS "ContactInfos-fr-CountryName",
CAST(NEW."data"->'ContactInfos'->'fr'->>'Phonenumber' As varchar) AS "ContactInfos-fr-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Url' As varchar) AS "ContactInfos-it-Url",
CAST(NEW."data"->'ContactInfos'->'it'->>'Vat' As varchar) AS "ContactInfos-it-Vat",
CAST(NEW."data"->'ContactInfos'->'it'->>'City' As varchar) AS "ContactInfos-it-City",
CAST(NEW."data"->'ContactInfos'->'it'->>'Email' As varchar) AS "ContactInfos-it-Email",
CAST(NEW."data"->'ContactInfos'->'it'->>'Address' As varchar) AS "ContactInfos-it-Address",
CAST(NEW."data"->'ContactInfos'->'it'->>'Surname' As varchar) AS "ContactInfos-it-Surname",
CAST(NEW."data"->'ContactInfos'->'it'->>'ZipCode' As varchar) AS "ContactInfos-it-ZipCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'Language' As varchar) AS "ContactInfos-it-Language",
CAST(NEW."data"->'ContactInfos'->'it'->>'Faxnumber' As varchar) AS "ContactInfos-it-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'it'->>'Givenname' As varchar) AS "ContactInfos-it-Givenname",
CAST(NEW."data"->'ContactInfos'->'it'->>'NamePrefix' As varchar) AS "ContactInfos-it-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'it'->>'CompanyName' As varchar) AS "ContactInfos-it-CompanyName",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryCode' As varchar) AS "ContactInfos-it-CountryCode",
CAST(NEW."data"->'ContactInfos'->'it'->>'CountryName' As varchar) AS "ContactInfos-it-CountryName",
CAST(NEW."data"->'ContactInfos'->'it'->>'Phonenumber' As varchar) AS "ContactInfos-it-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Url' As varchar) AS "ContactInfos-nl-Url",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Vat' As varchar) AS "ContactInfos-nl-Vat",
CAST(NEW."data"->'ContactInfos'->'nl'->>'City' As varchar) AS "ContactInfos-nl-City",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Email' As varchar) AS "ContactInfos-nl-Email",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Address' As varchar) AS "ContactInfos-nl-Address",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Surname' As varchar) AS "ContactInfos-nl-Surname",
CAST(NEW."data"->'ContactInfos'->'nl'->>'ZipCode' As varchar) AS "ContactInfos-nl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Language' As varchar) AS "ContactInfos-nl-Language",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Faxnumber' As varchar) AS "ContactInfos-nl-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Givenname' As varchar) AS "ContactInfos-nl-Givenname",
CAST(NEW."data"->'ContactInfos'->'nl'->>'NamePrefix' As varchar) AS "ContactInfos-nl-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CompanyName' As varchar) AS "ContactInfos-nl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryCode' As varchar) AS "ContactInfos-nl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'nl'->>'CountryName' As varchar) AS "ContactInfos-nl-CountryName",
CAST(NEW."data"->'ContactInfos'->'nl'->>'Phonenumber' As varchar) AS "ContactInfos-nl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Url' As varchar) AS "ContactInfos-pl-Url",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Vat' As varchar) AS "ContactInfos-pl-Vat",
CAST(NEW."data"->'ContactInfos'->'pl'->>'City' As varchar) AS "ContactInfos-pl-City",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Email' As varchar) AS "ContactInfos-pl-Email",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Address' As varchar) AS "ContactInfos-pl-Address",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Surname' As varchar) AS "ContactInfos-pl-Surname",
CAST(NEW."data"->'ContactInfos'->'pl'->>'ZipCode' As varchar) AS "ContactInfos-pl-ZipCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Language' As varchar) AS "ContactInfos-pl-Language",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Faxnumber' As varchar) AS "ContactInfos-pl-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Givenname' As varchar) AS "ContactInfos-pl-Givenname",
CAST(NEW."data"->'ContactInfos'->'pl'->>'NamePrefix' As varchar) AS "ContactInfos-pl-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CompanyName' As varchar) AS "ContactInfos-pl-CompanyName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryCode' As varchar) AS "ContactInfos-pl-CountryCode",
CAST(NEW."data"->'ContactInfos'->'pl'->>'CountryName' As varchar) AS "ContactInfos-pl-CountryName",
CAST(NEW."data"->'ContactInfos'->'pl'->>'Phonenumber' As varchar) AS "ContactInfos-pl-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Url' As varchar) AS "ContactInfos-ru-Url",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Vat' As varchar) AS "ContactInfos-ru-Vat",
CAST(NEW."data"->'ContactInfos'->'ru'->>'City' As varchar) AS "ContactInfos-ru-City",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Email' As varchar) AS "ContactInfos-ru-Email",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Address' As varchar) AS "ContactInfos-ru-Address",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Surname' As varchar) AS "ContactInfos-ru-Surname",
CAST(NEW."data"->'ContactInfos'->'ru'->>'ZipCode' As varchar) AS "ContactInfos-ru-ZipCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Language' As varchar) AS "ContactInfos-ru-Language",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Faxnumber' As varchar) AS "ContactInfos-ru-Faxnumber",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Givenname' As varchar) AS "ContactInfos-ru-Givenname",
CAST(NEW."data"->'ContactInfos'->'ru'->>'NamePrefix' As varchar) AS "ContactInfos-ru-NamePrefix",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CompanyName' As varchar) AS "ContactInfos-ru-CompanyName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryCode' As varchar) AS "ContactInfos-ru-CountryCode",
CAST(NEW."data"->'ContactInfos'->'ru'->>'CountryName' As varchar) AS "ContactInfos-ru-CountryName",
CAST(NEW."data"->'ContactInfos'->'ru'->>'Phonenumber' As varchar) AS "ContactInfos-ru-Phonenumber",
CAST(NEW."data"->'ContactInfos'->'cs'->>'LogoUrl' As varchar) AS "ContactInfos-cs-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'de'->>'LogoUrl' As varchar) AS "ContactInfos-de-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'en'->>'LogoUrl' As varchar) AS "ContactInfos-en-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'fr'->>'LogoUrl' As varchar) AS "ContactInfos-fr-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'it'->>'LogoUrl' As varchar) AS "ContactInfos-it-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'nl'->>'LogoUrl' As varchar) AS "ContactInfos-nl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'pl'->>'LogoUrl' As varchar) AS "ContactInfos-pl-LogoUrl",
CAST(NEW."data"->'ContactInfos'->'ru'->>'LogoUrl' As varchar) AS "ContactInfos-ru-LogoUrl";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvsopen
    BEFORE INSERT
    ON tvsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvsopen_fn();

ALTER TABLE tvsopen
    ENABLE ALWAYS TRIGGER t_v_tvsopen;



DROP TABLE IF EXISTS "v_tvsopen_SmgTags";

CREATE TABLE  "v_tvsopen_SmgTags" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_tvsopen_SmgTags_fn CASCADE;

CREATE FUNCTION v_tvsopen_SmgTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvsopen_SmgTags"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SmgTags') AS "data"
        WHERE NEW."data" -> 'SmgTags' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvsopen_SmgTags
    BEFORE INSERT
    ON tvsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvsopen_SmgTags_fn();

ALTER TABLE tvsopen
    ENABLE ALWAYS TRIGGER t_v_tvsopen_SmgTags;



DROP TABLE IF EXISTS "v_tvsopen_SkiareaIds";

CREATE TABLE  "v_tvsopen_SkiareaIds" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_tvsopen_SkiareaIds_fn CASCADE;

CREATE FUNCTION v_tvsopen_SkiareaIds_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvsopen_SkiareaIds"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'SkiareaIds') AS "data"
        WHERE NEW."data" -> 'SkiareaIds' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvsopen_SkiareaIds
    BEFORE INSERT
    ON tvsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvsopen_SkiareaIds_fn();

ALTER TABLE tvsopen
    ENABLE ALWAYS TRIGGER t_v_tvsopen_SkiareaIds;



DROP TABLE IF EXISTS "v_tvsopen_HasLanguage";

CREATE TABLE  "v_tvsopen_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_tvsopen_HasLanguage_fn CASCADE;

CREATE FUNCTION v_tvsopen_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvsopen_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvsopen_HasLanguage
    BEFORE INSERT
    ON tvsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvsopen_HasLanguage_fn();

ALTER TABLE tvsopen
    ENABLE ALWAYS TRIGGER t_v_tvsopen_HasLanguage;



DROP TABLE IF EXISTS "v_tvsopen_ODHTags";

CREATE TABLE "v_tvsopen_ODHTags" (
"tvsopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_tvsopen_ODHTags_fn CASCADE;

CREATE FUNCTION v_tvsopen_ODHTags_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvsopen_ODHTags"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ODHTags') AS "data"
        WHERE NEW."data" -> 'ODHTags' != 'null')
    SELECT "Id" AS "tvsopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvsopen_ODHTags
    BEFORE INSERT
    ON tvsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvsopen_ODHTags_fn();

ALTER TABLE tvsopen
    ENABLE ALWAYS TRIGGER t_v_tvsopen_ODHTags;



DROP TABLE IF EXISTS "v_tvsopen_SkiAreas";

CREATE TABLE "v_tvsopen_SkiAreas" (
"tvsopen_Id" varchar,
"Id" varchar,
"Self" varchar
);

DROP FUNCTION IF EXISTS v_tvsopen_SkiAreas_fn CASCADE;

CREATE FUNCTION v_tvsopen_SkiAreas_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvsopen_SkiAreas"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'SkiAreas') AS "data"
        WHERE NEW."data" -> 'SkiAreas' != 'null')
    SELECT "Id" AS "tvsopen_Id", CAST("data"->>'Id' As varchar) AS "Id",
CAST("data"->>'Self' As varchar) AS "Self"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvsopen_SkiAreas
    BEFORE INSERT
    ON tvsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvsopen_SkiAreas_fn();

ALTER TABLE tvsopen
    ENABLE ALWAYS TRIGGER t_v_tvsopen_SkiAreas;



DROP TABLE IF EXISTS "v_tvsopen_PublishedOn";

CREATE TABLE  "v_tvsopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_tvsopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_tvsopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvsopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvsopen_PublishedOn
    BEFORE INSERT
    ON tvsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvsopen_PublishedOn_fn();

ALTER TABLE tvsopen
    ENABLE ALWAYS TRIGGER t_v_tvsopen_PublishedOn;



DROP TABLE IF EXISTS "v_tvsopen_Webcam";

CREATE TABLE "v_tvsopen_Webcam" (
"tvsopen_Id" varchar,
"Source" varchar,
"WebcamId" varchar,
"Streamurl" varchar,
"Webcamurl" varchar,
"ListPosition" integer,
"GpsInfo-Gpstype" varchar,
"GpsInfo-Latitude" float,
"GpsInfo-Longitude" float,
"Webcamname-de" varchar,
"GpsInfo-Altitude" float,
"GpsInfo-AltitudeUnitofMeasure" varchar,
"Webcamname-en" varchar,
"Webcamname-it" varchar,
"Webcamname-cs" varchar,
"Webcamname-fr" varchar,
"Webcamname-nl" varchar,
"Webcamname-pl" varchar,
"Webcamname-ru" varchar
);

DROP FUNCTION IF EXISTS v_tvsopen_Webcam_fn CASCADE;

CREATE FUNCTION v_tvsopen_Webcam_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_tvsopen_Webcam"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'Webcam') AS "data"
        WHERE NEW."data" -> 'Webcam' != 'null')
    SELECT "Id" AS "tvsopen_Id", CAST("data"->>'Source' As varchar) AS "Source",
CAST("data"->>'WebcamId' As varchar) AS "WebcamId",
CAST("data"->>'Streamurl' As varchar) AS "Streamurl",
CAST("data"->>'Webcamurl' As varchar) AS "Webcamurl",
CAST("data"->>'ListPosition' As integer) AS "ListPosition",
CAST("data"->'GpsInfo'->>'Gpstype' As varchar) AS "GpsInfo-Gpstype",
CAST("data"->'GpsInfo'->>'Latitude' As float) AS "GpsInfo-Latitude",
CAST("data"->'GpsInfo'->>'Longitude' As float) AS "GpsInfo-Longitude",
CAST("data"->'Webcamname'->>'de' As varchar) AS "Webcamname-de",
CAST("data"->'GpsInfo'->>'Altitude' As float) AS "GpsInfo-Altitude",
CAST("data"->'GpsInfo'->>'AltitudeUnitofMeasure' As varchar) AS "GpsInfo-AltitudeUnitofMeasure",
CAST("data"->'Webcamname'->>'en' As varchar) AS "Webcamname-en",
CAST("data"->'Webcamname'->>'it' As varchar) AS "Webcamname-it",
CAST("data"->'Webcamname'->>'cs' As varchar) AS "Webcamname-cs",
CAST("data"->'Webcamname'->>'fr' As varchar) AS "Webcamname-fr",
CAST("data"->'Webcamname'->>'nl' As varchar) AS "Webcamname-nl",
CAST("data"->'Webcamname'->>'pl' As varchar) AS "Webcamname-pl",
CAST("data"->'Webcamname'->>'ru' As varchar) AS "Webcamname-ru"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_tvsopen_Webcam
    BEFORE INSERT
    ON tvsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_tvsopen_Webcam_fn();

ALTER TABLE tvsopen
    ENABLE ALWAYS TRIGGER t_v_tvsopen_Webcam;



DROP TABLE IF EXISTS "v_venues";

CREATE TABLE "v_venues" (
"id" varchar,
"Self" varchar,
"type" varchar,
"meta-lastUpdate" varchar,
"meta-dataProvider" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"links-self" varchar,
"odhdata-Active" bool,
"odhdata-Source" varchar,
"odhdata-ODHActive" bool,
"odhdata-RoomCount" integer,
"odhdata-Shortname" varchar,
"odhdata-SyncSourceInterface" varchar,
"odhdata-GpsPoints-position-Gpstype" varchar,
"odhdata-GpsPoints-position-Latitude" float,
"odhdata-GpsPoints-position-Longitude" float,
"odhdata-LicenseInfo-Author" varchar,
"odhdata-LicenseInfo-License" varchar,
"odhdata-LicenseInfo-ClosedData" bool,
"odhdata-LicenseInfo-LicenseHolder" varchar,
"odhdata-LocationInfo-TvInfo-Id" varchar,
"odhdata-LocationInfo-TvInfo-Self" varchar,
"odhdata-LocationInfo-TvInfo-Name-cs" varchar,
"odhdata-LocationInfo-TvInfo-Name-de" varchar,
"odhdata-LocationInfo-TvInfo-Name-en" varchar,
"odhdata-LocationInfo-TvInfo-Name-fr" varchar,
"odhdata-LocationInfo-TvInfo-Name-it" varchar,
"odhdata-LocationInfo-TvInfo-Name-nl" varchar,
"odhdata-LocationInfo-TvInfo-Name-pl" varchar,
"odhdata-LocationInfo-TvInfo-Name-ru" varchar,
"odhdata-LocationInfo-RegionInfo-Id" varchar,
"odhdata-LocationInfo-RegionInfo-Self" varchar,
"odhdata-LocationInfo-RegionInfo-Name-cs" varchar,
"odhdata-LocationInfo-RegionInfo-Name-de" varchar,
"odhdata-LocationInfo-RegionInfo-Name-en" varchar,
"odhdata-LocationInfo-RegionInfo-Name-fr" varchar,
"odhdata-LocationInfo-RegionInfo-Name-it" varchar,
"odhdata-LocationInfo-RegionInfo-Name-nl" varchar,
"odhdata-LocationInfo-RegionInfo-Name-pl" varchar,
"odhdata-LocationInfo-RegionInfo-Name-ru" varchar,
"odhdata-LocationInfo-DistrictInfo-Id" varchar,
"odhdata-LocationInfo-DistrictInfo-Self" varchar,
"odhdata-LocationInfo-DistrictInfo-Name-cs" varchar,
"odhdata-LocationInfo-DistrictInfo-Name-de" varchar,
"odhdata-LocationInfo-DistrictInfo-Name-en" varchar,
"odhdata-LocationInfo-DistrictInfo-Name-fr" varchar,
"odhdata-LocationInfo-DistrictInfo-Name-it" varchar,
"odhdata-LocationInfo-DistrictInfo-Name-nl" varchar,
"odhdata-LocationInfo-DistrictInfo-Name-pl" varchar,
"odhdata-LocationInfo-DistrictInfo-Name-ru" varchar,
"odhdata-LocationInfo-MunicipalityInfo-Id" varchar,
"odhdata-LocationInfo-MunicipalityInfo-Self" varchar,
"odhdata-LocationInfo-MunicipalityInfo-Name-cs" varchar,
"odhdata-LocationInfo-MunicipalityInfo-Name-de" varchar,
"odhdata-LocationInfo-MunicipalityInfo-Name-en" varchar,
"odhdata-LocationInfo-MunicipalityInfo-Name-fr" varchar,
"odhdata-LocationInfo-MunicipalityInfo-Name-it" varchar,
"odhdata-LocationInfo-MunicipalityInfo-Name-nl" varchar,
"odhdata-LocationInfo-MunicipalityInfo-Name-pl" varchar,
"odhdata-LocationInfo-MunicipalityInfo-Name-ru" varchar,
"attributes-url-deu" varchar,
"attributes-url-eng" varchar,
"attributes-url-ita" varchar,
"attributes-name-deu" varchar,
"attributes-name-eng" varchar,
"attributes-name-ita" varchar,
"attributes-shortName-deu" varchar,
"attributes-shortName-ita" varchar,
"attributes-shortName-eng" varchar,
"attributes-beds" integer
);

ALTER TABLE "v_venues" ADD PRIMARY KEY ("id");

DROP FUNCTION IF EXISTS v_venues_fn CASCADE;

CREATE FUNCTION v_venues_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_venues
SELECT
CAST(NEW."data"->>'id' As varchar) AS "id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'type' As varchar) AS "type",
CAST(NEW."data"->'meta'->>'lastUpdate' As varchar) AS "meta-lastUpdate",
CAST(NEW."data"->'meta'->>'dataProvider' As varchar) AS "meta-dataProvider",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'links'->>'self' As varchar) AS "links-self",
CAST(NEW."data"->'odhdata'->>'Active' As bool) AS "odhdata-Active",
CAST(NEW."data"->'odhdata'->>'Source' As varchar) AS "odhdata-Source",
CAST(NEW."data"->'odhdata'->>'ODHActive' As bool) AS "odhdata-ODHActive",
CAST(NEW."data"->'odhdata'->>'RoomCount' As integer) AS "odhdata-RoomCount",
CAST(NEW."data"->'odhdata'->>'Shortname' As varchar) AS "odhdata-Shortname",
CAST(NEW."data"->'odhdata'->>'SyncSourceInterface' As varchar) AS "odhdata-SyncSourceInterface",
CAST(NEW."data"->'odhdata'->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "odhdata-GpsPoints-position-Gpstype",
CAST(NEW."data"->'odhdata'->'GpsPoints'->'position'->>'Latitude' As float) AS "odhdata-GpsPoints-position-Latitude",
CAST(NEW."data"->'odhdata'->'GpsPoints'->'position'->>'Longitude' As float) AS "odhdata-GpsPoints-position-Longitude",
CAST(NEW."data"->'odhdata'->'LicenseInfo'->>'Author' As varchar) AS "odhdata-LicenseInfo-Author",
CAST(NEW."data"->'odhdata'->'LicenseInfo'->>'License' As varchar) AS "odhdata-LicenseInfo-License",
CAST(NEW."data"->'odhdata'->'LicenseInfo'->>'ClosedData' As bool) AS "odhdata-LicenseInfo-ClosedData",
CAST(NEW."data"->'odhdata'->'LicenseInfo'->>'LicenseHolder' As varchar) AS "odhdata-LicenseInfo-LicenseHolder",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'TvInfo'->>'Id' As varchar) AS "odhdata-LocationInfo-TvInfo-Id",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'TvInfo'->>'Self' As varchar) AS "odhdata-LocationInfo-TvInfo-Self",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'TvInfo'->'Name'->>'cs' As varchar) AS "odhdata-LocationInfo-TvInfo-Name-cs",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'TvInfo'->'Name'->>'de' As varchar) AS "odhdata-LocationInfo-TvInfo-Name-de",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'TvInfo'->'Name'->>'en' As varchar) AS "odhdata-LocationInfo-TvInfo-Name-en",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'TvInfo'->'Name'->>'fr' As varchar) AS "odhdata-LocationInfo-TvInfo-Name-fr",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'TvInfo'->'Name'->>'it' As varchar) AS "odhdata-LocationInfo-TvInfo-Name-it",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'TvInfo'->'Name'->>'nl' As varchar) AS "odhdata-LocationInfo-TvInfo-Name-nl",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'TvInfo'->'Name'->>'pl' As varchar) AS "odhdata-LocationInfo-TvInfo-Name-pl",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'TvInfo'->'Name'->>'ru' As varchar) AS "odhdata-LocationInfo-TvInfo-Name-ru",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'RegionInfo'->>'Id' As varchar) AS "odhdata-LocationInfo-RegionInfo-Id",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'RegionInfo'->>'Self' As varchar) AS "odhdata-LocationInfo-RegionInfo-Self",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'RegionInfo'->'Name'->>'cs' As varchar) AS "odhdata-LocationInfo-RegionInfo-Name-cs",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'RegionInfo'->'Name'->>'de' As varchar) AS "odhdata-LocationInfo-RegionInfo-Name-de",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'RegionInfo'->'Name'->>'en' As varchar) AS "odhdata-LocationInfo-RegionInfo-Name-en",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'RegionInfo'->'Name'->>'fr' As varchar) AS "odhdata-LocationInfo-RegionInfo-Name-fr",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'RegionInfo'->'Name'->>'it' As varchar) AS "odhdata-LocationInfo-RegionInfo-Name-it",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'RegionInfo'->'Name'->>'nl' As varchar) AS "odhdata-LocationInfo-RegionInfo-Name-nl",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'RegionInfo'->'Name'->>'pl' As varchar) AS "odhdata-LocationInfo-RegionInfo-Name-pl",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'RegionInfo'->'Name'->>'ru' As varchar) AS "odhdata-LocationInfo-RegionInfo-Name-ru",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'DistrictInfo'->>'Id' As varchar) AS "odhdata-LocationInfo-DistrictInfo-Id",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'DistrictInfo'->>'Self' As varchar) AS "odhdata-LocationInfo-DistrictInfo-Self",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'DistrictInfo'->'Name'->>'cs' As varchar) AS "odhdata-LocationInfo-DistrictInfo-Name-cs",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'DistrictInfo'->'Name'->>'de' As varchar) AS "odhdata-LocationInfo-DistrictInfo-Name-de",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'DistrictInfo'->'Name'->>'en' As varchar) AS "odhdata-LocationInfo-DistrictInfo-Name-en",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'DistrictInfo'->'Name'->>'fr' As varchar) AS "odhdata-LocationInfo-DistrictInfo-Name-fr",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'DistrictInfo'->'Name'->>'it' As varchar) AS "odhdata-LocationInfo-DistrictInfo-Name-it",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'DistrictInfo'->'Name'->>'nl' As varchar) AS "odhdata-LocationInfo-DistrictInfo-Name-nl",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'DistrictInfo'->'Name'->>'pl' As varchar) AS "odhdata-LocationInfo-DistrictInfo-Name-pl",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'DistrictInfo'->'Name'->>'ru' As varchar) AS "odhdata-LocationInfo-DistrictInfo-Name-ru",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'MunicipalityInfo'->>'Id' As varchar) AS "odhdata-LocationInfo-MunicipalityInfo-Id",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'MunicipalityInfo'->>'Self' As varchar) AS "odhdata-LocationInfo-MunicipalityInfo-Self",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'MunicipalityInfo'->'Name'->>'cs' As varchar) AS "odhdata-LocationInfo-MunicipalityInfo-Name-cs",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'MunicipalityInfo'->'Name'->>'de' As varchar) AS "odhdata-LocationInfo-MunicipalityInfo-Name-de",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'MunicipalityInfo'->'Name'->>'en' As varchar) AS "odhdata-LocationInfo-MunicipalityInfo-Name-en",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'MunicipalityInfo'->'Name'->>'fr' As varchar) AS "odhdata-LocationInfo-MunicipalityInfo-Name-fr",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'MunicipalityInfo'->'Name'->>'it' As varchar) AS "odhdata-LocationInfo-MunicipalityInfo-Name-it",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'MunicipalityInfo'->'Name'->>'nl' As varchar) AS "odhdata-LocationInfo-MunicipalityInfo-Name-nl",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'MunicipalityInfo'->'Name'->>'pl' As varchar) AS "odhdata-LocationInfo-MunicipalityInfo-Name-pl",
CAST(NEW."data"->'odhdata'->'LocationInfo'->'MunicipalityInfo'->'Name'->>'ru' As varchar) AS "odhdata-LocationInfo-MunicipalityInfo-Name-ru",
CAST(NEW."data"->'attributes'->'url'->>'deu' As varchar) AS "attributes-url-deu",
CAST(NEW."data"->'attributes'->'url'->>'eng' As varchar) AS "attributes-url-eng",
CAST(NEW."data"->'attributes'->'url'->>'ita' As varchar) AS "attributes-url-ita",
CAST(NEW."data"->'attributes'->'name'->>'deu' As varchar) AS "attributes-name-deu",
CAST(NEW."data"->'attributes'->'name'->>'eng' As varchar) AS "attributes-name-eng",
CAST(NEW."data"->'attributes'->'name'->>'ita' As varchar) AS "attributes-name-ita",
CAST(NEW."data"->'attributes'->'shortName'->>'deu' As varchar) AS "attributes-shortName-deu",
CAST(NEW."data"->'attributes'->'shortName'->>'ita' As varchar) AS "attributes-shortName-ita",
CAST(NEW."data"->'attributes'->'shortName'->>'eng' As varchar) AS "attributes-shortName-eng",
CAST(NEW."data"->'attributes'->>'beds' As integer) AS "attributes-beds";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_venues
    BEFORE INSERT
    ON venues
    FOR EACH ROW
    EXECUTE PROCEDURE v_venues_fn();

ALTER TABLE venues
    ENABLE ALWAYS TRIGGER t_v_venues;



DROP TABLE IF EXISTS "v_venuesopen";

CREATE TABLE "v_venuesopen" (
"id" varchar,
"Self" varchar,
"meta-lastUpdate" varchar,
"meta-dataProvider" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"links-self" varchar,
"odhdata-Active" bool,
"odhdata-Source" varchar,
"odhdata-ODHActive" bool,
"odhdata-RoomCount" integer,
"odhdata-Shortname" varchar,
"odhdata-SyncSourceInterface" varchar,
"odhdata-GpsPoints-position-Gpstype" varchar,
"odhdata-GpsPoints-position-Latitude" float,
"odhdata-GpsPoints-position-Longitude" float,
"odhdata-LicenseInfo-Author" varchar,
"odhdata-LicenseInfo-License" varchar,
"odhdata-LicenseInfo-ClosedData" bool,
"odhdata-LicenseInfo-LicenseHolder" varchar,
"attributes-url-deu" varchar,
"attributes-url-eng" varchar,
"attributes-url-ita" varchar,
"attributes-name-deu" varchar,
"attributes-name-eng" varchar,
"attributes-name-ita" varchar
);

ALTER TABLE "v_venuesopen" ADD PRIMARY KEY ("id");

DROP FUNCTION IF EXISTS v_venuesopen_fn CASCADE;

CREATE FUNCTION v_venuesopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_venuesopen
SELECT
CAST(NEW."data"->>'id' As varchar) AS "id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->'meta'->>'lastUpdate' As varchar) AS "meta-lastUpdate",
CAST(NEW."data"->'meta'->>'dataProvider' As varchar) AS "meta-dataProvider",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'links'->>'self' As varchar) AS "links-self",
CAST(NEW."data"->'odhdata'->>'Active' As bool) AS "odhdata-Active",
CAST(NEW."data"->'odhdata'->>'Source' As varchar) AS "odhdata-Source",
CAST(NEW."data"->'odhdata'->>'ODHActive' As bool) AS "odhdata-ODHActive",
CAST(NEW."data"->'odhdata'->>'RoomCount' As integer) AS "odhdata-RoomCount",
CAST(NEW."data"->'odhdata'->>'Shortname' As varchar) AS "odhdata-Shortname",
CAST(NEW."data"->'odhdata'->>'SyncSourceInterface' As varchar) AS "odhdata-SyncSourceInterface",
CAST(NEW."data"->'odhdata'->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "odhdata-GpsPoints-position-Gpstype",
CAST(NEW."data"->'odhdata'->'GpsPoints'->'position'->>'Latitude' As float) AS "odhdata-GpsPoints-position-Latitude",
CAST(NEW."data"->'odhdata'->'GpsPoints'->'position'->>'Longitude' As float) AS "odhdata-GpsPoints-position-Longitude",
CAST(NEW."data"->'odhdata'->'LicenseInfo'->>'Author' As varchar) AS "odhdata-LicenseInfo-Author",
CAST(NEW."data"->'odhdata'->'LicenseInfo'->>'License' As varchar) AS "odhdata-LicenseInfo-License",
CAST(NEW."data"->'odhdata'->'LicenseInfo'->>'ClosedData' As bool) AS "odhdata-LicenseInfo-ClosedData",
CAST(NEW."data"->'odhdata'->'LicenseInfo'->>'LicenseHolder' As varchar) AS "odhdata-LicenseInfo-LicenseHolder",
CAST(NEW."data"->'attributes'->'url'->>'deu' As varchar) AS "attributes-url-deu",
CAST(NEW."data"->'attributes'->'url'->>'eng' As varchar) AS "attributes-url-eng",
CAST(NEW."data"->'attributes'->'url'->>'ita' As varchar) AS "attributes-url-ita",
CAST(NEW."data"->'attributes'->'name'->>'deu' As varchar) AS "attributes-name-deu",
CAST(NEW."data"->'attributes'->'name'->>'eng' As varchar) AS "attributes-name-eng",
CAST(NEW."data"->'attributes'->'name'->>'ita' As varchar) AS "attributes-name-ita";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_venuesopen
    BEFORE INSERT
    ON venuesopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_venuesopen_fn();

ALTER TABLE venuesopen
    ENABLE ALWAYS TRIGGER t_v_venuesopen;



DROP TABLE IF EXISTS "v_venuetypes";

CREATE TABLE "v_venuetypes" (
"id" varchar,
"code" varchar,
"type" varchar,
"name-deu" varchar,
"name-eng" varchar,
"name-ita" varchar
);

ALTER TABLE "v_venuetypes" ADD PRIMARY KEY ("id");

DROP FUNCTION IF EXISTS v_venuetypes_fn CASCADE;

CREATE FUNCTION v_venuetypes_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_venuetypes
SELECT
CAST(NEW."data"->>'id' As varchar) AS "id",
CAST(NEW."data"->>'code' As varchar) AS "code",
CAST(NEW."data"->>'type' As varchar) AS "type",
CAST(NEW."data"->'name'->>'deu' As varchar) AS "name-deu",
CAST(NEW."data"->'name'->>'eng' As varchar) AS "name-eng",
CAST(NEW."data"->'name'->>'ita' As varchar) AS "name-ita";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_venuetypes
    BEFORE INSERT
    ON venuetypes
    FOR EACH ROW
    EXECUTE PROCEDURE v_venuetypes_fn();

ALTER TABLE venuetypes
    ENABLE ALWAYS TRIGGER t_v_venuetypes;



DROP TABLE IF EXISTS "v_webcams";

CREATE TABLE "v_webcams" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"WebcamId" varchar,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"Streamurl" varchar,
"LastChange" varchar,
"FirstImport" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"GpsInfo-Gpstype" varchar,
"GpsInfo-Altitude" float,
"GpsInfo-Latitude" float,
"GpsInfo-Longitude" float,
"GpsInfo-AltitudeUnitofMeasure" varchar,
"GpsPoints-position-Gpstype" varchar,
"GpsPoints-position-Altitude" float,
"GpsPoints-position-Latitude" float,
"GpsPoints-position-Longitude" float,
"GpsPoints-position-AltitudeUnitofMeasure" varchar,
"Webcamname-de" varchar,
"Webcamname-en" varchar,
"Webcamname-it" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"Webcamurl" varchar,
"Previewurl" varchar,
"Webcamname-cs" varchar,
"Webcamname-fr" varchar,
"Webcamname-nl" varchar,
"Webcamname-pl" varchar,
"Webcamname-ru" varchar
);

ALTER TABLE "v_webcams" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_webcams_fn CASCADE;

CREATE FUNCTION v_webcams_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_webcams
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'WebcamId' As varchar) AS "WebcamId",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'Streamurl' As varchar) AS "Streamurl",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'GpsInfo'->>'Gpstype' As varchar) AS "GpsInfo-Gpstype",
CAST(NEW."data"->'GpsInfo'->>'Altitude' As float) AS "GpsInfo-Altitude",
CAST(NEW."data"->'GpsInfo'->>'Latitude' As float) AS "GpsInfo-Latitude",
CAST(NEW."data"->'GpsInfo'->>'Longitude' As float) AS "GpsInfo-Longitude",
CAST(NEW."data"->'GpsInfo'->>'AltitudeUnitofMeasure' As varchar) AS "GpsInfo-AltitudeUnitofMeasure",
CAST(NEW."data"->'GpsPoints'->'position'->>'Gpstype' As varchar) AS "GpsPoints-position-Gpstype",
CAST(NEW."data"->'GpsPoints'->'position'->>'Altitude' As float) AS "GpsPoints-position-Altitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Latitude' As float) AS "GpsPoints-position-Latitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'Longitude' As float) AS "GpsPoints-position-Longitude",
CAST(NEW."data"->'GpsPoints'->'position'->>'AltitudeUnitofMeasure' As varchar) AS "GpsPoints-position-AltitudeUnitofMeasure",
CAST(NEW."data"->'Webcamname'->>'de' As varchar) AS "Webcamname-de",
CAST(NEW."data"->'Webcamname'->>'en' As varchar) AS "Webcamname-en",
CAST(NEW."data"->'Webcamname'->>'it' As varchar) AS "Webcamname-it",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->>'Webcamurl' As varchar) AS "Webcamurl",
CAST(NEW."data"->>'Previewurl' As varchar) AS "Previewurl",
CAST(NEW."data"->'Webcamname'->>'cs' As varchar) AS "Webcamname-cs",
CAST(NEW."data"->'Webcamname'->>'fr' As varchar) AS "Webcamname-fr",
CAST(NEW."data"->'Webcamname'->>'nl' As varchar) AS "Webcamname-nl",
CAST(NEW."data"->'Webcamname'->>'pl' As varchar) AS "Webcamname-pl",
CAST(NEW."data"->'Webcamname'->>'ru' As varchar) AS "Webcamname-ru";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_webcams
    BEFORE INSERT
    ON webcams
    FOR EACH ROW
    EXECUTE PROCEDURE v_webcams_fn();

ALTER TABLE webcams
    ENABLE ALWAYS TRIGGER t_v_webcams;



DROP TABLE IF EXISTS "v_webcamsopen";

CREATE TABLE "v_webcamsopen" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"OdhActive" bool,
"SmgActive" bool,
"Webcamurl" varchar,
"LastChange" varchar,
"FirstImport" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar,
"Streamurl" varchar
);

ALTER TABLE "v_webcamsopen" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_webcamsopen_fn CASCADE;

CREATE FUNCTION v_webcamsopen_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_webcamsopen
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'Webcamurl' As varchar) AS "Webcamurl",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder",
CAST(NEW."data"->>'Streamurl' As varchar) AS "Streamurl";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_webcamsopen
    BEFORE INSERT
    ON webcamsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_webcamsopen_fn();

ALTER TABLE webcamsopen
    ENABLE ALWAYS TRIGGER t_v_webcamsopen;



DROP TABLE IF EXISTS "v_webcamsopen_PublishedOn";

CREATE TABLE  "v_webcamsopen_PublishedOn" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_webcamsopen_PublishedOn_fn CASCADE;

CREATE FUNCTION v_webcamsopen_PublishedOn_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_webcamsopen_PublishedOn"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'PublishedOn') AS "data"
        WHERE NEW."data" -> 'PublishedOn' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_webcamsopen_PublishedOn
    BEFORE INSERT
    ON webcamsopen
    FOR EACH ROW
    EXECUTE PROCEDURE v_webcamsopen_PublishedOn_fn();

ALTER TABLE webcamsopen
    ENABLE ALWAYS TRIGGER t_v_webcamsopen_PublishedOn;



DROP TABLE IF EXISTS "v_wines";

CREATE TABLE "v_wines" (
"Id" varchar,
"Self" varchar,
"Active" bool,
"Source" varchar,
"Vintage" integer,
"CustomId" varchar,
"Awardyear" integer,
"CompanyId" varchar,
"OdhActive" bool,
"Shortname" varchar,
"SmgActive" bool,
"LastChange" varchar,
"FirstImport" varchar,
"_Meta-Id" varchar,
"_Meta-Type" varchar,
"_Meta-Source" varchar,
"_Meta-Reduced" bool,
"_Meta-LastUpdate" varchar,
"Detail-de-Title" varchar,
"Detail-de-Header" varchar,
"Detail-de-Language" varchar,
"Detail-en-Title" varchar,
"Detail-en-Header" varchar,
"Detail-en-Language" varchar,
"Detail-it-Title" varchar,
"Detail-it-Header" varchar,
"Detail-it-Language" varchar,
"Company-Id" varchar,
"Company-Self" varchar,
"LicenseInfo-Author" varchar,
"LicenseInfo-License" varchar,
"LicenseInfo-ClosedData" bool,
"LicenseInfo-LicenseHolder" varchar
);

ALTER TABLE "v_wines" ADD PRIMARY KEY ("Id");

DROP FUNCTION IF EXISTS v_wines_fn CASCADE;

CREATE FUNCTION v_wines_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public.v_wines
SELECT
CAST(NEW."data"->>'Id' As varchar) AS "Id",
CAST(NEW."data"->>'Self' As varchar) AS "Self",
CAST(NEW."data"->>'Active' As bool) AS "Active",
CAST(NEW."data"->>'Source' As varchar) AS "Source",
CAST(NEW."data"->>'Vintage' As integer) AS "Vintage",
CAST(NEW."data"->>'CustomId' As varchar) AS "CustomId",
CAST(NEW."data"->>'Awardyear' As integer) AS "Awardyear",
CAST(NEW."data"->>'CompanyId' As varchar) AS "CompanyId",
CAST(NEW."data"->>'OdhActive' As bool) AS "OdhActive",
CAST(NEW."data"->>'Shortname' As varchar) AS "Shortname",
CAST(NEW."data"->>'SmgActive' As bool) AS "SmgActive",
CAST(NEW."data"->>'LastChange' As varchar) AS "LastChange",
CAST(NEW."data"->>'FirstImport' As varchar) AS "FirstImport",
CAST(NEW."data"->'_Meta'->>'Id' As varchar) AS "_Meta-Id",
CAST(NEW."data"->'_Meta'->>'Type' As varchar) AS "_Meta-Type",
CAST(NEW."data"->'_Meta'->>'Source' As varchar) AS "_Meta-Source",
CAST(NEW."data"->'_Meta'->>'Reduced' As bool) AS "_Meta-Reduced",
CAST(NEW."data"->'_Meta'->>'LastUpdate' As varchar) AS "_Meta-LastUpdate",
CAST(NEW."data"->'Detail'->'de'->>'Title' As varchar) AS "Detail-de-Title",
CAST(NEW."data"->'Detail'->'de'->>'Header' As varchar) AS "Detail-de-Header",
CAST(NEW."data"->'Detail'->'de'->>'Language' As varchar) AS "Detail-de-Language",
CAST(NEW."data"->'Detail'->'en'->>'Title' As varchar) AS "Detail-en-Title",
CAST(NEW."data"->'Detail'->'en'->>'Header' As varchar) AS "Detail-en-Header",
CAST(NEW."data"->'Detail'->'en'->>'Language' As varchar) AS "Detail-en-Language",
CAST(NEW."data"->'Detail'->'it'->>'Title' As varchar) AS "Detail-it-Title",
CAST(NEW."data"->'Detail'->'it'->>'Header' As varchar) AS "Detail-it-Header",
CAST(NEW."data"->'Detail'->'it'->>'Language' As varchar) AS "Detail-it-Language",
CAST(NEW."data"->'Company'->>'Id' As varchar) AS "Company-Id",
CAST(NEW."data"->'Company'->>'Self' As varchar) AS "Company-Self",
CAST(NEW."data"->'LicenseInfo'->>'Author' As varchar) AS "LicenseInfo-Author",
CAST(NEW."data"->'LicenseInfo'->>'License' As varchar) AS "LicenseInfo-License",
CAST(NEW."data"->'LicenseInfo'->>'ClosedData' As bool) AS "LicenseInfo-ClosedData",
CAST(NEW."data"->'LicenseInfo'->>'LicenseHolder' As varchar) AS "LicenseInfo-LicenseHolder";
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_wines
    BEFORE INSERT
    ON wines
    FOR EACH ROW
    EXECUTE PROCEDURE v_wines_fn();

ALTER TABLE wines
    ENABLE ALWAYS TRIGGER t_v_wines;



DROP TABLE IF EXISTS "v_wines_Awards";

CREATE TABLE  "v_wines_Awards" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_wines_Awards_fn CASCADE;

CREATE FUNCTION v_wines_Awards_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_wines_Awards"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'Awards') AS "data"
        WHERE NEW."data" -> 'Awards' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_wines_Awards
    BEFORE INSERT
    ON wines
    FOR EACH ROW
    EXECUTE PROCEDURE v_wines_Awards_fn();

ALTER TABLE wines
    ENABLE ALWAYS TRIGGER t_v_wines_Awards;



DROP TABLE IF EXISTS "v_wines_HasLanguage";

CREATE TABLE  "v_wines_HasLanguage" (
"Id" varchar,
"data" varchar
);

DROP FUNCTION IF EXISTS v_wines_HasLanguage_fn CASCADE;

CREATE FUNCTION v_wines_HasLanguage_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_wines_HasLanguage"
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements_text(NEW."data" -> 'HasLanguage') AS "data"
        WHERE NEW."data" -> 'HasLanguage' != 'null';
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_wines_HasLanguage
    BEFORE INSERT
    ON wines
    FOR EACH ROW
    EXECUTE PROCEDURE v_wines_HasLanguage_fn();

ALTER TABLE wines
    ENABLE ALWAYS TRIGGER t_v_wines_HasLanguage;



DROP TABLE IF EXISTS "v_wines_ImageGallery";

CREATE TABLE "v_wines_ImageGallery" (
"wines_Id" varchar,
"Width" integer,
"Height" integer,
"ImageUrl" varchar,
"ImageName" varchar,
"ImageSource" varchar,
"IsInGallery" bool,
"ListPosition" integer
);

DROP FUNCTION IF EXISTS v_wines_ImageGallery_fn CASCADE;

CREATE FUNCTION v_wines_ImageGallery_fn()
RETURNS TRIGGER
AS $$
BEGIN
INSERT INTO public."v_wines_ImageGallery"
WITH t ("Id", "data") AS (
        SELECT CAST(NEW."data"->>'Id' As varchar) AS "Id",
            jsonb_array_elements(NEW."data" -> 'ImageGallery') AS "data"
        WHERE NEW."data" -> 'ImageGallery' != 'null')
    SELECT "Id" AS "wines_Id", CAST("data"->>'Width' As integer) AS "Width",
CAST("data"->>'Height' As integer) AS "Height",
CAST("data"->>'ImageUrl' As varchar) AS "ImageUrl",
CAST("data"->>'ImageName' As varchar) AS "ImageName",
CAST("data"->>'ImageSource' As varchar) AS "ImageSource",
CAST("data"->>'IsInGallery' As bool) AS "IsInGallery",
CAST("data"->>'ListPosition' As integer) AS "ListPosition"
    FROM t;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER t_v_wines_ImageGallery
    BEFORE INSERT
    ON wines
    FOR EACH ROW
    EXECUTE PROCEDURE v_wines_ImageGallery_fn();

ALTER TABLE wines
    ENABLE ALWAYS TRIGGER t_v_wines_ImageGallery;


